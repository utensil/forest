# Credits:
#
# - [Felix' Blog - A Review of Helix after 1.5 Years](https://felix-knorr.net/posts/2025-03-16-helix-review.html)
# - https://github.com/TimothyYe/mydotfiles/blob/51160e906cf9c1192bc75ea8f76e92f628f097d6/helix/config.toml#L19
# - https://github.com/kristijanhusak/neovim-config/blob/2e1b956910ed635d60631940b3fdd6782352b601/helix/config.toml#L4
# - https://github.com/mimame/.dotfiles/blob/81d1c6caa6d28ed223d54b3067311743300b8f6d/helix/config.toml#L10
# - [Enhancing Your Helix Editor: A Guide to Optimal Configuration | Ari Seyhun](https://tqwewe.com/blog/enhanced-helix-config/)

# :config-reload or just ret+r to apply changes
# theme = "onedark"
# theme = "github_dark"
# theme = "tokyonight_moon"
# theme = "catppuccin_mocha"
# theme = "base16_default_dark"
# theme = "material_darker"
# theme = "term16_dark" # image background
# theme = "base16-railscasts"
# theme = "alevia-dark"
theme = "alevia-railscasts"

[editor.file-picker]
hidden = false

[editor]
# Use relative line numbers
line-number = "relative"
# mouse = false
# Force the theme to show colors
true-color = true
color-modes = true
# auto-completion = true
# Show currently open buffers, only when more than one exists.
bufferline = "multiple"
# Highlight all lines with a cursor
cursorline = true
# Minimum severity to show a diagnostic after the end of a line
# end-of-line-diagnostics = "hint"

[editor.inline-diagnostics]
cursor-line = "error" # Show inline diagnostics when the cursor is on the line
other-lines = "disable" # Don't expand diagnostics unless the cursor is on the line

[editor.auto-save]
# focus-lost = true
#

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
# Remove auto-pairing for `, as it's not friendly to ```
# '`' = '`'
'<' = '>'

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
render = true
character = "▏"

[editor.statusline]
left = ["mode", "spacer", "version-control", "file-name", "file-modification-indicator", "register"]
right = ["diagnostics", "spacer", "spinner", "spacer", "file-type", "separator", "position", "separator", "spacer", "position-percentage"]
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.lsp]
# Display LSP progress messages below statusline
display-messages = true
# Disable automatically popups of signature parameter help
auto-signature-help = false
# Don't display inlay hints be default
# ret+t (meaning type) to toggle
display-inlay-hints = false
# Display LSP progress messages below statusline
display-progress-messages = true

# [editor.word-completion]
# enable = true
# # Set the trigger length lower so that words are completed more often
# trigger-length = 4

[editor.whitespace]
# Whether to render whitespace
render = "none"

[editor.whitespace.characters]
# Literal characters to use when rendering whitespace
# Sub-keys may be any of
# Options for rendering whitespace with visible characters.
# Use `:set whitespace.render all` to temporarily enable visible whitespace.
# Use `:set whitespace.render none` to disable again
# Or, simply use ret+v to toggle
space = "·"
nbsp = "⍽"
tab = "→"
newline = "↩" # ↵ ⏎ ↩

[editor.soft-wrap]
enable = true

[keys.normal]
"A-," = "goto_previous_buffer"
"A-." = "goto_next_buffer"
"A-w" = ":buffer-close"
# remap what A-. did
"A-/" = "repeat_last_motion"
"V" = ["select_mode", "goto_line_end"]
# shrink your selection by one line
X = "select_line_above"
# remap what X did
# note: A-x was shrink_to_line_bounds
"A-x" = "extend_to_line_bounds"
# same for select mode
[keys.select]
X = "select_line_above"
"A-x" = "extend_to_line_bounds"

# Keep most of my personal keymap under ret
# ret means enter
[keys.normal.ret]

# reload config and lsp
r = [":config-reload", ":reload-all", ":lsp-restart"]

# close window
q = ":q"

# close tab
c = ":buffer-close"
C = ":buffer-close!"

# prev/next tab
"[" = "goto_previous_buffer"
"]" = "goto_next_buffer"

# save file
ret = ":w"
w = ":w"

# toggle whitespace render
v = ":toggle-option whitespace.render all none"

# Really escape - no more fighting with the cursor or with multiple cursors
# esc = ;,esc
# Not working as it only stops the key seqence
# esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]

# toggle lsp hints
t = ":toggle-option lsp.display-inlay-hints"

# set lang
m = ":lang markdown"

# open log
l = ":log-open"

# Open TUIs

# scooter - search & replace in workspace - ctrl-c to quit
"/" = [
    ":write-all",
    ":new",
    ":insert-output scooter > /dev/tty",
    ":set mouse false",
    ":set mouse true",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]
# lazygit - q to quit
g = [
    ":write-all",
    ":new",
    ":insert-output lazygit",
    ":set mouse false",
    ":set mouse true",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]

# jjui
j = [
    ":write-all",
    ":new",
    ":insert-output jjui > /dev/tty",
    ":set mouse false",
    ":set mouse true",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]

# yazi
# https://www.reddit.com/r/HelixEditor/comments/1kwk74i/trying_to_use_yazi_inside_of_helix/
# https://github.com/sxyazi/yazi/pull/2461
# requires helix HEAD and latest yazi
y = [
    ':sh rm -f /tmp/yazi-uniq-file',
    ':insert-output yazi %{buffer_name} --chooser-file=/tmp/yazi-uniq-file > /dev/tty',
    ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
    ":set mouse false",
    ":set mouse true",
    ':open %sh{cat /tmp/yazi-uniq-file}',
    ':redraw',
]
