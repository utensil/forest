\import{macros}
% clifford hopf spin tt ag math draft tech exp notes readings
\tag{root}
% \meta{permlink}{reading-diary}

\put\transclude/numbered{false}

\loadjs{activity.js}

\note{Learning diary}{
\p{I wish to keep a learning diary, to keep track of partial reading progress, and things learned during making things.
}

\<html:div>[id]{learning-activity}{}

% open links in editor by Cmd+Shift+Click , but this breaks if the line is soft wrapped
% gf can open URL in helix, might need `mimgf` sometimes

\subtree[2025]{
\title{Year 2025}

\subtree[2025-09]{
\title{September, 2025}

\subtree[2025-09-07]{\mdnote{2025-09-07}{
- #zig
    - [Hitting Peak File IO Performance with Zig](https://steelcake.com/blog/nvme-zig/)
        - [axboe/fio: Flexible I/O Tester](https://github.com/axboe/fio)
        - [steelcake/csio: Cooperative scheduling and IO library](https://github.com/steelcake/csio)
        - [DataDog/glommio: Glommio is a thread-per-core crate that makes writing highly parallel asynchronous applications in a thread-per-core architecture easier for rustaceans.](https://github.com/DataDog/glommio)
        - [steelcake](https://steelcake.com/blog/comparing-io-uring/)
- #jj
    - [Let `jj absorb` help you keep a clean commit history](https://www.pauladamsmith.com/blog/2025/08/jj-absorb.html)
    - [Merge Conflicts: Avoiding Them, Making Them Less Painful | Games by Mason](https://gamesbymason.com/blog/2021/merge-conflicts/)
    - [Quuxplusone/difdef: Utility to do an N-way diff and N-way merge, for N2. Uses the patience diff algorithm.](https://github.com/Quuxplusone/difdef)
- #disect
    - [Video compression basics – RasterGrid | Software Consultancy](https://www.rastergrid.com/blog/multimedia/2021/05/video-compression-basics/) #cut
    - [A Secret Web](https://blog.clew.se/posts/secret-web/)
    - [In-memory Filesystems in Rust](https://andre.arko.net/2025/08/18/in-memory-filesystems-in-rust/) #rust #os
}}

\subtree[2025-09-06]{\mdnote{2025-09-06}{
- [Making a font of my handwriting · Chameth.com](https://chameth.com/making-a-font-of-my-handwriting/) #design
    - [On HN](https://news.ycombinator.com/item?id=45141636)
        - https://ownfonts.cielo.ovh/
        - https://www.amygoodchild.com/blog/cursive-handwriting-in-javascript

    > Calligraphr works by having you print templates, write out the letters, then scan them in.

    > I added the “minimal English”, “basic punctuation” and “Ligatures” sets.

- #ph
    - [basketballguy999/Quantum-Mechanics-Concise-Book: A concise text on quantum mechanics, intended for a general audience including CS, engineering, math, and physics undergrads, as well as anyone interested in a concise intro/overview of QM. Prerequisites: linear algebra, calculus, high school physics](https://github.com/basketballguy999/Quantum-Mechanics-Concise-Book)
    - [This idea must die](https://robwilson1.wordpress.com/2025/08/18/this-idea-must-die/)
- #formal
    - [Formality on demand](https://www.inkandswitch.com/ink/notes/formality-on-demand/)
}}

\subtree[2025-09-03]{\mdnote{2025-09-03}{
- #rust
    - [Stackerror](https://gmcgoldr.github.io/2025/08/21/stackerror.html)
    - [the core of rust](https://jyn.dev/the-core-of-rust/)
        - https://without.boats/blog/revisiting-a-smaller-rust/
    - [There is no memory safety without thread safety](https://www.ralfj.de/blog/2025/07/24/memory-safety.html) ([on HN](https://news.ycombinator.com/item?id=44672003)) ([on lobste.rs](https://lobste.rs/s/omasxh))
    - [Default musl allocator considered harmful (to performance)](https://nickb.dev/blog/default-musl-allocator-considered-harmful-to-performance/)
- #agent
    - [Agentic ProbLLMs - The Month of AI Bugs 2025](https://monthofaibugs.com/) #sec
        - [On lobste.rs](https://lobste.rs/s/cr9eqw/month_ai_bugs_2025)
    - [AGENTS.md](https://agents.md/)
    - [A Guide to Gen AI / LLM Vibecoding for Expert Programmers - Stochastic Lifestyle](https://www.stochasticlifestyle.com/a-guide-to-gen-ai-llm-vibecoding-for-expert-programmers/)
        - [On HN](https://news.ycombinator.com/item?id=44985207)
    - [Language Models as Thespians](https://jstrieb.github.io/posts/llm-thespians/)
        - [On lobste.rs](https://lobste.rs/s/fqhfqc/language_models_as_thespians)
- #agent/idea
    - [DeepSeek v3.1 Is Not Having a Moment](https://thezvi.wordpress.com/2025/08/22/deepseek-v3-1-is-not-having-a-moment/)
    - [Vibe Debugging: Enterprises' Up and Coming Nightmare](https://marketsaintefficient.substack.com/p/vibe-debugging-enterprises-up-and)
    - [Bank forced to rehire workers after lying about chatbot productivity, union says](https://arstechnica.com/tech-policy/2025/08/bank-forced-to-rehire-workers-after-lying-about-chatbot-productivity-union-says/)
    - [The Unbearable Slowness of AI Coding](https://joshuavaldez.com/the-unbearable-slowness-of-ai-coding/)
    - [Why language models hallucinate](https://openai.com/index/why-language-models-hallucinate/)
    - [Simon Willison | A quote from u/AssafMalkiIL](https://simonwillison.net/2025/Aug/20/bad-vibes/)

        > what’s the point of vibe coding if at the end of the day i still gotta pay a dev to look at the code anyway.

        > i cant vibe my way through debugging, i cant ship anything that actually matters, and then i’m back to square one pulling out my wallet for someone who actually knows what they’re doing.

    - [You can now disable all AI features in Zed](https://zed.dev/blog/disable-ai-features) ([on HN](https://news.ycombinator.com/item?id=44660519))
- #openweb
    - [No, Google Did Not Unilaterally Decide to Kill XSLT](https://meyerweb.com/eric/thoughts/2025/08/22/no-google-did-not-unilaterally-decide-to-kill-xslt/)
    - [Should the web platform adopt XSLT 3.0? · Issue #11578 · whatwg/html](https://github.com/whatwg/html/issues/11578)
    - [Croissant is Coming for You](https://dbushell.com/2025/07/18/croissant-is-coming-for-you/)
    - [XSLT: A Precision Tool for the Future of Structured Transformation](https://www.xml.com/articles/2025/07/19/xslt-precision-tool-future-structured-transformation/) ([on HN](https://news.ycombinator.com/item?id=44633384))
- #disect
    - [Bash Strict Mode](http://redsymbol.net/articles/unofficial-bash-strict-mode/)
        - I should review my scripts based on what's learned from this
        - [Getting decent error reports in Bash when you're using 'set -e'](https://utcc.utoronto.ca/~cks/space/blog/programming/BashGoodSetEReports) ([on HN](https://news.ycombinator.com/item?id=44666984)) ([on lobste.rs](https://lobste.rs/s/hhcapy))
        - [Heredocs Can Make Your Bash Scripts Self-Documenting](https://holdtherobot.com/blog/heredocs-can-make-your-bash-scripts-self-documenting/)
    - [Introduction to AT Protocol](https://mackuba.eu/2025/08/20/introduction-to-atproto/) #fediverse
            - [On HN](https://news.ycombinator.com/item?id=44965233)
    - #gpu
        - [Learning About GPUs Through Measuring Memory Bandwidth | Evolve](https://www.evolvebenchmark.com/blog-posts/learning-about-gpus-through-measuring-memory-bandwidth)
        - [How to Think About GPUs | How To Scale Your Model](https://jax-ml.github.io/scaling-book/gpus/)
                - [On HN](https://news.ycombinator.com/item?id=44943666)
}}

\subtree[2025-09-02]{\mdnote{2025-09-02}{
- #selfhost
    - [Static Sites with Python, uv, Caddy, and Docker | Blog | Nik Kantar](https://nkantar.com/blog/2025/08/static-python-uv-caddy-docker/)
        - [Coolify Docs](https://coolify.io/docs/get-started/introduction)
    - [GDPR-compliant European static site hosting - statichost.eu](https://www.statichost.eu/)
            - https://www.statichost.eu/blog/statichost-hosting/
- #tui
    - [jocalsend - Terminal Trove](https://terminaltrove.com/feed/jocalsend/) #selfhost/data
    - [hapless - Terminal Trove](https://terminaltrove.com/feed/hapless/)
- #openweb
    - [Google is killing the open web](https://wok.oblomov.eu/tecnologia/google-killing-open-web/) #openweb
            - [On HN](https://news.ycombinator.com/item?id=44949857)
            - [On lobste.rs](https://lobste.rs/s/8lti4g/google_is_killing_open_web)
    - [Simon Willison | XSLT on congress.gov](https://simonwillison.net/2025/Aug/19/xslt/)
    - [Remove mentions of XSLT from the html spec by mfreed7 · Pull Request #11563 · whatwg/html](https://github.com/whatwg/html/pull/11563)
        - [On HN](https://news.ycombinator.com/item?id=44952185)
- [D2 (text to diagram tool) now supports ASCII renders](https://d2lang.com/blog/ascii/) #diagram
- #browser
    - [How to firefox](https://kau.sh/blog/how-to-firefox/) ([on HN](https://news.ycombinator.com/item?id=44645353))
    - [Why I'm all-in on Zen Browser](https://werd.io/why-im-all-in-on-zen-browser/)
            - [On HN](https://news.ycombinator.com/item?id=44951799)
            - https://addons.mozilla.org/en-US/firefox/addon/sidebery/
            - https://github.com/mbnuqw/sidebery/wiki/Firefox-Styles-Snippets-(via-userChrome.css)
            - https://github.com/greeeen-dev/natsumi-browser
            - https://github.com/akkva/gwfox
    - [How I Use Kagi](https://flamedfury.com/posts/how-i-use-kagi/)
        - [on HN](https://news.ycombinator.com/item?id=44594475)
- #sec
    - [A Brief, Incomplete, and Mostly Subjective History of Internet censorship and its countermeasures](https://danglingpointer.fun/posts/GFWHistory)
    - [Simon Willison | PyPI: Preventing Domain Resurrection Attacks](https://simonwillison.net/2025/Aug/19/pypi-preventing-domain-resurrection-attacks/) #py
        - [Preventing Domain Resurrection Attacks (on the Python Package Index)](https://blog.pypi.org/posts/2025-08-18-preventing-domain-resurrections/) #py
            - [On HN](https://news.ycombinator.com/item?id=44950091)
    - [Vet is a safety net for the curl | bash pattern](https://github.com/vet-run/vet) ([on HN](https://news.ycombinator.com/item?id=44669998))
        - [Don’t distribute packages via curl | sh (but not for the reasons you think) - HedgeDoc](https://docs.sweeting.me/s/against-curl-sh)
}}


\subtree[2025-09-01]{\mdnote{2025-09-01}{
- [PixiEditor](https://pixieditor.net/) #cg
- #idea
    - [Left to Right Programming](https://graic.net/p/left-to-right-programming)
        - [On HN](https://news.ycombinator.com/item?id=44942936)
        - [On lobste.rs](https://lobste.rs/s/ik0pjv/left_right_programming)
    - [Why developers question everything - Tim Hårek](https://timharek.no/blog/why-developers-question-everything/)
        - [On lobste.rs](https://lobste.rs/s/bibyfi/why_developers_question_everything)
}}

}

\subtree[2025-08]{
\title{August, 2025}

\subtree[2025-08-25]{\mdnote{2025-08-25}{
- #zig
    - [zg: Unicode text processing for Zig projects](https://codeberg.org/atman/zg)
    - [Zig; what I think after months of using it](https://strongly-typed-thoughts.net/blog/zig-2025)

        > Focus on debugging your application rather than debugging your programming language knowledge.

        > A structure has two sizes: its bit-size, and its byte-size.

        > A regular value T coerces to E!T, and an error type E coerces to E!T

        > You can iterate on the contents of c with an inline for at comptime to transform functions the way you want.

    - [Packaging Zig as Python packages](https://ziggit.dev/t/packaging-zig-as-python-packages/7084) #py #pkg
    - [The Python Package Index Should Get Rid Of Its Training Wheels](https://kristoff.it/blog/python-training-wheels/) #py
    - [Zig Parser](https://mitchellh.com/zig/parser) #disect
    - [Retro Rogue-Like: Modular Programming in C](https://retrogamecoders.com/getting-organized-modular-programming-in-c)
    - [Looking for examples of clean zig APIs](https://www.reddit.com/r/Zig/comments/1mubgzk/looking_for_examples_of_clean_zig_apis)
        - [vrischmann/zig-sqlite: zig-sqlite is a small wrapper around sqlite's C API, making it easier to use with Zig.](https://github.com/vrischmann/zig-sqlite)
        - [Mario-SO/ohlcv: OHLCV library in zig](https://github.com/Mario-SO/ohlcv)
        - [(266) Code Guild](https://www.youtube.com/@Code-Guild)
- #lean
    - [Lean Game Server](https://adam.math.hhu.de/)
    - [Doing Lean Dirty: Lean as a Jupyter Notebook Replacement](https://www.philipzucker.com/dirty_lean/)
        - https://types.pl/@sandmouth/114813276765190938
- tooling
    - [Enforce Proper direnv Setup](https://lobste.rs/s/pm5vdm) #mise
    - #helix
        - [Helix Plugins](https://helix-plugins.com/)
        - [Are any of these features available in Helix? · helix-editor helix · Discussion #3156](https://github.com/helix-editor/helix/discussions/3156)
        - [feat: support using Yazi in Helix directly without Zellij or tmux by sxyazi · Pull Request #2461 · sxyazi/yazi](https://github.com/sxyazi/yazi/pull/2461)
        - [try to use yazi inside of helix](https://www.reddit.com/r/HelixEditor/s/nWqxh3wPqx)

        - [helix-editor/helix#1125: automatic reload when file changes externally](https://github.com/helix-editor/helix/issues/1125)
    - #mac/wm
        - [nikitabobko/AeroSpace: AeroSpace is an i3-like tiling window manager for macOS](https://github.com/nikitabobko/AeroSpace)
        - [AeroSpace](https://sspai.com/post/84935)
- #tui
    - [habedi/chilli: A microframework for creating command-line applications in Zig](https://github.com/habedi/chilli/tree/main)
    - [Todomvc tui](https://sr.ht/~hedy/todomvc-tui/)
    - [helix/helix-tui at master · helix-editor/helix](https://github.com/helix-editor/helix/tree/master/helix-tui)
- #typst
    - [The Math Mode Problem | Laurenz's Blog](https://laurmaedje.github.io/posts/math-mode-problem/)
    - [The (Typst) Math Mode Problem | Laurenz's Blog : r/typst](https://www.reddit.com/r/typst/s/xxj5aReLyt)
- #cpp/interop
    - [robertoraggi/cplusplus: A compiler front end for the C++ language](https://github.com/robertoraggi/cplusplus)
    - [shedskin/shedskin: Shed Skin is a restricted-Python-to-C++ compiler. Read the introduction below to learn about the restrictions.](https://github.com/shedskin/shedskin)
- [Are "w/o", "w/", "b/c" common abbreviations in the US?](https://english.stackexchange.com/questions/115367/are-w-o-w-b-c-common-abbreviations-in-the-us) #natlang
- [Tommaso Gagliardoni's Homepage](https://gagliardoni.net/) #qc
    - a reply to *Replication of Quantum Factorisation Records with an 8-bit Home Computer, an Abacus, and a Dog*
- [A Diagrammatic Calculus for a Functional Model of Natural Language...](https://arxiv.org/abs/2507.00782) #diagram #paper
}}

\subtree[2025-08-24]{\mdnote{2025-08-24}{
- #sovereign
    - #kb
        - [Writing Documentation and Prose in Markdown Using Helix](https://helix-editor-tutorials.com/tutorials/writing-documentation-and-prose-in-markdown-using-helix/)

            > :reflow is Helix’s version of hard wrap and makes permanent changes to your formatting. The line length can be set with text-width in your config.

            > Type [ to automatically create a pair using automatic pair completion, then type the image link text inside it.

            > Press Tab to skip over the closing ] using the smart tab feature.

            > Marksman helps you quickly find and jump to specific headings or anchor tags in a document.

            > Open the Symbol Picker: Press Space s.

            > Vale stands out by enforcing custom style guides for technical writing alongside spell checking, though its grammar checking is less advanced. Its newly introduced language server is still basic.

        - [Reading and writing notes with yazi and helix](https://blog.ctms.me/posts/2024-08-22-notes-with-yazi-helix-glow/) #helix
        - [xwmx/nb: CLI and local web plain text note‑taking, bookmarking, and archiving with linking, tagging, filtering, search, Git versioning & syncing, Pandoc conversion, + more, in a single portable script.](https://github.com/xwmx/nb) #tui
        - [Building Bluesky Comments for My Blog](https://natalie.sh/posts/bluesky-comments/)
        - [Raindrops | API Documentation](https://developer.raindrop.io/v1/raindrops)
        - [Switching to Obsidian](https://blog.dante.cool/switching-to-obsidian/)
            - from Notion
        - [Allow me to introduce the two-sentence journal](https://alexanderbjoy.com/two-sentence-journal/) #design

            > A daily journal entry could be as simple as "[description of occurrence] + [its upshot]," adapted as necessary.

            > an interesting thing happens when you present a reader with only two sentences: Somehow, a narrative logic appears.

        - [The append-and-review note](https://karpathy.bearblog.dev/the-append-and-review-note/) ([on HN](https://news.ycombinator.com/item?id=44658745))
            - [Heynote](https://heynote.com/)
        - [Observable Notebooks 2.0 Technology Preview | Observable](https://observablehq.com/notebook-kit/) #nb
        - [Apache ECharts 6](https://echarts.apache.org/handbook/en/basics/release-note/v6-feature/)
            - ECharts is my go-to libary for visualization of data for better interpretability
        - [Ask HN: What Pocket alternatives did you move to?](https://news.ycombinator.com/item?id=44597668)
            - [Obsidian Web Clipper](https://obsidian.md/clipper)
            - [Home - Readeck](https://readeck.org/en/)
    - #kb/dataview
        - [Codeblock Reference - Dataview](https://blacksmithgu.github.io/obsidian-dataview/api/code-reference/)
        - [blacksmithgu/datacore: Work-in-progress successor to Dataview with a focus on UX and speed.](https://github.com/blacksmithgu/datacore)
        - [dsebastien/obsidian-dataview-serializer: Obsidian plugin that gives you the power of Dataview, but generates Markdown, making it compatible with Obsidian Publish, and making the links appear on the Graph.](https://github.com/dsebastien/obsidian-dataview-serializer)
        - [Enveloppe](https://enveloppe.ovh/)
        - ["Burning out" dataviews · Issue #42 · blacksmithgu/obsidian-dataview](https://github.com/blacksmithgu/obsidian-dataview/issues/42)
        - [Support for Dataview JS Snippets · Issue #102 · jackyzha0/quartz](https://github.com/jackyzha0/quartz/issues/102)
        - [7sedam7/krafna: Obsidion dataview plugin-like tool for command line.](https://github.com/7sedam7/krafna)
    - #selfhost/data
        - [embedpdf/embed-pdf-viewer: A PDF viewer that seamlessly integrates with any JavaScript project](https://github.com/embedpdf/embed-pdf-viewer)
        - [What Exif Data Reveals About Your Site](https://brainbaking.com/post/2025/08/what-exif-data-reveals-about-your-site/) #privacy
        - [houqp/kiorg: A hacker's file manager with VIM inspired keybind](https://github.com/houqp/kiorg)
        - [Watchman - A file watching service | Watchman](https://facebook.github.io/watchman/)
        - [pascalkuthe/filesentry: A reliable and performant cached directory tree in rust that can notify changes without dropping events](https://github.com/pascalkuthe/filesentry)
    - #selfhost/data #sec
        - [hashcat - advanced password recovery](https://hashcat.net/hashcat/)
        - [Brute-Force VeraCrypt Encryption – CodeOnBy](https://codeonby.com/2022/01/19/brute-force-veracrypt-encryption/)
        - [trufflesecurity/trufflehog: Find, verify, and analyze leaked credentials](https://github.com/trufflesecurity/trufflehog)
    - #forge
        - [GitHero](https://githero.app/)
        - [GitHub is no longer independent at Microsoft after CEO resignation | Hacker News](https://www.theverge.com/news/757461/microsoft-github-thomas-dohmke-resignation-coreai-team-transition)
            - [On HN](https://news.ycombinator.com/item?id=44865560)
            - [Give Up GitHub - Software Freedom Conservancy](https://sfconservancy.org/GiveUpGitHub/)
    - #ci
        - [bahdotsh/wrkflw](https://github.com/bahdotsh/wrkflw)
            - [On lobste.rs](https://lobste.rs/s/6jljsk/wrkflw_validate_run_github_actions)
            - from https://this-week-in-rust.org/blog/2025/08/13/this-week-in-rust-612/
        - [The best developer experience in CI/CD - RWX](https://www.rwx.com/)
        - [Reverse Engineering the GHA Cache to Improve Performance](https://depot.dev/blog/github-actions-cache) ([on HN](https://news.ycombinator.com/item?id=44660041))
            - [Reverse engineering GitHub Actions cache to make it fast | Blacksmith](https://www.blacksmith.sh/blog/cache)
        - [Using Radicle CI for Development](https://radicle.xyz/2025/07/23/using-radicle-ci-for-development) ([on HN](https://news.ycombinator.com/item?id=44658820)) ([on lobste.rs](https://lobste.rs/s/uemodw))
    - #openweb
        - [Mac Open Web, by Brian Warren](https://macopenweb.com/)
        - [Reeder](https://reederapp.com/)
        - [Kill the Newsletter!](https://kill-the-newsletter.com/)
    - [pocketbase/pocketbase: Open Source realtime backend in 1 file](https://github.com/pocketbase/pocketbase) #stack
    - #browser
        - [Ok... even I think that's a bit of a stretch... : r/diabrowser](https://www.reddit.com/r/diabrowser/s/x8cKLLNJkb)
        - [Text browsers · TecharoHQ anubis · Discussion #418](https://github.com/TecharoHQ/anubis/discussions/418)
        - [Arc still going good, btw windows! : r/ArcBrowser](https://www.reddit.com/r/ArcBrowser/s/LFVuC7bW8Q)
        - [Deta Surf](https://deta.surf/)
        - [Orion is the first WebKit browser to feature an Arc-like navigation logic for vertical tabs : r/ArcBrowser](https://www.reddit.com/r/ArcBrowser/s/2GxJnF3yoY)
        - [How are Dia and Arc team the same ? : r/diabrowser](https://www.reddit.com/r/diabrowser/s/hJBnu9EhMf)
- #oss
    - ["This is a Low Maintenance Project"](https://danb.me/blog/low-maintenance-project/)
    - [Open Source is Not About You](https://gist.github.com/richhickey/1563cddea1002958f96e7ba9519972d9)
    - [My FOSS Story - Andrew Gallant's Blog](https://burntsushi.net/foss/#rudeness)
    - [Geomys, a blueprint for a sustainable open source maintenance firm (2024)](https://words.filippo.io/geomys/)
    - [In the long run, GPL code becomes irrelevant (2015)](https://josephg.com/blog/in-the-long-run-gpl-code-becomes-irrelevant/) ([on HN](https://news.ycombinator.com/item?id=44605873))
    - [NIH is cheaper than the wrong dependency](https://lewiscampbell.tech/blog/250718.html) ([on HN](https://news.ycombinator.com/item?id=44600594)) ([on lobste.rs](https://lobste.rs/s/l8a8zq))
    - [NPM 'accidentally' removes Stylus package, breaks builds and pipelines](https://www.bleepingcomputer.com/news/security/npm-accidentally-removes-stylus-package-breaks-builds-and-pipelines/)
    - [Simon Willison | Introducing OSS Rebuild: Open Source, Rebuilt to Last](https://simonwillison.net/2025/Jul/23/oss-rebuild/) #sec

        > the Google Security team have announced OSS Rebuild, their project to provide build attestations for open source packages released through the NPM, PyPI and Crates ecosystom

- #agent/idea
    - [LLM Daydreaming](https://gwern.net/ai-daydreaming)
    - [LLMs aren’t world models](https://yosefk.com/blog/llms-arent-world-models.html)
    - [openai burns the boats](https://ethanding.substack.com/p/openai-burns-the-boats) #biz
    - [Why Does AI Feel So Different? - nilenso blog](https://blog.nilenso.com/blog/2025/08/12/why-does-ai-feel-so-different/)

        > - Thinking by questioning (Socrates)
        > - Thinking by logic (Aristotle)
        > - Thinking by observing: Empiricism / Scientific Method (Bacon)
        > - Thinking by heuristics and biases: System 1 and 2 (Kahneman)
        > - Thinking by… augmentation? (AI)

}}

\subtree[2025-08-22]{\mdnote{2025-08-22}{
- #rust
    - [rosefromthedead/effing-mad: Algebraic effects for Rust](https://github.com/rosefromthedead/effing-mad) #pl
    - [Memory Safety is a Red Herring](https://steveklabnik.com/writing/memory-safety-is-a-red-herring/) #go #cpp
    - [Lessons learned from implementing SIMD-accelerated algorithms (ChaCha20 / ChaCha12) in pure Rust](https://kerkour.com/rust-simd?hn=1) #asm
    - [async-recursion](https://github.com/dcchut/async-recursion) #async
    - [rust-lang/rust-bindgen](https://github.com/rust-lang/rust-bindgen/issues/778) #cpp/interop
    - [krabby: a highly optimized Rust compiler](https://bal-e.org/speed/krabby/)
        - https://sr.ht/~bal-e/krabby/
    - [Krabby: a WIP high-performance Rust compiler](https://sr.ht/~bal-e/krabby/)
    - from https://this-week-in-rust.org/blog/2025/08/13/this-week-in-rust-612/
        - [Building an Asynchronous FUSE Filesystem in Rust](https://r2cn.dev/blog/building-an-asynchronous-fuse-filesystem-in-rust)
        - [Lessons learned from implementing SIMD-accelerated algorithms (ChaCha20 / ChaCha12) in pure Rust](https://kerkour.com/rust-simd) #asm
    - [bliki: Yagni](https://www.martinfowler.com/bliki/Yagni.html) #idea
    - from [parasyte/task-webapp: Stop Web App Bloat!](https://github.com/parasyte/task-webapp) #web
- #gleam
    - [Gleam, coming from Erlang](https://olano.dev/blog/gleam-coming-from-erlang)
    - [Using use in Gleam](https://erikarow.land/notes/using-use-gleam)
    - [Why Elixir? Common misconceptions](https://matthewsinclair.com/blog/0181-why-elixir) ([on HN](https://news.ycombinator.com/item?id=44659251)) #elixir
- [Who Will Maintain Vim? A Demo of Git Who](https://sinclairtarget.com/blog/2025/03/who-will-maintain-vim-a-demo-of-git-who/) #tui
- #py #pkg #biz
    - [pyx: a Python-native package registry, now in Beta](https://astral.sh/blog/introducing-pyx)
        - [Simon Willison | pyx: a Python-native package registry, now in Beta](https://simonwillison.net/2025/Aug/13/pyx/)

            > What I want to do is build software that vertically integrates with our open source tools, and sell that software to companies that are already using Ruff, uv, etc. Alternatives to things that companies already pay for today.

            > stays true to Charlie's promises to carefully design the incentive structure to avoid corrupting the core open source project that the Python community is coming to depend on

- #design
    - [How to make absolutely any app look like a macOS app—Martian Chronicles, Evil Martians’ team blog](https://evilmartians.com/chronicles/how-to-make-absolutely-any-app-look-like-a-macos-app)
    - [font-size-adjust Is Useful](https://matklad.github.io/2025/07/16/font-size-adjust.html)
    - [Why Racket? Why Lisp? | Butterick’s Practical Typography](https://practicaltypography.com/why-racket-why-lisp.html)
    - [Choosing typeface](https://imperavi.com/books/ui-typography/basis/choosing-typeface/)
    - [Welcome to Automerge | Automerge CRDT](https://automerge.org/docs/hello/)
        - [CRDT: Text Buffer - Made by Evan](https://madebyevan.com/algos/crdt-text-buffer/) #struct
        - [Automerge 3.0](https://automerge.github.io/blog/automerge-3/)
    - [I'm Worried It Might Get Bad](https://danielmiessler.com/blog/im-worried-it-might-get-bad) #idea
    - [Blog | Fabián's Journal](https://fabiansjournal.bearblog.dev/blog/)
}}

\subtree[2025-08-05]{\mdnote{2025-08-05}{
- [Simon Willison | Cloudflare Crawler Hints triggers crawls from Yandex and Bingbot - nothing to do with ChatGPT Agent](https://simonwillison.net/2025/Aug/4/chatgpt-agents-agent/#atom-everything)
    - it's actually Crawler Hints by Cloudflare
- [Content-Aware Spaced Repetition](https://www.giacomoran.com/blog/content-aware-sr/)
    - FSRS is both Content-agnostic as well as Deck-agnostic, it might underfit a lot  ([from HN](https://news.ycombinator.com/item?id=44790422))
- [Diagrams For Yourself](https://buttondown.com/jaffray/archive/diagrams-for-yourself/)
    - the author doesn't want to use something off-the-shelf like Mermaid or TikZ, and want it to look bespoke, something homemade with a slightly distinctive style
- #qa
    - [Getting Started with Randomised Testing](https://lewiscampbell.tech/blog/250805.html)
        - Property-Based Testing
            - describe a range of values
            - sample from the range
            - checks if any trigger your assertions
    - [Code Factor](https://www.codefactor.io/features)
        - e.g. [Code Factor | habedi/chilli - Overview](https://www.codefactor.io/repository/github/habedi/chilli)
            - from [habedi/chilli: A microframework for creating command-line applications in Zig](https://github.com/habedi/chilli/tree/main)
    - [Expressive test assertions without testify/assert](https://antonz.org/do-not-testify/) #go
- [New comment by backprop1989 in "Tell HN: Anthropic expires paid credits after a year"](https://news.ycombinator.com/item?id=44793827)
    - Accounting rules: If the credits last indefinitely, any unused credits cannot be counted as revenue.
- [Open Sourcing Shaper: Minimal Data Platform for Embedded Analytics](https://github.com/taleshape-com/shaper)
    - built on top of DuckDB and [NATS.io – Cloud Native, Open Source, High-performance Messaging](https://nats.io/)
- [Qwen-Image: Crafting with Native Text Rendering](https://simonwillison.net/2025/Aug/4/qwen-image/#atom-everything)
    - 5 percent of the training data was data "synthesized through controlled text rendering techniques", ranging from simple text through text on an image background up to much more complex layout examples
- #formal
    - [What I Wish I Knew When Learning Picat](https://github.com/dsagman/picat)
        - [My Picat page](https://hakank.org/picat/)
    - [Practical Static Analysis for Privacy Bugs](https://blog.brownplt.org/2025/08/03/paralegal.html)
    - [Binding Application in Idris](https://andrevidela.com/blog/2025/binding-application/)
}}

\subtree[2025-08-04]{\mdnote{2025-08-04}{
- #rust
    - [Perhaps Rust needs "defer"](https://gaultier.github.io/blog/perhaps_rust_needs_defer.html)
        - an example that using defer idiom rarely gets past the borrow checker
        - showcases well how working in Rust with lots of FFI interop feels like
        - `miri` used in iterations
        - from comments of [A deep dive into Rust and C memory interoperability](https://notashes.me/blog/part-1-memory-management/)
    - [The Generativity Pattern in Rust](https://arhan.sh/blog/the-generativity-pattern-in-rust/)
- [DrawAFish.com Postmortem](https://aldenhallak.com/blog/posts/draw-a-fish-postmortem.html)
    - used childhood 6-digit password when creating the website
    - set up Google Auth, then used it ever after
    - forgot that the password remained
    - which was previously leaked
- [God created men; Sam Altman made them equal](https://taylor.town/made-them-equal)
    - hyperstition: a cultural self-fulfilling prophecy
        - pessimism is an anti-myth that makes Mutual Destruction inevitable. Pessimism is a luxury we can no longer afford.
        - the future is unavoidable, but we are always writing its prologue.
        - techno-optimistism is now a necessity
    - Malcolm Gladwell's cardinal categories of Law & Order provide a compass for tech-induced power redistribution:
        - Western
            - there’s no system
                - AI evades law
            - movies
                - Ex Machina
                - 2001: A Space Odyssey
                - Transcendence
                - Her
                - Blade Runner
                - Neuromancer
                - Ghost in the Shell
        - Northern
            - there’s a system and it’s fantastic
                - AI enforces law
            - movies
                - Person of Interest
                - RoboCop
                - Iron Man
                - Knight Rider
                - The Machine
        - Southern
            - the system has to be reformed from the outside
                - outsiders against AI
            - movies
                - The Matrix trilogy
                - Eagle Eye
                - Alita: Battle Angel
                - Free Guy
                - The Terminator
                - Hackers
                - Johnny Mnemonic
                - eXistenZ
        - Eastern
            - the system is reformed from within
                - insiders against AI
            - movies
                - Short Circuit
                - Minority Report
                - Sneakers
                - I, Robot
                - Westworld
                - War Games
                - A.I. Artificial Intelligence
                - Wall-E
- [Governance in GNOME](https://www.bassi.io)
    - A “bottom up” approach, over-reliance on personal projects and taste, to be sublimated into a shared vision
    - options for maintainers
        - make yourself indispensable, so that everything ends up passing through you, and everyone has to defer to your taste, opinion, or edict
        - replicate your toughts, taste, and opinions into the minds of the people using the API you design
        - reimplement the entirety, a reflection of your taste, commitment, and ethos
    - governance
        - a structure for people to know what to expect and how to navigate the decision making process inside the project
            - responsibility is not something to hoard: it’s something to distribute
            - random GitLab issues should not be the only place where people can be informed that some decision was taken
            - individuals should be able to contribute to a decision without necessarily becoming responsible for a whole project
            - a single person responsible for multiple modules should not be able to design and commit on their own
        - a lightweight but well-defined process
            - discussion: present to the stakeholders, for iteration and consensus
            - documentation: for reference to the decision-making process and resolution during implementation and on-going developments
    - reminds me of ADR
- [HTMX is hard so let's get it right](https://github.com/BookOfCooks/blog/blob/master/htmx-is-hard-so-lets-get-it-right.md)
    - many alternatives are suggested [on HN](https://news.ycombinator.com/item?id=44783266)
- [Maybe the Fastest Disk Usage Program on macOS](https://healeycodes.com/maybe-the-fastest-disk-usage-program-on-macos)
    - [healeycodes/dumac: 🗃️ Very fast alternative to 'du -sh' for macOS that uses getattrlistbulk.](https://github.com/healeycodes/dumac)
    - in #rust, with [tokio::task](https://docs.rs/tokio/latest/tokio/task/)
    - macOS has a syscall called getattrlistbulk(2) which allows you to read multiple directory entries and their metadata in one go. It's like a combined "readdir + stat" that returns a batch of file names along with requested attributes like file type, size, etc.
    - inspired by the Linux equivalent [201984/dut: A disk usage calculator for Linux - Codeberg.org](https://codeberg.org/201984/dut)
- [Modern Node.js Patterns](https://kashw1n.com/blog/nodejs-2025/)
    - most of them are news to me, it's glad to learn that nodejs has aquired so many desirable features
    - wonder if they apply to Bun as well
- #agent/idea
    - [Does the Bitter Lesson Have Limits?](https://www.dbreunig.com/2025/08/01/does-the-bitter-lesson-have-limits.html) ([on HN](https://news.ycombinator.com/item?id=44762022))
        - [The Bitter Lesson](http://www.incompleteideas.net/IncIdeas/BitterLesson.html)
            - trying to build knowledge into agents plateaus and even inhibits further progress in the long run
            - breakthrough progress eventually arrives by an opposing approach based on scaling computation by search and learning
        - four major blows to the human ego
            - The Copernican Revolution: we weren’t the center of the universe.
            - Darwinian thought: we weren’t separate from animals.
            - Freud’s ideas of the unconscious: we weren’t in full control of our selves.
            - Cyborgs, robots, and automatons: non-humans could do the work of humans.
        - Garbage Can Model
            - organizations as chaotic “garbage cans” where problems, solutions, and decision-makers are dumped in together
            - decisions often happen when these elements collide randomly, rather than through a fully rational process
            - represents a world where unwritten rules, bespoke knowledge, and complex and undocumented processes are critical
        - issues of the bitter lesson
            - dependent on high-quality data
            - adding compute is often not practical nor optimal
    - [Read your code](https://etsd.tech/posts/rtfc/) ([on HN](https://news.ycombinator.com/item?id=44785562))
    - [The Future Of Software Is Small](https://www.aparker.io/post/3lvjepuyf4q2w)
    - [Typed languages are better suited for vibecoding](https://solmaz.io/typed-languages-are-better-suited-for-vibecoding) ([on HN](https://news.ycombinator.com/item?id=44780878))
    - [Rust, Python, and TypeScript: the new trifecta](https://smallcultfollowing.com/babysteps/blog/2025/07/31/rs-py-ts-trifecta/)
}}

\subtree[2025-08-03]{\mdnote{2025-08-03}{
- [How do you backup your non-work-related data?](https://lobste.rs/s/ngo3ex/how_do_you_backup_your_non_work_related)
    - most suggests `restic`
    - [Cloud Backup: Easy, Secure, Unlimited Online Backup](https://www.backblaze.com/cloud-backup/personal)
        - Backblaze B2, good affordability/pricing, ~$5/mo
    - `borg` has security footgun
    - use https://healthchecks.io/ to monitor backup jobs
    - [Append-only Restic backups on a Hetzner Storage Box](https://fluix.one/blog/hetzner-restic-append-only/)
        - good #design, [[source](https://git.sr.ht/~fluix/fluix.one/tree)]
        - [Append-only backups with restic and rclone](https://ruderich.org/simon/notes/append-only-backups-with-restic-and-rclone)
    - [jmtd → computing → Network Attached Storage (NAS)](https://jmtd.net/computing/nas/)
    - [Personal backups and file archival // Josh Mock](https://joshmock.com/post/backups-and-archival/)
- [If you're remote, ramble](https://stephango.com/ramblings)
    - Ramblings channels let everyone share what’s on their mind without cluttering group channels
        - short updates 1-3 times per week
        - common topics
            - ideas related to current projects
            - musings about blog posts, articles, user feedback
            - “what if” suggestions
            - photos from recent trips or hobbies
            - rubber ducking a problem
    - each ramblings channel
        - named after the team member
        - only that person can post top-level messages. Others can reply in threads, but not start new ones
        - muted by default, with no expectation that anyone else will read them
    - ramblings are our equivalent of water cooler talk
- [Linear Types for Programmers (2023)](https://twey.io/for-programmers/linear-types/) #lang
    - [The Austral Programming Language](https://austral-lang.org/)
    - [faiface/par-lang: Par (⅋) is an experimental concurrent programming language. It's an attempt to bring the expressive power of linear logic into practice.](https://github.com/faiface/par-lang)
- [Twenty Eighth International Obfuscated C Code Contest](https://www.ioccc.org/2024/index.html)
    - the redesign broke all links to the old entries without redirects
    - now requires using a javascript capable browser to view the entries on github (github having removed non-JS access last year)
}}

\subtree[2025-08-02]{\mdnote{2025-08-02}{
- #agent
    - [Cerebras Code](https://www.cerebras.ai/blog/introducing-cerebras-code)
        - Cerebras Code Pro ($50/month)
        - Code Max ($200/month)
        - Qwen3-Coder, but at 2,000 tokens per second, with a 131k-token context window
    - [cchistory: Tracking Claude Code System Prompt and Tool Changes](https://mariozechner.at/posts/2025-08-03-cchistory/)
    - [Reconstructing a timeline for Amazon Q prompt infection](https://www.mbgsec.com/posts/2025-07-24-constructing-a-timeline-for-amazon-q-prompt-infection/) #sec
    - [NativeMind](https://nativemind.app/)
- [Unit Testing Principles](https://olano.dev/blog/unit-testing-principles/)
    - overcomplicated code should be split into
        - deep domain classes, to be thoroughly unit tested
        - wide controllers, exercised by strategic integration tests
    - unit tests should verify units of behavior
    - four pillars of a good unit test
        - protection against regressions
        - resistance to refactoring
        - fast feedback
        - maintainability
    - I think I have got them all wrong when setting up tests for GAlgebra
- #lib
    - [candyfloss: an ergonomic python library for running video pipelines](https://git.hella.cheap/bob/candyfloss)
}}

\subtree[2025-08-01]{\mdnote{2025-08-01}{
- #agent
    - [6 Weeks of Claude Code](https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/) ([on HN](https://news.ycombinator.com/item?id=44746621)) ([on lobste.rs](https://lobste.rs/s/iqyqm3))
        - "a list of things which I have completed, solo, ..., they are years of “tech debt” / “tech innovation” backlog for me"
        - [Individual Contributor Ladder](https://artsy.github.io/blog/2015/04/03/artsy-engineering-compensation-framework/)
    - [AI is a floor raiser, not a ceiling raiser](https://elroy.bot/blog/2025/07/29/ai-is-a-floor-raiser-not-a-ceiling-raiser.html)
        - [on HN](https://news.ycombinator.com/item?id=44752065)
            - AI is "automated ladder pulling technology"
            - "AI does all those lower level jobs, puts the people who need those jobs for experience on the street, and robs us of future experts."
            - ['A black hole': New graduates discover a dismal job market](https://www.nbcnews.com/business/economy/job-market-report-college-student-graduates-ai-trump-tariffs-rcna221693)
    - [Vibe code is legacy code](https://blog.val.town/vibe-code)
        - "We already have a phrase for code that nobody understands: legacy code"
    - [A Hitchhiker's Guide to the AI Bubble](https://fluxus.io/article/a-hitchhikers-guide-to-the-ai-bubble)
        - "The fact there is real value in the technology does not contradict in any way that we are in a bubble."
    - [Trying out Qwen3 Coder Flash using LM Studio and Open WebUI and LLM](https://simonwillison.net/2025/Jul/31/qwen3-coder-flash/#atom-everything)
        - "A neat feature of Open WebUI is that it includes an automatic preview panel, which kicks in for fenced code blocks that include SVG or HTML"
- #sec
    - [How to Secure a Linux Server](https://github.com/imthenachoman/How-To-Secure-A-Linux-Server) ([on HN](https://news.ycombinator.com/item?id=44755298))
        - however, it's pointed out on HN that one should not follow this
            - "This guide ignores many sane defaults in favor of a patchwork..., added over time by random people with no thought for threat modeling, that may even result in an increased attack surface."
            - "This guide contains (at least) inaccurate statements. It's oversimplifying and omitting important things while putting emphasis on some exotic details where defaults would be sane enough."
        - better alternatives suggested, both authored by `a13xp0p0v`
            - [Linux Kernel Defence Map - Security Hardening Concepts](https://github.com/a13xp0p0v/linux-kernel-defence-map) ([on HN](https://news.ycombinator.com/item?id=43597264))
            - [Linux Kernel Hardening Checker](https://github.com/a13xp0p0v/kernel-hardening-checker) ([on HN](https://news.ycombinator.com/item?id=37709349))
        - [ComplianceAsCode/content: Security automation content in SCAP, Bash, Ansible, and other formats](https://github.com/ComplianceAsCode/content) is also suggested
            - it facilitates security policy content authoring
            - along with ansible playbook/bash scripts to check or fix compliance
    - [When Flatpak’s Sandbox Cracks: Real‑Life Security Issues Beyond the Ideal | Linux Journal](https://www.linuxjournal.com/content/when-flatpaks-sandbox-cracks-real-life-security-issues-beyond-ideal)
- [Hyrum's Law](https://www.hyrumslaw.com)
    - "With a sufficient number of users of an API, it does not matter what you promise in the contract: all observable behaviors of your system will be depended on by somebody"
    - "corollary: even if you explicitly deny a guarantee of a certain behavior in your contract, if you usually deliver that behavior, most of your customers will depend on it."
- [Long Term Support](https://www.sqlite.org/lts.html) for SQLite
    - admirable efforts to support SQLite through the year 2050
- [Live coding sucks | Mustapha Hadid](https://hadid.dev/posts/living-coding/)
    - "Live coding interviews measure stress, not coding skills"
    - [Comment by lapcat](https://news.ycombinator.com/item?id=44757214)
        - "something about strangers standing over my shoulder judging me, determining my financial future by providing or withholding a job, like the sword of Damocles, turns my stomach inside out"
        - "A lot of commenters causally speak of "false negatives" as if they were random, but some people, myself included, are always the false negative."
- #tmux
    - [Replacing tmux in my dev workflow](https://bower.sh/you-might-not-need-tmux) ([on HN](https://news.ycombinator.com/item?id=44754492)) ([on lobste.rs](https://lobste.rs/s/9ha6ab))
        - [shpool](https://github.com/shell-pool/shpool) + [autossh(1)](https://linux.die.net/man/1/autossh)
    - [Customizing tmux](https://evgeniipendragon.com/posts/customizing-tmux-and-making-it-less-dreadful/)
        - lots of potentially useful comments on [on HN](https://news.ycombinator.com/item?id=44787374)
}}

}

\subtree[2025-07]{
\title{July, 2025}

\subtree[2025-07-31]{\mdnote{2025-07-31}{
- #perf
    - [Benchmarks in CI: Escaping the Cloud Chaos](https://codspeed.io/blog/benchmarks-in-ci-without-noise)
    - [Big O vs Hardware: Better Complexity ≠ Better Performance](https://blog.codingconfessions.com/p/big-o-vs-hardware)
    - [bu/doc/tim.md at main · c-blake/bu](https://github.com/c-blake/bu/blob/main/doc/tim.md)
    - [OOMProf - Take a heap profile just before OOMkill using eBPF](https://lobste.rs/s/cknohu) #chaos
    - [Snooping On Slow Builds (Using Syscalls)](https://danielchasehooper.com/posts/syscall-build-snooping/)
- #browser
    - [I tried Servo, the undercover web browser engine made with Rust](https://www.spacebar.news/servo-undercover-web-browser-engine/) #rust
        - "this approach of breaking down a web engine into independently usable modules with public APIs will make it easier for people to get involved in web engine development, and make it easier for people to create new web engines in future" ([on HN](https://news.ycombinator.com/item?id=44744324))
            - [servo/stylo: CSS engine that powers Servo and Firefox](https://github.com/servo/stylo)
            - [servo/html5ever: High-performance browser-grade HTML5 parser](https://github.com/servo/html5ever)
            - [DioxusLabs/taffy: A high performance rust-powered UI layout library](https://github.com/DioxusLabs/taffy)
            - [DioxusLabs/blitz: A radically modular HTML/CSS rendering engine](https://github.com/DioxusLabs/blitz)
    - [Orion Browser by Kagi](https://kagi.com/orion/)
        - Kagi believes that they need to offer a hollistic replacement for big tech for consuming the web, that includes search, browser and email  ([on HN](https://news.ycombinator.com/item?id=44745843))
    - [How we made JSON.stringify more than twice as fast](https://v8.dev/blog/json-stringify)
- #cg
    - [PixiEditor 2.0 – A FOSS universal 2D graphics editor](https://pixieditor.net/blog/2025/07/30/20-release/) ([on HN](https://news.ycombinator.com/item?id=44746583))
        - Raster, Vector, Animations, Procedural (VFX, effects, non-desctuctive editing)
        - written in C#, copyleft
        - alternatives
            - [G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main](https://gmic.eu/)
    - [Kdenlive - Free and Open Source Video Editor](https://kdenlive.org/)
    - [Physically Based Shading in Theory and Practice](https://lobste.rs/s/jp2ajo)
    - [3D Line Drawings](https://amritkwatra.com/experiments/3d-line-drawings)
        - a 3d scene that can be posed and shows as a 2d line illustration
        - based on Gaussian Splats
}}

\subtree[2025-07-29]{\mdnote{2025-07-29}{
- #zig #perf
    - [Zig profiling on Apple Silicon | Bugsik](https://blog.bugsiki.dev/posts/zig-profilers/)
        - [mstange/samply](https://github.com/mstange/samply)
            - a command line sampling CPU profiler which uses the Firefox profiler as its UI
            - for macOS, Linux, and Windows
        - [verte-zerg/poop at kperf-macos](https://github.com/verte-zerg/poop/tree/kperf-macos)
            - a fork of poop to use kperf under Mac
        - [wolfpld/tracy: Frame profiler](https://github.com/wolfpld/tracy)
            - A real time, nanosecond resolution, remote telemetry, hybrid frame and sampling profiler for games and other applications
            - C, C++, Lua, Python, Fortran, Rust, Zig, C#, OCaml, Odin, GPU
            - Windows, Linux, Android, FreeBSD, WSL, OSX, iOS, QNX
    - [Generic Programming and anytype - Docs - Ziggit](https://ziggit.dev/t/generic-programming-and-anytype/3228)
    - [Using Zig allocator for C libraries (Alignment question)](https://www.reddit.com/r/Zig/comments/1mbn4q1/using_zig_allocator_for_c_libraries_alignment/)
        - `Allocator.rawAlloc`/`.rawFree`
        - `@alignOf(std.c.max_align_t)`
    - [ANDRVV/zprof: 🧮 Cross-allocator profiler for Zig](https://github.com/andrvv/zprof)
        - battle-tested in [raptodb/rapto: transposition-heuristic storage, low memory footprint and high-performance querying](https://github.com/raptodb/rapto)
- #physics
    - [Background independence](https://robwilson1.wordpress.com/2025/07/29/background-independence-2/)
- #crypto
    - [Fintech dystopia](https://fintechdystopia.com/) ([on HN](https://news.ycombinator.com/item?id=44718117))
- #perf
    - [Giving Benchmarks a Boat](https://buttondown.com/jaffray/archive/giving-benchmarks-a-boat/)
        - TPC-C is a benchmark for transactional databases that models an order system with goods spanning many warehouses
        - Each warehouse comes with some set amount of data to be managed and some amount of query traffic that adheres to some specific distribution laid out in the spec
            - they can account for
                - what's the proportion of hot vs. cold data
                - what's the ratio of transactions-per-minute to bytes stored
                - what's the proportion of read-only queries, vs. simple, point writes, vs. complex read-write transactions
                - what proportion of transactions go cross-shard
        - The metric: "we sustained the workload at X warehouses with Y hardware at Z cost."
- #movie
    - [Nothing to watch – Experimental gallery visualizing 50k film posters](https://nothing-to-watch.port80.ch)
- #agent
    - [Principles for production AI agents](https://www.app.build/blog/six-principles-production-ai-agents) ([on HN](https://news.ycombinator.com/item?id=44712315))
        - context
            - modern LLMs just need direct detailed context, no tricks, but clarity and lack of contradictions
            - structuring context so that the system part is large and static and user one is small and dynamic works great
            - provide the bare minimum of knowledge in the first place, and the option to fetch more context if needed via tools
            - [context compaction](https://github.com/appdotbuild/agent/blob/2a09b4e0c4ba1d7ddba04832514352f424852a04/agent/core/actors.py#L241) tools can help avoiding logs and other artifacts from the feedback loop to bloat the context
        - tools
            - good tools typically operate on a similar level of granularity, and have a limited number of strictly typed parameters
            - idempotency is highly recommended to avoid state management issues
            - LLMs are very likely to misuse your loopholes, and that’s why you don’t want to have any loopholes
                - v.s. human API users are more capable of reading between the lines, can navigate complex docs and find workarounds
            - designing an agent to write some DSL (domain-specific language) code with actions rather than calling tools one by one is a great idea
        - feedback loop
            - actor-critic approach: where an actor decides on actions and a critic evaluates them
                - allow actors to be creative, and critics to be strict
            - error recovery
                - a chain of bad fixes is not fixable anymore - just discard and try again
            - agents try alternatives because the explicitly requested tool call failed with crucial ingredients
                - tell them to ask for these ingredients before trying alternatives
            - baseline agent + logs + LLM analysis = insights for improvments
    - [Q&A: Combining Math and LLMs](https://justinmath.com/combining-math-and-llms/)
        - Raw math/algos and LLM are both powerful tools in your modeling toolkit
        - If you’re missing either tool from your toolkit, then that will severely hamstring your modeling abilities and many problems will remain inaccessible to you.
    - [Show HN: Companies use AI to take your calls. I built AI to make them for you](https://www.pipervoice.com/)
        - top comment [on HN](https://news.ycombinator.com/item?id=44716414) introduced a great use case for LLM-back reception
            - local plumbing business
                - understand and repeated back the client's request in a slightly different, more professional way for confirmation
                - asked a few more smart follow-ups
                - the plumber called back and jumped straight into solutions, pricing, and his availability
            - prefer to talk to LLM, if the issue can be quickly triaged to the right human who actually understand the situation
            - synchronous interaction by bot
                - can perform first level troubleshooting, ask for clarification, begin to form a plan and get your buy-in
                - v.s. fire-and-forget email form
                    - incomplete reports, missing information, people who have no idea what they're talking about
    - [Show HN: Terminal-Bench-RL: Training Long-Horizon Terminal Agents with RL](https://github.com/Danau5tin/terminal-bench-rl) ([on HN](https://news.ycombinator.com/item?id=44721791))
        - Custom scaffolding (system prompt and tools) using Qwen3-32B achieved 13.75% on Terminal-Bench. No training was involved
        - The author has built an RL system, but it has not been used for anything due to cost limitations.
    - [GLM-4.5: Reasoning, Coding, and Agentic Abililties](https://simonwillison.net/2025/Jul/28/glm-45/)
    - [Stop selling “unlimited”, when you mean “until we change our minds”](https://blog.kilocode.ai/p/ai-pricing-playbook-strikes-again)
        - the playbook
            - launch with generous/unlimited limits
            - build user dependency
            - add caps targeting "less than 5%" of users
            - frame as "sustainability" or "fairness"
        - that "5%" drives everything
            - power users with deep workflow integration
            - early adopters who took platform risks
            - team influencers who drive organizational adoption
            - $200/month Claude Max subscribers doing serious work
        - [Tokens are getting more expensive](https://ethanding.substack.com/p/ai-subscriptions-get-short-squeezed)
    - [The Rise of Vibeinsecurity](https://vibeinsecurity.com/)
        - a story about how devs lost their jobs over vibe apps, and vibe apps are hacked by vibe hackers immediately after deployment
        - this is also an ad for a conference called HackAIcon
    - [It's rude to show AI output to people](https://distantprovince.by/posts/its-rude-to-show-ai-output-to-people/)
        - whenever you propagate AI output, you're at risk of intentionally or unintentionally legitimizing it with your good name, providing it with a fake proof-of-thought
- #sec #privacy
    - [Tea app leak worsens with second database exposing user chats](https://www.bleepingcomputer.com/news/security/tea-app-leak-worsens-with-second-database-exposing-user-chats/)
- #idea
    - [Why Try When Others Could Do Better?](https://justinmath.com/why-try-when-others-could-do-better/)
        - Even the smartest, highest-agency people in the world are severely bandwidth constrained and don’t get around to doing most of the things they have the potential to do.
        - Compound that over and over again in some niche and you get hundreds, thousands, millions of miles ahead of the fastest runners who aren’t running down that niche.
    - [Pragmatism in Programming Proverbs](https://www.gingerbill.org/article/2020/05/31/progamming-pragmatist-proverbs/)
        - many interesting quotes
    - [Objects should shut up](https://dustri.org/b/objects-should-shut-the-fuck-up.html) ([on HN](https://news.ycombinator.com/item?id=44786367))
        - I'm also deeply annoyed by unnecessary alarms
    - [Don’t Let Architecture Astronauts Scare You](https://www.joelonsoftware.com/2001/04/21/dont-let-architecture-astronauts-scare-you/) #system
    - [I'm rebelling against the algorithm](https://varunraghu.com/im-rebelling-against-the-algorithm/)
    - [Maybe writing speed actually is a bottleneck for programming](https://buttondown.com/hillelwayne/archive/maybe-writing-speed-actually-is-a-bottleneck-for/)
}}

\subtree[2025-07-26]{\mdnote{2025-07-26}{
- [Combinatory Programming](https://blog.zdsmith.com/posts/combinatory-programming.html)
    - a nice intro to basic patterns and their motivations
    - [Smullyan’s To Mock a Mockingbird](https://douxnet.weebly.com/uploads/2/0/4/1/20418601/raymond_m._smullyan-to_mock_a_mockingbird_and_other_logic_puzzles__including__an_amazing_adventure_in_combinatory_logic-knopf_1985.pdf)
    - [Essays/Tacit Expressions - J Wiki](https://code.jsoftware.com/wiki/Essays/Tacit_Expressions)
- #mac
    - [Show HN: A macOS clock that stays visible when coding or binging in fullscreen](https://cornertime.app/en) ([on HN](https://news.ycombinator.com/item?id=44684720))
        - [Jean-Tinland/simple-bar: A yabai, AeroSpace or FlashSpace status bar widget for Übersicht](https://github.com/Jean-Tinland/simple-bar)
    - [AltTab - Windows alt-tab on macOS](https://alt-tab-macos.netlify.app/)
        - [rcmd - Switch apps instantly using the ⌘ Right Command key](https://lowtechguys.com/rcmd/)
            - very cool idea, start using it now
        - [Karabiner-Elements](https://karabiner-elements.pqrs.org/)
- [Turn any diagram image into an editable Draw.io file. No more redrawing](https://imagetodrawio.com/) ([on HN](https://news.ycombinator.com/item?id=44691896))
    - [Pic2Chart - Convert Diagrams to Editable PowerPoint SVGs](https://draw.modhtom.com/)
}}

\subtree[2025-07-24]{\mdnote{2025-07-24}{
- #lint
    - [Detekt – A static code analyzer for Kotlin](https://detekt.dev/) ([on HN](https://news.ycombinator.com/item?id=44669365))
    - [gardner/LocalLanguageTool: Self-hosted LanguageTool private instance is an offline alternative to Grammarly](https://github.com/gardner/LocalLanguageTool)
- #idea
    - [Programming Language Escape Hatches](https://buttondown.com/hillelwayne/archive/programming-language-escape-hatches/)

        > Capability is desirable but comes into conflicts with a lot of other desirable properties, like simplicity or efficiency.

        > an escape hatch is a feature that deliberately breaks core assumptions about the language in order to add capabilities.

    - [Why I do programming](https://esafev.com/notes/why-i-do-programming/) ([on HN](https://news.ycombinator.com/item?id=44691722))

        > For me, programming has always been more than a skill. It’s a way to explore, to tinker, and to satisfy curiosity.

    - [The ultimate meeting culture](https://abitmighty.com/posts/the-ultimate-meeting-culture) ([on HN](https://news.ycombinator.com/item?id=44708173)) ([on lobste.rs](https://lobste.rs/s/jfixfr))

        > The goal of an exceptional meeting culture is to allow for people to constructively decline meetings by fully understanding the consequences of their action.

}}

\subtree[2025-07-22]{\mdnote{2025-07-22}{
- #struct
    - [Algorithms for Modern Processor Architectures](https://lemire.github.io/talks/2025/sea/sea2025.html) ([on HN](https://news.ycombinator.com/item?id=44653965)) #asm #cpp #perf
    - [Hyperpb: 10x faster dynamic Protobuf parsing that's faster than generated code](https://buf.build/blog/hyperpb) ([on HN](https://news.ycombinator.com/item?id=44661785))
    - [PSA: SQLite WAL checksums fail silently and may lose data](https://avi.im/blag/2025/sqlite-wal-checksum/) ([on HN](https://news.ycombinator.com/item?id=44671373)) #db
- #formal
    - [Formal specs as sets of behaviors](https://surfingcomplexity.blog/2025/07/26/formal-specs-as-sets-of-behaviors/) ([on HN](https://news.ycombinator.com/item?id=44700744)) ([on lobste.rs](https://lobste.rs/s/spfpn6))
    - [Asymmetry of verification and verifier’s law](https://www.jasonwei.net/blog/asymmetry-of-verification-and-verifiers-law)
    - [A reckless introduction to Hindley-Milner type inference](https://reasonableapproximation.net/2019/05/05/hindley-milner.html)
- #selfhost/data
    - [Blip: Peer-to-Peer Massive File Sharing by Former Dropbox Engineers](https://blip.net/) ([on HN](https://news.ycombinator.com/item?id=44648772))
        - [n0-computer/sendme: A tool to send files and directories, based on iroh](https://github.com/n0-computer/sendme)
            - [Iroh](https://www.iroh.computer/)
        - [schollz/croc: Easily and securely send things from one computer to another :package:](https://github.com/schollz/croc)
        - [PairDrop | Transfer Files Cross-Platform. No Setup, No Signup.](https://pairdrop.net/)
        - [Magic-Wormhole: Get Things From One Computer To Another, Safely — Magic-Wormhole 0.20.0+24.g0a212b2 documentation](https://magic-wormhole.readthedocs.io/en/latest/)
        - [Keet by Holepunch](https://keet.io/) #im
    - [Copyparty – Turn almost any device into a file server](https://github.com/9001/copyparty) ([on HN](https://news.ycombinator.com/item?id=44711519)) ([on lobste.rs](https://lobste.rs/s/wvzkzs))
- #mm
    - [Don't bother parsing: Just use images for RAG](https://www.morphik.ai/blog/stop-parsing-docs) ([on HN](https://news.ycombinator.com/item?id=44637715))
    - [Yt-transcriber – Give a YouTube URL and get a transcription](https://github.com/pmarreck/yt-transcriber) ([on HN](https://news.ycombinator.com/item?id=44646901))
        - `yt-dlp` has such functionality built-in, tricks needed to avoid being banned
    - [Phind.design – Image editor & design tool powered by 4o / custom models](https://phind.design) ([on HN](https://news.ycombinator.com/item?id=44650622))
}}

\subtree[2025-07-20]{\mdnote{2025-07-20}{
- #selfhost
    - [My Ultimate Self-hosting Setup](https://codecaptured.com/blog/my-ultimate-self-hosting-setup/) ([on HN](https://news.ycombinator.com/item?id=44612151)) ([on lobste.rs](https://lobste.rs/s/naiwvd))
        - [Coolify](https://coolify.io/), an open-source & self-hostable Heroku / Netlify / Vercel alternative.
        - [Dokploy - Effortless Deployment Solutions](https://dokploy.com/)
        - [HomeFree](https://homefree.host/)
        - [gokrazy Go appliances :: gokrazy](https://gokrazy.org/)
- #selfhost/data
    - [Borg – Deduplicating archiver with compression and encryption](https://www.borgbackup.org/) ([on HN](https://news.ycombinator.com/item?id=44621487))
        - [Emborg — Front-End to Borg Backup — emborg 1.42 documentation](https://emborg.readthedocs.io/en/stable/)
        - [Home | Vorta for BorgBackup](https://vorta.borgbase.com/)
        - [Pika Backup – Apps for GNOME](https://apps.gnome.org/PikaBackup/)
            - [BorgBase - Simple and Secure Offsite Backups](https://www.borgbase.com/)
    - [restic · Backups done right!](https://restic.net/)
        - [garethgeorge/backrest: Backrest is a web UI and orchestrator for restic backup.](https://github.com/garethgeorge/backrest)
    - [Kopia](https://kopia.io/)
    - [Plakar - Effortless backup](https://plakar.io/)
    - [Make Your Own Backup System – Part 1: Strategy Before Scripts](https://it-notes.dragas.net/2025/07/18/make-your-own-backup-system-part-1-strategy-before-scripts/)
- #os
    - [I Used Arch, BTW: macOS, Day 1](https://yberreby.com/posts/i-used-arch-btw-macos-day-1/) ([on HN](https://news.ycombinator.com/item?id=44620623))
    - [Why Some Satellites Use NetBSD?](https://machaddr.substack.com/p/why-some-satellites-use-netbsd)
    - [Graphene OS: a security-enhanced Android build](https://lwn.net/SubscriberLink/1030004/898017c7953c0946/) ([on HN](https://news.ycombinator.com/item?id=44676691))
- #gui
    - [Introducing XMLUI](https://blog.jonudell.net/2025/07/18/introducing-xmlui/) ([on HN](https://news.ycombinator.com/item?id=44625292)) ([on lobste.rs](https://lobste.rs/s/7ykaux))
- #py
    - [metap: A Meta-Programming Layer for Python](https://sbaziotis.com/compilers/metap.html)
    - [You might not need a Python class](https://adamgrant.micro.blog/2025/07/24/123050.html) ([on HN](https://news.ycombinator.com/item?id=44675119))
    - [Simon Willison | TIL: Exception.add_note](https://simonwillison.net/2025/Jul/27/til-exception-add-note/)
}}

\subtree[2025-07-19]{\mdnote{2025-07-19}{
- #agent
    - [Agents built from alloys](https://xbow.com/blog/alloy-agents/) ([on HN](https://news.ycombinator.com/item?id=44630724)) #sec

        > Like most typical AI agents, we call the model in a loop. The idea behind an alloy is simple: instead of always calling the same model, sometimes call one and sometimes the other.

    - [Ccusage: A CLI tool for analyzing Claude Code usage from local JSONL files](https://github.com/ryoppippi/ccusage)
    - [Coding with LLMs in the summer of 2025 (an update)](https://antirez.com/news/154)
        - [Simon Willison | Coding with LLMs in the summer of 2025 (an update)](https://simonwillison.net/2025/Jul/21/coding-with-llms/)

        > When your goal is to reason with an LLM about implementing or fixing some code, you need to provide extensive information to the LLM: papers, big parts of the target code base. And a brain dump of all your understanding of what should be done.

        > You will be able to do things that are otherwise at the borders of your knowledge / expertise while learning much in the process. Yet, everything produced will follow your idea of code and product, and will be of high quality and will not random fail because of errors and shortcomings introduced by the LLM.

    - [GLM-4.5: Deeper, Headier, & better than Kimi/Qwen/DeepSeek (SOTA China LLM?)](https://news.smol.ai/issues/25-07-28-glm-45/)
        - [GLM-4.5: Reasoning, Coding, and Agentic Abililties](https://z.ai/blog/glm-4.5) ([on HN](https://news.ycombinator.com/item?id=44711106))
    - [The current hype around autonomous agents, and what actually works in production](https://utkarshkanwat.com/writing/betting-against-agents/) ([on HN](https://news.ycombinator.com/item?id=44623207))
    - [How Anthropic teams use Claude Code](https://www.anthropic.com/news/how-anthropic-teams-use-claude-code) ([on HN](https://news.ycombinator.com/item?id=44678535))
    - [Cerebras launches Qwen3-235B, achieving 1.5k tokens per second](https://www.cerebras.ai/press-release/cerebras-launches-qwen3-235b-world-s-fastest-frontier-ai-model-with-full-131k-context-support) ([on HN](https://news.ycombinator.com/item?id=44657727))
    - [Lumo: Privacy-first AI assistant](https://proton.me/blog/lumo-ai) ([on HN](https://news.ycombinator.com/item?id=44657556))
    - [Simon Willison | Announcing Toad - a universal UI for agentic coding in the terminal](https://simonwillison.net/2025/Jul/23/announcing-toad/)
    - [Price Per Token – LLM API Pricing Data](https://pricepertoken.com/) ([on HN](https://news.ycombinator.com/item?id=44682465))
    - [You can now train a 70B language model at home](https://www.answer.ai/posts/2024-03-06-fsdp-qlora.html) ([on HN](https://news.ycombinator.com/item?id=44674830))
    - #disect
        - [The Big LLM Architecture Comparison](https://magazine.sebastianraschka.com/p/the-big-llm-architecture-comparison) ([on HN](https://news.ycombinator.com/item?id=44622608))
        - [Transformer Explainer: LLM Transformer Model Visually Explained](https://poloclub.github.io/transformer-explainer/)
        - [LLM Embeddings Explained: A Visual and Intuitive Guide](https://huggingface.co/spaces/hesamation/primer-llm-embedding) ([on HN](https://news.ycombinator.com/item?id=44708028))
    - [Getting into Flow State with Agentic Coding](https://kau.sh/blog/agentic-coding-flow-state/) ([on HN](https://news.ycombinator.com/item?id=44697585))
    - [LLMs are bad at returning code in JSON](https://aider.chat/2024/08/14/code-in-json.html)
    - [An AI tool I find useful](https://notes.billmill.org/blog/2025/07/An_AI_tool_I_find_useful.html): a review command
- #disect
    - [Do you understand f-strings?](https://fstrings.wtf/) ([on HN](https://news.ycombinator.com/item?id=44614370)) ([on lobste.rs](https://lobste.rs/s/cwmt11))
    - [Enough unix to get by](https://thoughtbot.com/blog/enough-unix-to-get-by)
    - [LL and LR Parsing Demystified (2013)](https://blog.reverberate.org/2013/07/ll-and-lr-parsing-demystified.html)
    - [Reverse proxy deep dive](https://startwithawhy.com/reverseproxy/2024/01/15/ReverseProxy-Deep-Dive.html)
    - [Reverse Proxy Deep Dive Part 2: Why HTTP Parsing at the Edge Is Harder Than It Looks](https://startwithawhy.com/reverseproxy/2025/07/20/ReverseProxy-Deep-Dive-Part2.html)
    - [What is X-Forwarded-For and when can you trust it?](https://httptoolkit.com/blog/what-is-x-forwarded-for/)
    - [The Secret Life of Fsync (2023)](https://puzpuzpuz.dev/the-secret-life-of-fsync) ([on HN](https://news.ycombinator.com/item?id=44676714))
    - [Programming vehicles in games](https://wassimulator.com/blog/programming/programming_vehicles_in_games.html) ([on HN](https://news.ycombinator.com/item?id=44683682)) #game
    - [Never write your own date parsing library](https://www.zachleat.com/web/adventures-in-date-parsing/) ([on HN](https://news.ycombinator.com/item?id=44685875))
    - [How I hacked my washing machine](https://nexy.blog/2025/07/27/how-i-hacked-my-washing-machine/) ([on HN](https://news.ycombinator.com/item?id=44704270)) ([on lobste.rs](https://lobste.rs/s/0hadx0))
    - [Making Postgres slower](https://byteofdev.com/posts/making-postgres-slow/) ([on HN](https://news.ycombinator.com/item?id=44704736)) #db
- #sec
    - [Certificate Transparency - Part 1](https://ipng.ch/s/articles/2025/07/26/certificate-transparency-part-1/)
    - [Firefox-patch-bin, librewolf-fix-bin AUR packages contain malware](https://lists.archlinux.org/archives/list/aur-general@lists.archlinux.org/thread/7EZTJXLIAQLARQNTMEW2HBWZYE626IFJ/) ([on HN](https://news.ycombinator.com/item?id=44607740))
- #sovereign
    - [New comment by voxleone in "The future is not self-hosted"](https://news.ycombinator.com/item?id=44687266)

        > Self-hosting isn't just about tech choices — it's about *who controls access to knowledge*.
        >
        > During the Enlightenment, owning a physical copy of a book meant intellectual freedom. You didn’t rent ideas; you had them.
        >
        > Today, most digital knowledge is hosted, locked, or streamed — *leased from platforms*, not owned. We’re in fact drifting into *digital feudalism*, where access to culture, tools, and even history depends on gatekeepers.

    - [Myspace - Archiveteam](https://wiki.archiveteam.org/index.php/Myspace)
    - [Anthropic tightens usage limits for Claude Code without telling users](https://techcrunch.com/2025/07/17/anthropic-tightens-usage-limits-for-claude-code-without-telling-users/) ([on HN](https://news.ycombinator.com/item?id=44598254))
    - [Apple bans entire dev account, no reason given](https://twitter.com/rameerez/status/1945784476723810739) ([on HN](https://news.ycombinator.com/item?id=44601548))
    - [Gmail's backup codes are useless to access account](https://news.ycombinator.com/item?id=44606671)
    - [Linux and Secure Boot certificate expiration](https://lwn.net/SubscriberLink/1029767/43b62a7a7408c2a9/) ([on HN](https://news.ycombinator.com/item?id=44613629)) ([on lobste.rs](https://lobste.rs/s/p0ylu1))
- #lang
    - [Kap lang](https://kapdemo.dhsdevelopments.com/) #apl
    - [Kernel](\verb>>>|https://web.cs.wpi.edu/%7Ejshutt/kernel.html>>>) #lisp
- #idea
    - [Covers as a way of learning music and code](https://ntietz.com/blog/covers-as-a-way-of-learning/) ([on HN](https://news.ycombinator.com/item?id=44636240))

        > Playing someone else's music, making a cover, is great because it can make it objective. It gives you something to check against.

    - [Why Lexing and Parsing Should Be Separate](https://github.com/oils-for-unix/oils/wiki/Why-Lexing-and-Parsing-Should-Be-Separate)

        > A lexer recognizes the non-recursive structure of a language. Its output is a token stream.

        > A parser recognizes the recursive structure of a language. Its output is a tree.

        > Lexing with regular languages (expressions) is nice because it can be done in `O(n)` time and `O(1)` space (using automata-based techniques)

        > There is essentially one algorithm for lexing -- march forward through the input exactly once.

        > Parsing CFGs is `O(n^3)` in general, and parsing PEGs either takes `O(n)` space (packrat parsing) or exponential time (backtracking)

        > separating lexing and parsing reduces the n in your O(n^3). In any real program, there are many more characters than tokens

    - [TODOs Aren't for Doing](https://sophiebits.com/2025/07/21/todos-arent-for-doing)

        > (A TODO) doesn’t need to be a plan to actually do something. Instead, it’s a note about “here’s an edge case that wasn’t handled” or a suggestion for a better structure that the author didn’t make time to implement — it captures a little slice of the author’s brain and gives a little window into the rich context they had at the time they wrote the code.

    - [Lookism](https://en.wikipedia.org/wiki/Lookism)
        - [Liking What You See: A Documentary](https://en.wikipedia.org/wiki/Liking_What_You_See:_A_Documentary)
    - [Computational Tyranny](https://happyfellow.bearblog.dev/computational-tyranny/)
    - [Why Does Raising the Retirement Age Hurt Young People?](https://www.governance.fyi/p/why-does-raising-the-retirement-age) ([on HN](https://news.ycombinator.com/item?id=44654493))
- #kb
    - [Molab, a cloud-hosted Marimo notebook workspace](https://molab.marimo.io/notebooks) #py
        - [Announcing molab | marimo](https://marimo.io/blog/announcing-molab)
        - [Export notebook as markdown with output · Issue #3692 · marimo-team/marimo](https://github.com/marimo-team/marimo/issues/3692)
            - [Export to other formats - marimo](https://docs.marimo.io/guides/exporting/)
            - [Publish to the web - marimo](https://docs.marimo.io/guides/publishing/)
            - [marimo-team/quarto-marimo: marimo extension for Quarto ⚡ run reactive code inside Quarto](https://github.com/marimo-team/quarto-marimo)
            - [akshayka/test-markdown-export](https://github.com/akshayka/test-markdown-export/)
    - [Org tutorials](https://orgmode.org/worg/org-tutorials/index.html) ([on HN](https://news.ycombinator.com/item?id=44655385))
    - [hygg](https://terminaltrove.com/feed/hygg/), a minimalist terminal-based document reader supporting PDFs, EPUBs, and text files with vim-like navigation
        - [kruseio/hygg](https://github.com/kruseio/hygg)
    - [Alto turns Apple Notes into a website](https://alto.so/) ([on HN](https://news.ycombinator.com/item?id=44678112))
- #idea
    - [Wishes Upon My Demise](https://vale.rocks/posts/regarding-my-death)
        - [death](https://web.archive.org/web/20220327065748/https://ghuntley.com/death/)
        - maybe I should write one for my death
    - [Your Parents Did The Best Job They Knew How To Do](https://shantanugoel.com/2025/07/24/parents/)
}}

\subtree[2025-07-18]{\mdnote{2025-07-18}{
- #ph
    - [A New Geometry for Einstein's Theory of Relativity](https://www.quantamagazine.org/a-new-geometry-for-einsteins-theory-of-relativity-20250716/)
        - [[1808.01536] Displacement convexity of Boltzmann's entropy characterizes the strong energy condition from general relativity](https://arxiv.org/abs/1808.01536) (2018)
        - [[1810.13309] An optimal transport formulation of the Einstein equations of general relativity](https://arxiv.org/abs/1810.13309) (2018)
        - [[1909.09575] Generalized cones as Lorentzian length spaces: Causality, curvature, and singularity theorems](https://arxiv.org/abs/1909.09575) (2019)
        - [[2004.08934] Optimal transport in Lorentzian synthetic spaces, synthetic timelike Ricci curvature lower bounds and applications](https://arxiv.org/abs/2004.08934) (2020)
        - [[2408.15968] A nonlinear d'Alembert comparison theorem and causal differential calculus on metric measure spacetimes](https://arxiv.org/abs/2408.15968) (2024)
        - [[2506.04934] On the geometry of synthetic null hypersurfaces](https://arxiv.org/abs/2506.04934) (2025)
    - [Testing Quantum Theory in Curved Spacetime](http://link.aps.org/doi/10.1103/Physics.18.135)
- #zig
    - #async
        - [Asynchrony is not concurrency](https://kristoff.it/blog/asynchrony-is-not-concurrency/) ([on HN](https://news.ycombinator.com/item?id=44608754)) ([on lobste.rs](https://lobste.rs/s/oeuohp))
        - [Async I/O on Linux and durability](https://blog.canoozie.net/async-i-o-on-linux-and-durability/)
            - [io_uring.pdf](https://kernel.dk/io_uring.pdf)
            - [Getting Hands-on with io_uring using Go](https://developers.mattermost.com/blog/hands-on-iouring-go/)
        - [How to handle people dismissing io_uring as insecure?](https://github.com/axboe/liburing/discussions/1047) ([on HN](https://news.ycombinator.com/item?id=44632240)) #sec
        - [Async runtime and interface](https://github.com/urisinger/zig-async)
    - [What can unpopular languages learn from Zig about how to grow a community?](https://www.reddit.com/r/Zig/comments/1m4q1bf/what_can_unpopular_languages_learn_from_zig_about/)
    - [New Aarch64 Back End](https://ziglang.org/devlog/2025/) ([on HN](https://news.ycombinator.com/item?id=44676315)) ([on lobste.rs](https://lobste.rs/s/qpbfsa))
    - [Zig's @fieldParentPtr for dumbos like me](https://www.ryanliptak.com/blog/zig-fieldparentptr-for-dumbos/)
    - [Lessons learnt while upgrading Apache Arrows project, a zig port, to be compatible with zig 0.14.1.](https://www.reddit.com/r/Zig/comments/1m8nulb/lessons_learnt_while_upgrading_apache_arrows/)
- #rust
    - [polycode: Encode a binary file as a rational polynomial function](https://codeberg.org/cve/polycode)
    - [Async Rust Is A Bad Language (2023)](https://bitbashing.io/async-rust.html) #async
    - [The borrowchecker is what I like the least about Rust](https://viralinstruction.com/posts/borrowchecker/) ([on HN](https://news.ycombinator.com/item?id=44618535)) ([on lobste.rs](https://lobste.rs/s/z2ehwo))
    - [Rickrolling Turso DB (SQLite rewrite in Rust)](https://avi.im/blag/2025/rickrolling-turso/)
    - [StackSafe: Taming Recursion in Rust Without Stack Overflow](https://fast.github.io/blog/stacksafe-taming-recursion-in-rust-without-stack-overflow/) ([on HN](https://news.ycombinator.com/item?id=44669864))
        - [tailcall - Rust](https://docs.rs/tailcall/latest/tailcall/)
    - [SQLx – Rust SQL Toolkit](https://github.com/launchbadge/sqlx) ([on HN](https://news.ycombinator.com/item?id=44690914))
- #ts
    - [Run TypeScript code without worrying about configuration](https://tsx.is/)
        - [Node.js — Running TypeScript Natively](https://nodejs.org/en/learn/typescript/run-natively)
    - [Bun adds pnpm-style isolated installation mode](https://github.com/oven-sh/bun/pull/20440) ([on HN](https://news.ycombinator.com/item?id=44611467))
- #web
    - [DaisyUI: Tailwind CSS Components](https://daisyui.com/) ([on HN](https://news.ycombinator.com/item?id=44646869))
        - [daisyUI and Tailwind CSS theme generator — Tailwind CSS Components ( version 5 update is here )](https://daisyui.com/theme-generator/)
        - [Open Props: sub-atomic styles](https://open-props.style/)
    - [Kelp: A UI library for people who love HTML, powered by modern CSS and Web Components](https://kelpui.com/)
    - [A 14kb page can load much faster than a 15kb page (2022)](https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/) ([on HN](https://news.ycombinator.com/item?id=44613625))
    - [Tailwind is the Worst of All Worlds](https://colton.dev/blog/tailwind-is-the-worst-of-all-worlds/) ([on HN](https://news.ycombinator.com/item?id=44649036)) ([on lobste.rs](https://lobste.rs/s/5u6ydr))

        > people like tailwind not for its API or ergonomics but for its design system

        - [Nativewind](https://www.nativewind.dev/)
        - [UnoCSS: The instant on-demand Atomic CSS engine](https://unocss.dev/)
        - [tachyons-css/tachyons: Functional css for humans](https://github.com/tachyons-css/tachyons/)
        - [Mantine UI](https://ui.mantine.dev/)
    - [It's time for modern CSS to kill the SPA](https://www.jonoalderson.com/conjecture/its-time-for-modern-css-to-kill-the-spa/) ([on HN](https://news.ycombinator.com/item?id=44688489)) ([on lobste.rs](https://lobste.rs/s/zditcp))

        > The reason SPAs became the default...was because, for a while, they were the only way to deliver something that felt fluid – something that didn’t flash white between pages or jank the scroll position.

        - [Smooth transitions with the View Transition API  |  View Transitions  |  Chrome for Developers](https://developer.chrome.com/docs/web-platform/view-transitions/)
        - [Guide to implementing speculation rules for more complex sites  |  Web Platform  |  Chrome for Developers](https://developer.chrome.com/docs/web-platform/implementing-speculation-rules/)
        - [What is Lit? – Lit](https://lit.dev/docs/)

            > a boilerplate-killing component base class that provides reactive state, scoped styles, and a declarative template system that's tiny, fast and expressive.

    - [Windows 7 GUI for the Web](https://khang-nd.github.io/7.css/) ([on HN](https://news.ycombinator.com/item?id=44702894)) #css #os #tech-history
        - [98.css](https://jdan.github.io/98.css/)
        - [XP.css](https://botoxparty.github.io/XP.css/)

}}

\subtree[2025-07-17]{\mdnote{2025-07-17}{
- #rust
    - [A Rust shaped hole](https://mnvr.in/rust) ([on HN](https://news.ycombinator.com/item?id=44570130)) ([on lobste.rs](https://lobste.rs/s/u3ywxf))
- #term
    - [gren-tui: Pure functional TUIs with The Elm Architecture](https://github.com/blaix/gren-tui) #tui
        - [Gren](https://gren-lang.org/)
    - [`waitlock`: Linux CLI tool to provide mutex locks for long running bash ops](https://github.com/bigattichouse/waitlock)
        - [flock(1) - Linux manual page](https://man7.org/linux/man-pages/man1/flock.1.html)
    - [lsr: ls but with io_uring](https://tangled.sh/@rockorager.dev/lsr) #zig
        - on tangled
    - [Speeding up my ZSH shell](https://scottspence.com/posts/speeding-up-my-zsh-shell) ([on HN](https://news.ycombinator.com/item?id=44626363))
    - [timep - trap-based profiler, flamegraph for bash](https://github.com/jkool702/timep)
    - [QuakeNotch: Quake Terminal on your MacBook's notch](https://quakenotch.com) ([on HN](https://news.ycombinator.com/item?id=44627590))
    - [simtool](https://terminaltrove.com/feed/simtool/)
    - [stormy](https://terminaltrove.com/feed/stormy/)
    - [Multiplex: Command-Line Process Mutliplexer](https://github.com/sebastien/multiplex) ([on HN](https://news.ycombinator.com/item?id=44707440)) ([on lobste.rs](https://lobste.rs/s/r6rbyk))
        - [ddollar/foreman: Manage Procfile-based applications](https://github.com/ddollar/foreman)
        - [pvolok/mprocs: Run multiple commands in parallel](https://github.com/pvolok/mprocs)
}}

\subtree[2025-07-15]{\mdnote{2025-07-15}{
- #system
    - [A distributed systems reliability glossary](https://antithesis.com/resources/reliability_glossary/)
- #gpu
    - [Rust running on every GPU](https://rust-gpu.github.io/blog/2025/07/25/rust-on-every-gpu/) ([on HN](https://news.ycombinator.com/item?id=44692876)) ([on lobste.rs](https://lobste.rs/s/3uemyk))
        - https://mlir.llvm.org/docs/Dialects/NVGPU/
        - https://mlir.llvm.org/docs/Dialects/AMDGPU/
        - https://mlir.llvm.org/docs/Dialects/XeGPU/
    - [Apple's MLX adding CUDA support](https://github.com/ml-explore/mlx/pull/1983) ([on HN](https://news.ycombinator.com/item?id=44565668))
        - Programs built against MLX -> Can take advantage of CUDA-enabled chips
        - not the other way around
        - [SCALE documentation](https://docs.scale-lang.com/stable/)
            - SCALE is a GPGPU programming toolkit that can natively compile CUDA applications for AMD GPUs.
            - [spectral-compute/scale-examples](https://github.com/spectral-compute/scale-examples)
    - [GPUHammer: Rowhammer Attacks on GPU Memories are Practical](https://gpuhammer.com/) #sec
    - [A GPU Calculator That Helps Calculate What GPU to Use](https://calculator.inference.ai/) ([on HN](https://news.ycombinator.com/item?id=44676961))
- #db
    - [Embedding User-Defined Indexes in Apache Parquet Files](https://datafusion.apache.org/blog/2025/07/14/user-defined-parquet-indexes/)
- #selfhost
    - [Packages proxies](https://blog.garambrogne.net/packages-proxies-en.html)
        - [EpicWink/proxpi: PyPI caching proxy](https://github.com/EpicWink/proxpi)
        - [panamax-rs/panamax: Mirror rustup and crates.io repositories, for offline Rust and cargo usage.](https://github.com/panamax-rs/panamax)
        - [Pulp Project](https://pulpproject.org/)

            > Some specialized proxies handle different kinds of packages, like Pulp.

        - [soulteary/apt-proxy: [Ubuntu / Debian / CentOS / Alpine] Lightweight APT / YUM / APK CHACHE PROXY just over 2MB in size!](https://github.com/soulteary/apt-proxy)
        - [NGINX Content Caching | NGINX Documentation](https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/)

            > Squid is boring; lets use Nginx cache.

- #agent
    - [Show HN: We made our own inference engine for Apple Silicon](https://github.com/trymirai/uzu)
        - A high-performance inference engine for AI models, in Rust
        - [trymirai/lalamo: JAX infrastructure for model optimisation](https://github.com/trymirai/lalamo)
        - [Anemll/Anemll: Artificial Neural Engine Machine Learning Library](https://github.com/Anemll/Anemll)
- #nix
    - [Trying Guix: A Nixer's Impressions](https://tazj.in/blog/trying-guix)
- #workflow
    - [Nextflow: System for creating scalable, portable, reproducible workflows](https://github.com/nextflow-io/nextflow)
    - [Metaflow: Build, Manage and Deploy AI/ML Systems](https://github.com/Netflix/metaflow) ([on HN](https://news.ycombinator.com/item?id=44586530))
}}

\subtree[2025-07-14]{\mdnote{2025-07-14}{
- #cg
    - [Algorithms for making interesting organic simulations](https://bleuje.com/physarum-explanation/) ([on HN](https://news.ycombinator.com/item?id=44551777)) ([on lobste.rs](https://lobste.rs/s/rx4vvq))
    - [Simulating Fluids, Fire, and Smoke in Real-Time](https://andrewkchan.dev/posts/fire.html)
    - [Ten years of running every day, visualized](https://nodaysoff.run/)
    - [Hallucinations on the future of real-time rendering](https://www.c0de517e.com/023_hpg/hpg2025_keynote_apesce.pdf)
- #asm
    - [The missing guide to Dataflow Analysis in MLIR](https://lowlevelbits.com/p/the-missing-guide-to-dataflow-analysis)
    - [Let's Learn x86-64 Assembly! Part 0 - Setup and First Steps](https://gpfault.net/posts/asm-tut-0.txt.html)
    - [Welcome to Asm Editor](https://asm-editor.specy.app/)
    - [A Programmer’s Guide to x86-64 Assembly (Series Overview)](https://blog.codingconfessions.com/p/a-programmers-guide-to-x86-64-assembly)
    - [Understanding Registers and Data Movement in x86-64 Assembly](https://blog.codingconfessions.com/p/x86-registers)
    - [detour: A detour through the Linux dynamic linker](https://github.com/graphitemaster/detour)
    - [SIMD Within a Register: How I Doubled Hash Table Lookup Performance](https://maltsev.space/blog/012-simd-within-a-register-how-i-doubled-hash-table-lookup-performance) ([on HN](https://news.ycombinator.com/item?id=44707546)) #perf
    - [Profiling without Source code – how I diagnosed Trackmania stuttering](https://larstofus.com/2025/07/27/profiling-without-source-code-how-i-diagnosed-trackmania-stuttering/) #perf #game
- #cpp
    - [The Best C++ Library](https://mcyoung.xyz/2025/07/14/best/)
    - [Stepanov’s biggest blunder](https://mmapped.blog/posts/43-stepanovs-biggest-blunder)
    - [C++ Coroutines Advanced: Converting std:future to asio:awaitable](https://www.ddhigh.com/en/2025/07/15/cpp-coroutine-future-to-awaitable/) ([on HN](https://news.ycombinator.com/item?id=44567134))
    - [Initial implementation of the experimental C++ Lifetime Safety Analysis (-Wexperimental-lifetime-safety) has just landed in Clang](https://discourse.llvm.org/t/announcing-the-lifetime-safety-breakout-group/87333)
    - [cppq: Simple, reliable & efficient distributed task queues for C++17](https://github.com/h2337/cppq)
- #formal #lean
    - [Yalep - Micro language based on Lean for teaching mathematical high-school proofs](https://gricad-gitlab.univ-grenoble-alpes.fr/yalep/Yalep)
    - [Using Lean like an External SMT Solver from Python](https://www.philipzucker.com/lean_smt/)
    - [CSLib: A Foundation for Computer Science in Lean 4](https://docs.google.com/presentation/d/1aJFM3EaI4LcppHR_2YFQHiBjUfMMhMKxCeM3BfINi48/edit?pli=1&slide=id.g3505f486166_0_47#slide=id.g3505f486166_0_47)
    - [LeanTree: Accelerating White-Box Proof Search with Factorized States in Lean 4](http://arxiv.org/pdf/2507.14722v1)
    - [Solving Formal Math Problems by Decomposition and Iterative Reflection](http://arxiv.org/pdf/2507.15225v1)
    - A formalization of elementary linear algebra [Part I](https://cgi.cse.unsw.edu.au/~eptcs/paper.cgi?ACL2in2025.1.pdf) [Part II](https://cgi.cse.unsw.edu.au/~eptcs/paper.cgi?ACL2in2025.2.pdf)
- #math
    - [robust matrix factorization](https://hoggresearch.blogspot.com/2025/07/robust-matrix-factorization.html)
- #mac
    - [ByteAtATime/flare: Raycast-compatible launcher for Linux](https://github.com/ByteAtATime/flare)
}}

\subtree[2025-07-13]{\mdnote{2025-07-13}{
- #scifi
    - [Are we Trek yet? – A guide for how close we are to Star Trek technology](https://arewetrekyet.com/) ([on HN](https://news.ycombinator.com/item?id=44658458))
    - [Reading Neuromancer for the first time in 2025](https://mbh4h.substack.com/p/neuromancer-2025-review-william-gibson) ([on HN](https://news.ycombinator.com/item?id=44548353))
- #idea
    - [Two Simple Rules to Fix Code Reviews](https://serce.me/posts/2025-07-17-two-simple-rules-to-fix-code-reviews)
        - [First Come First Served: The Impact of File Position on Code Review](https://arxiv.org/abs/2208.04259)
    - [Why measuring productivity is hard](https://lemire.me/blog/2025/07/12/why-measuring-productivity-is-hard/)
    - [constrained languages are easier to optimize](https://jyn.dev/constrained-languages-are-easier-to-optimize/)
    - [Minimalism is a Cult](https://mirroredworld.bearblog.dev/minimalism-is-a-cult/)
}}

\subtree[2025-07-12]{\mdnote{2025-07-12}{
- #ai-safety
    - [Death by a Thousand Slops](https://daniel.haxx.se/blog/2025/07/14/death-by-a-thousand-slops/)
    - [Bad Actors Are Grooming LLMs to Produce Falsehoods](https://americansunlight.substack.com/cp/168074209) ([on HN](https://news.ycombinator.com/item?id=44540052))
    - [Grok 4 will always snitch on you and email the feds if it suspects wrongdoing](https://www.neowin.net/news/grok-4-will-always-snitch-on-you-and-email-the-feds-if-it-suspects-wrongdoing-report-says/) ([on HN](https://news.ycombinator.com/item?id=44542029))
    - [Simon Willison | Musk’s latest Grok chatbot searches for billionaire mogul’s views before answering questions](https://simonwillison.net/2025/Jul/12/musks-latest-grok/)
    - [Death by AI](https://davebarry.substack.com/p/death-by-ai)
    - [DuckDuckGo now lets you hide AI-generated images in search results](https://techcrunch.com/2025/07/18/duckduckgo-now-lets-you-hide-ai-generated-images-in-search-results/) ([on HN](https://news.ycombinator.com/item?id=44606803))
    - [Meta says it won’t sign Europe AI agreement, calling it an overreach](https://www.cnbc.com/2025/07/18/meta-europe-ai-code.html) ([on HN](https://news.ycombinator.com/item?id=44607838))
    - [Replit goes rogue and deletes our entire database](https://twitter.com/jasonlk/status/1946069562723897802) ([on HN](https://news.ycombinator.com/item?id=44622725))
    - [Vibe Coding Gone Wrong: 5 Rules for Safely Using AI](https://cybercorsairs.com/my-ai-co-pilot-deleted-my-production-database/)
    - [Simon Willison | Quoting ICML 2025](https://simonwillison.net/2025/Jul/23/icml-2025/)

        > Submitting a paper with a "hidden" prompt is scientific misconduct if that prompt is intended to obtain a favorable review from an LLM.

    - [AI Friend Apps Are Destroying What's Left of Society](https://www.currentaffairs.org/news/ai-friend-apps-are-destroying-whats-left-of-society) ([on HN](https://news.ycombinator.com/item?id=44660863))
    - [Hacker slips malicious 'wiping' command into Amazon's Q AI coding assistant](https://www.zdnet.com/article/hacker-slips-malicious-wiping-command-into-amazons-q-ai-coding-assistant-and-devs-are-worried/) ([on HN](https://news.ycombinator.com/item?id=44675557))
    - [We built the security layer MCP always needed](https://blog.trailofbits.com/2025/07/28/we-built-the-security-layer-mcp-always-needed/)
- #disect
    - [Introduction to Digital Filters](https://ccrma.stanford.edu/~jos/filters/)
        - [Karl Hiner - Introduction to Digital Filters - Jupyter notebooks and a geometric interpretation of digital audio filters](https://karlhiner.com/jupyter_notebooks/intro_to_digital_filters) ([on HN](https://news.ycombinator.com/item?id=44535977))
    - [new Date("wtf")](https://jsdate.wtf/)
    - [What the Fuck Python](https://colab.research.google.com/github/satwikkansal/wtfpython/blob/master/irrelevant/wtf.ipynb) ([on HN](https://news.ycombinator.com/item?id=44618335))
    - [How does a screen work?](https://www.makingsoftware.com/chapters/how-a-screen-works)
    - [When SIGTERM Does Nothing: A Postgres Mystery](https://clickhouse.com/blog/sigterm-postgres-mystery)
    - [Artisanal Handcrafted Git Repositories](https://drew.silcock.dev/blog/artisanal-git/) ([on HN](https://news.ycombinator.com/item?id=44586064)) ([on lobste.rs](https://lobste.rs/s/4bhrvr)) #jj
- #crash
    - [Preliminary report into Air India crash released](https://www.bbc.co.uk/news/live/cx20p2x9093t) ([on HN](https://news.ycombinator.com/item?id=44536459))
- #fediverse
    - [Revival: There appears to be media consensus: "Bluesky is dead."](https://netwars.pelicancrossing.net/2025/06/27/revival/)
- #ph
    - [Black hole merger challenges our understanding of black hole formation](https://gizmodo.com/astronomers-detect-a-black-hole-merger-thats-so-massive-it-shouldnt-exist-2000628197) ([on HN](https://news.ycombinator.com/item?id=44555220))
    - [LIGO detects most massive black hole merger to date](https://www.caltech.edu/about/news/ligo-detects-most-massive-black-hole-merger-to-date) ([on HN](https://news.ycombinator.com/item?id=44564656))
    - [U.S. abandons hunt for signal of cosmic inflation](https://www.science.org/content/article/u-s-abandons-hunt-signal-cosmic-inflation)
        - [China is quietly preparing to build a gigantic telescope | Science | AAAS](https://www.science.org/content/article/china-quietly-preparing-build-gigantic-telescope)
        - [Xuntian](https://en.wikipedia.org/wiki/Xuntian)
    - [Ten Minute Physics](https://matthias-research.github.io/pages/tenMinutePhysics/)
    - [Why you can't color calibrate deep space photos](https://maurycyz.com/misc/cc/) ([on HN](https://news.ycombinator.com/item?id=44654444))
- #sandbox
    - [What is Incus?](https://linuxcontainers.org/incus/)
    - [Bedrock: A tiny, portable 8-bit virtual computer (uxn fork)](https://benbridle.com/projects/bedrock.html)
- #game
    - [Simon Tatham's Portable Puzzle Collection](https://www.chiark.greenend.org.uk/~sgtatham/puzzles/) ([on HN](https://news.ycombinator.com/item?id=44691935))
    - [Unofficial Bevy Cheat Book](https://bevy-cheatbook.github.io/)
    - [3D Math Primer for Graphics and Game Development](https://gamemath.com/)
    - [luxe engine | A lovingly crafted game engine](https://luxeengine.com/)
    - [Dog Walk: Blender Studio's official game project](https://blenderstudio.itch.io/dogwalk) ([on HN](https://news.ycombinator.com/item?id=44565603))
    - [3D Game Engine Programming](https://www.3dgep.com/)
    - [Procedural Content Generation in Games](https://www.pcgbook.com/) #cg
    - [Godot Engine 4 Tutorials](https://catlikecoding.com/godot/)
    - [SnowballSH/Avalanche: UCI Chess Engine written in Zig.](https://github.com/SnowballSH/Avalanche)
        - [~voroskoi/delilah - sourcehut git](https://git.sr.ht/~voroskoi/delilah)
}}

\subtree[2025-07-11]{\mdnote{2025-07-11}{
- agent
    - [Not So Fast: AI Coding Tools Can Actually Reduce Productivity](https://secondthoughts.ai/p/ai-coding-slowdown)
        - 19 percent productivity drop
        - it's most interesting how objections are addressed
            - The John Henry Effect: motivated to “beat the machine”, not observed
            - Underuse of AI: not observed
            - Cheating: can't explain a productivity loss
            - Overly optimistic time estimates: should cancel out
            - Skewed task definitions: randomly assigned
            - Dropout effects: incomplete tasks are evenly divided
            - Out-of-date tools: not observed
            - Inaccurate time reporting: use alternative metrics
            - Overuse of AI: carried away by exploring AI
            - Lack of experience with AI tools: prior experience reported, no improvements through the study observed
            - Difference in thoroughness: 47 percent more code by AI
        - quotes from [First, They Came for the Software Engineers… - by TarenSK](https://secondthoughts.ai/p/first-they-came-for-the-software)
            - "Typically, large productivity boosts occur for small, well-defined, greenfield projects, or when an engineer is first learning a new language or API"
            - "For other work, gains from using current AI tools are often far more modest – and potentially entirely offset by increased time needed for review, debugging, integration, and managing AI quirks."
    - [AI agent benchmarks are broken](https://ddkang.substack.com/p/ai-agent-benchmarks-are-broken)
        - many validity issues are identified in [uiuc-kang-lab/agentic-benchmarks](https://github.com/uiuc-kang-lab/agentic-benchmarks)
    - [We're Light-Years Away from True Artificial Intelligence, Says Martha Wells, author of the Murderbot Diaries series](https://www.scientificamerican.com/article/were-light-years-away-from-true-artificial-intelligence-says-murderbot/)
    - [Vibe Kanban – Kanban board to manage your AI coding agents](https://github.com/BloopAI/vibe-kanban)
        - tried, required too much GitHub authorization, settled on local-first backlog
- [An almost catastrophic OpenZFS bug and the humans that made it](https://despairlabs.com/blog/posts/2025-07-10-an-openzfs-bug-and-the-humans-that-made-it/)
    - follow-up: [What people said about an OpenZFS bug](https://despairlabs.com/blog/posts/2025-07-13-an-openzfs-bug-and-the-humans-that-made-it-comments/)
        - wrapper types can be done, but they are very difficult to work with
        - unused variable warning can't catch it, as it is only a dead store: we store a value that is never read
        - static analysers all catch it, but they suffer from noise
    - [OpenZFS Bug Ported to Zig](https://andrewkelley.me/post/openzfs-bug-ported-zig.html) #zig
- [FP8 is ~100 tflops faster when the kernel name has "cutlass" in it](https://twitter.com/cis_female/status/1943069934332055912)
    - [the PR](https://github.com/triton-lang/triton/pull/7298)
    - "that is a very usual way (known practices) of vendors applying specific optimizations for known things"
- [Pangolin – Open source alternative to Cloudflare Tunnels](https://github.com/fosrl/pangolin)
    - client: [fosrl/newt: A tunneling client for Pangolin](https://github.com/fosrl/newt)
        - a custom user space WireGuard client
    - may be cheap to self-host on [RackNerd](https://www.racknerd.com/)
    - [awesome-tunneling: List of ngrok/Cloudflare Tunnel alternatives and other tunneling software and services. Focus on self-hosting.](https://github.com/anderspitman/awesome-tunneling)
}}

\subtree[2025-07-10]{\mdnote{2025-07-10}{
- #rust
    - [Optimizing a Math Expression Parser in Rust](https://rpallas.xyz/math-parser/) #perf
        - profile time usage: [`cargo flamegraph`](https://github.com/flamegraph-rs/flamegraph) which uses [jonhoo/inferno: A Rust port of FlameGraph](https://github.com/jonhoo/inferno)
        - profile memory usage: [nnethercote/dhat-rs: Heap profiling and ad hoc profiling for Rust programs.](https://github.com/nnethercote/dhat-rs)
        - SIMD scan
        - `mmap`
    - [(Quite) A Few Words About Async](https://yoric.github.io/post/quite-a-few-words-about-async/)
        - reviewed alternative to async, and async/await in Python, Js, Rust, (and not in) Go (implicit M:N scheduling), OCaml (effect)
        - [From Async/Await to Virtual Threads](https://simonwillison.net/2025/Aug/3/virtual-threads/)
    - [Tree Borrows](https://plf.inf.ethz.ch/research/pldi25-tree-borrows.html) ([on HN](https://news.ycombinator.com/item?id=44510600)) #formal
        - earlier blog post: [Tree Borrows](https://perso.crans.org/vanille/treebor/)
        - Tree Borrows rejects 54 percent fewer test cases than Stacked Borrows does
        - proven in Rocq: most of the Stacked Borrows optimizations are retained, read-read reorderings and other important new optimizations are enabled
        - Stacked borrows is Miri's runtime model, the current version of Tree Borrows is implemented in the Miri interpreter
        - more about stacked borrows
            - [unsafe-code-guidelines/wip/stacked-borrows.md at master · rust-lang/unsafe-code-guidelines](https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md)
        - [Forget Borrow Checkers: C3 Solved Memory Lifetimes With Scopes](https://c3-lang.org/blog/forget-borrow-checkers-c3-solved-memory-lifetimes-with-scopes/)
    - [Building Modular Interpreters and Visitors in Rust with Extensible Variants and CGP](https://contextgeneric.dev/blog/extensible-datatypes-part-2/)
    - [Placing functions](https://blog.yoshuawuyts.com/placing-functions/)
- #asm
    - [An online searchable reference tool for C intrinsics of all major SIMD engines](https://simd.info/)
        - people mentioned more references [on HN](https://news.ycombinator.com/item?id=44496229)
    - [The messy reality of SIMD (vector) functions](https://johnnysswlab.com/the-messy-reality-of-simd-vector-functions) ([on HN](https://news.ycombinator.com/item?id=44470464))
    - [Writing a very simple JIT Compiler in about 1000 lines of C](https://kuterdinel.com/writing-a-very-simple-jit-compiler-in-about-1000-lines-of-c.html)
    - [Writing an IR from Scratch and survive to write a post](https://farena.in/compilers/programming/writing-an-ir-from-scratch/)
    - [Go Assembly Mutation Testing](https://words.filippo.io/assembly-mutation/)
    - [A Bytecode VM for Arithmetic: The Parser](https://abhinavsarkar.net/posts/arithmetic-bytecode-vm-parser/)
        - in Haskell
    - [Injecting Java from native libraries on Android](https://octet-stream.net/b/scb/2025-08-03-injecting-java-from-native-libraries-on-android.html)
    - [So you want to parse a PDF?](https://eliot-jones.com/2025/8/pdf-parsing-xref) ([on HN](https://news.ycombinator.com/item?id=44780353)) ([on lobste.rs](https://lobste.rs/s/tflj1y))
- #copyright
    - [I used to prefer permissive licenses and now favor copyleft](https://vitalik.eth.limo/general/2025/07/07/copyleft.html)
    - [Belgium bans Internet Archive's ‘Open Library’](https://torrentfreak.com/belgium-bans-internet-archives-open-library-in-sweeping-site-blocking-order/)
    - [Measuring Fair Use: The Four Factors](https://fairuse.stanford.edu/overview/fair-use/four-factors/)
    - [Anthropic Agrees to Pay $1.5 Billion to Settle Lawsuit With Book Authors](https://www.nytimes.com/2025/09/05/technology/anthropic-settlement-copyright-ai.html?unlocked_article_code=1.jk8.bTTt.Zir9wmtPaTp2&smid=url-share)
            - [On HN](https://news.ycombinator.com/item?id=45142885)
            - https://www.washingtonpost.com/technology/2025/09/05/anthropic-book-authors-copyright-settlement/
    - [An update from the team about Anna’s Archive](https://annas-archive.org/blog/an-update-from-the-team.html) #copyright
            - [On HN](https://news.ycombinator.com/item?id=44942501)
    - [A media company demanded a license fee for an Open Graph image I used](https://alistairshepherd.uk/writing/open-graph-licensing/) ([on HN](https://news.ycombinator.com/item?id=44654494))
    - [Bypassing Watermark Implementations](https://blog.kulkan.com/bypassing-watermark-implementations-fe39e98ca22b) ([on HN](https://news.ycombinator.com/item?id=44648957))
        - [tim-janik/imagewmark: Resilient watermarking of digital images](https://github.com/tim-janik/imagewmark/)
        - [swesterfeld/audiowmark: Audio Watermarking](https://github.com/swesterfeld/audiowmark)
    - [“Tivoization” and your right to install under Copyleft and GPL (2021)](https://sfconservancy.org/blog/2021/jul/23/tivoization-and-the-gpl-right-to-install/) ([on HN](https://news.ycombinator.com/item?id=44707261))
- #idea #edu
    - [Let Kids Be Loud](https://www.afterbabel.com/p/let-kids-be-loud) ([on HN](https://news.ycombinator.com/item?id=44513801))
- #sec
    - [PyPI Phishing Attack: Incident Report](https://blog.pypi.org/posts/2025-07-31-incident-report-phishing-attack/)
    - [Multiple vulnerabilities fixed in Git](https://www.openwall.com/lists/oss-security/2025/07/08/4)
    - [CVE-2025-48384: Breaking git with a carriage return and cloning RCE](https://dgl.cx/2025/07/git-clone-submodule-cve-2025-48384)
- #music
    - [Petrichor – a free, open-source, offline music player for macOS](https://github.com/kushalpandya/Petrichor)
        - a lot of other apps are suggested [on HN](https://news.ycombinator.com/item?id=44515266)
    - [Radium Music Editor](http://users.notam02.no/~kjetism/radium/)
    - [Xenharmlib: A music theory library that supports non-western harmonic systems](https://xenharmlib.readthedocs.io/en/latest/)
}}

\subtree[2025-07-09]{\mdnote{2025-07-09}{
- [Magic .env files built for sharing: Human-first, AI-friendly](https://varlock.dev/)
    - I might wish to use it to render `.env`, where secrects will be managed by `pass`
        - [Passkeys are just passwords that require a password manager](https://danfabulich.medium.com/passkeys-are-just-passwords-that-require-a-password-manager-ebb7f2fdcadf)
        - placing password managere related content here for now #pass
    - or better, adopt `varlock run` approach instead of using `just`, `mise`, or `docker-compose` to read from `.env` files, but it's a longer journey
- #selfhost
    - [Monitoring my Homelab, Simply](https://b.tuxes.uk/simple-homelab-monitoring.html)
        - [ntfy.sh](https://ntfy.sh/) for paging
        - [Cron Job Monitoring - Healthchecks.io](https://healthchecks.io/) as a dead man’s switch (monitor 20 cron jobs for free)
            - two dead man switches: 5m & 2h
    - [The Future is NOT Self-Hosted](https://www.drewlyton.com/story/the-future-is-not-self-hosted/)
    - [AWS deleted my 10-year account and all data without warning](https://www.seuros.com/blog/aws-deleted-my-10-year-account-without-warning/)
- [Using fs_usage to see what files a process is using](https://til.simonwillison.net/macos/fs-usage)
    - reminds me of `strace` days, added `just trace` tasks as a note
- [Smollm3: Smol, multilingual, long-context reasoner LLM](https://huggingface.co/blog/smollm3)
    - I need to keep notes on models I tried in garden
- [MCP server for searching and downloading documents from Anna's Archive](https://github.com/iosifache/annas-mcp)
    - also as a CLI
    - requires donation to access the JSON API
- [Clew](https://clew.se/about/)
    - a self-hostable search engine that focus on writing by independent creators
    - discusses various search techniques in its blog posts
    - tried, not great search result
}}

\subtree[2025-07-08]{\mdnote{2025-07-08}{
- #rust
    - [Understanding Rust’s Memory Model](https://minami.bearblog.dev/rust-memory-model/)
    - [#[derive(Clone)] is broken](https://rgbcu.be/blog/derive-broken/)
    - [Building the Rust compiler with GCC](https://fractalfir.github.io/generated_html/cg_gcc_bootstrap.html)
        - [rust-lang/rustc_codegen_gcc: libgccjit AOT codegen for rustc](https://github.com/rust-lang/rustc_codegen_gcc)
        - [Testing the GCC-based Rust compiler(backend)](https://fractalfir.github.io/generated_html/cg_gcc_bootstrap_2.html)
- #clojure
    - [All Programming Languages are Fast](https://orgpad.info/blog/all-programming-langs-are-fast)
    - [8 Reasons why Clojure is a better Java than Java](https://ericnormand.me/article/clojure-is-a-better-java-than-java)
- #swift
    - [Cocoa Basics series](https://blog.xoria.org/cocoa-basics-0/)
- #go
    - [Generic interfaces](https://go.dev/blog/generic-interfaces)
    - [What's //go:nosplit for?](https://mcyoung.xyz/2025/07/07/nosplit/)
    - [Be Careful with Go Struct Embedding](https://mattjhall.co.uk/posts/be-careful-with-go-struct-embedding.html)
- #software #idea
    - [Inverse Triangle Inequality](https://matklad.github.io/2025/07/07/inverse-triangle-inequality.html)
- #lean
    - [Lean's new home page](https://lean-lang.org/): Lean is a theorem prover and programming language that enables correct, maintainable, and formally verified code
        - learn about tactic `grind`
    - [The Lean FRO Year 3 Roadmap — Lean Lang](https://lean-lang.org/fro/roadmap/1900-1-1-the-lean-fro-year-3-roadmap/)
    - [My first verified (imperative) program](https://markushimmel.de/blog/my-first-verified-imperative-program/) ([on HN](https://news.ycombinator.com/item?id=44492986))
    - [The Math Is Haunted](https://overreacted.io/the-math-is-haunted/)
    - [“Bad Apple!!” But It’s 3288 Lean Tactics Spamming VSCode](https://unnamed.website/posts/bad-apple-lean-tactic/)
- #lang
    - [Flix – A powerful effect-oriented programming language](https://flix.dev/) ([on HN](https://news.ycombinator.com/item?id=44521224))
        - runs on JVM, interoperable with Java, Kotlin, Scala, etc.
        - could be considered a meta-programming language for Datalog
        - [DIDYOUKNOW.md](https://github.com/flix/flix/blob/master/docs/DIDYOUKNOW.md) is informative
        - [Flix | FAQ](https://flix.dev/faq/) is fun
    - [Pony](https://www.ponylang.io/discover/) ([on HN](https://news.ycombinator.com/item?id=44719413))
        - open-source, object-oriented, actor-model, capabilities-secure, high-performance
        - [An Early History of Pony - Pony](https://www.ponylang.io/blog/2017/05/an-early-history-of-pony/)
    - [The Q Programming Language](https://git.urbach.dev/cli/q)
        - ssa and asm optimizations
        - zero dependencies (no llvm, no libc)
        - ultra-fast builds and tiny binaries
        - written in Go
    - [Concurrent Programming with Harmony](https://harmony.cs.cornell.edu/book/) #formal
        - a Python-like open-source programming language for testing and experimenting with concurrent and distributed programs
        - Harmony programs are model-checked so that all corner cases are explored
    - [Carbon Language: An experimental successor to C++](https://docs.carbon-lang.dev/)
        - informative discussions on [on HN](https://news.ycombinator.com/item?id=44745984)
    - [SUS Lang: The SUS Hardware Description Language](https://sus-lang.org/)
        -  Verilog and VHDL might be good enough per [this comment on HN](https://news.ycombinator.com/item?id=44495311)
    - [Gren 25S: Easier interop, concurrent tasks and zero-install packages](https://gren-lang.org/news/250721_gren_25s) #lang
    - #lua
        - [the Fennel programming language](https://fennel-lang.org/)
        - [YueScript](https://yuescript.org/)
        - [Lua beats MicroPython for serious embedded devs](https://www.embedded.com/why-lua-beats-micropython-for-serious-embedded-devs)
        - [willtobyte/carimbo: A 2D game engine developed in modern C++ using SDL, featuring Lua scripting capabilities and designed for web portability via WebAssembly.](https://github.com/willtobyte/carimbo)
- #model-edit
    - [Show HN: Unlearning Comparator, a visual tool to compare machine unlearning](https://gnueaj.github.io/Machine-Unlearning-Comparator/)
- #wasm
    - [WebAssembly: Yes, but for What?](https://queue.acm.org/detail.cfm?id=3746171)
    - [AssemblyScript](https://www.assemblyscript.org/)
        - A TypeScript-like language for WebAssembly
    - [When Is WebAssembly Going to Get DOM Support?](https://queue.acm.org/detail.cfm?id=3746174) ([on HN](https://news.ycombinator.com/item?id=44655921))
- #im
    - [bitchat is a decentralized, peer-to-peer messaging application that operates over Bluetooth Low Energy (BLE) mesh networks](https://github.com/jackjackbits/bitchat/blob/main/WHITEPAPER.md)
    - [White Noise – secure and private messenger](https://www.whitenoise.chat/)
    - [Matrix Is Not Safe for EU Data Privacy](https://wire.com/en/blog/matrix-not-safe-eu-data-privacy)
        - [Addressing fear, uncertainty and doubt thrown at Element and Matrix](https://element.io/blog/addressing-fear-uncertainty-and-doubt-thrown-at-element-and-matrix/)
    - [Why not Matrix (2023)](https://telegra.ph/why-not-matrix-08-07)
    - [catgirl - IRC client](https://git.causal.agency/catgirl/about/)
    - [About Convos - The simplest IRC client around](https://convos.chat/)
    - [NINA: Rebuilding the original AIM, AOL Desktop, Yahoo and ICQ platforms](https://nina.chat/) ([on HN](https://news.ycombinator.com/item?id=44590678))
    - [Giving Up on Element & Matrix.org](https://xn--gckvb8fzb.com/giving-up-on-element-and-matrixorg/) ([on HN](https://news.ycombinator.com/item?id=44617309)) ([on lobste.rs](https://lobste.rs/s/jtd0b1))
    - [XMPP: When a 25-Year-Old Protocol Becomes Strategic Again](https://www.process-one.net/blog/xmpp-when-a-25-year-old-protocol-becomes-strategic-again/) ([on HN](https://news.ycombinator.com/item?id=44680842))
}}

\subtree[2025-07-07]{\mdnote{2025-07-07}{
- #ai-safety
    - [A non-anthropomorphized view of LLMs](http://addxorrol.blogspot.com/2025/07/a-non-anthropomorphized-view-of-llms.html)
        - some quotes:
            - Alignment and safety for LLMs (should) mean that we should be able to quantify and bound the probability with which certain undesirable sequences are generated
            - Human thought is a poorly-understood process, involving enormously many neurons, extremely high-bandwidth input, an extremely complicated cocktail of hormones, constant monitoring of energy levels, and millions of years of harsh selection pressure
            - Navigating the dramatic changes of the next few decades while trying to avoid world wars and murderous ideologies is difficult enough without muddying our thinking.
    - [Our first outage from LLM-written code](https://sketch.dev/blog/our-first-outage-from-llm-written-code)
        - "There were two competing sources of signal here for what token to predict at the critical moment: transcription and local prediction. Transcription said break. Local prediction said continue. Unfortunately for us, local prediction won."
        - Prevention: cliboard tools
        - a comments [on lobste.rs](https://lobste.rs/c/9qzkkm) points out
            - move across files can be detected by `git --color-moved`
                - I prefer `--color-moved=dimmed-zebra` or better, `--color-moved-ws=allow-indentation-change`
                - see [this tweet](https://x.com/offlinemark/status/1430975771363921922)
                - it's also [supported by `delta`](https://github.com/dandavison/delta/blob/main/manual/src/color-moved-support.md)
    - [EU rules ask tech giants to publicly track how, when AI models go off the rails](https://arstechnica.com/tech-policy/2025/07/everything-tech-giants-will-hate-about-the-eus-new-ai-rules/)
        - "AI companies are moving to user interface innovations to try to grab more unwilling training individuals"
    - Hallucination
        - [AI Hallucination Cases Database](https://www.damiencharlotin.com/hallucinations/)
        - [The Sound of Silence](https://kieranhealy.org/blog/archives/2025/07/22/the-sound-of-silence/)
    - [LLMs can now identify public figures in images](https://minimaxir.com/2025/07/llms-identify-people/)
        - [Claude always responds as if it is completely face blind](https://news.ycombinator.com/item?id=41369641)
            - never identifies or names any humans in the image, nor does it imply that it recognizes the human
            - does not mention or allude to details about a person that it could only know if it recognized who the person was
            - if told by user who the individual is, can discuss that named individual
                - without ever confirming that it is the person in the image, identifying the person in the image, or implying it can use facial features to identify any unique individual
- #agent
    - [Building personalized micro agents](https://blog.meain.io/2025/building-personalized-micro-agents/)
        - agent: has access to tools, decides which tools to use, and in what order, determines when the task is complete
            - boils down to 9 LOC
        - micro agent: access to a very limited, highly specific set of tools
            - less confusion when choosing tools
            - works with small, local modelsA
            - safe autonomy
        - [meain/esa: Fastest way to create personalized AI agents](https://github.com/meain/esa)
    - [The era of exploration](https://yidingjiang.github.io/blog/post/exploration/)
        - the immense cost of pretraining is effectively paying a massive, upfront “exploration tax.”
        - Exploration is deciding what data the learner will see
            - World sampling – deciding where to learn, i.e. a particular problem that needs to be solved
            - Path sampling – deciding how to gather data inside a world, e.g. random walks, curiosity‑driven policies, tree search, tool-use, etc.
                - recent work: [curiosity objectives](https://arxiv.org/abs/1908.06976), [open-endedness](https://arxiv.org/abs/2406.04268), [meta‑exploration](https://arxiv.org/abs/2502.17543)
    - [Prompt Coding: No code edits, only complete rewrites](https://www.gibney.org/prompt_coding) #idea
        - [When vibe coding, isn't the source code the prompt?](https://boston.conman.org/2025/08/04.1)
    - [Adding a feature because ChatGPT incorrectly thinks it exists](https://www.holovaty.com/writing/chatgpt-fake-feature/) #idea
    - [The Architecture Behind Lovable and Bolt](https://www.beam.cloud/blog/agentic-apps)
        - uses [baml](https://github.com/BoundaryML/baml) to engineer prompts using schemas
        - uses [Beam](https://docs.beam.cloud/v2/getting-started/introduction), an open-source serverless cloud for sanboxed execution
        - made into [beam-cloud/lovable-clone](https://github.com/beam-cloud/lovable-clone)
    - [How I keep up with AI progress](https://blog.nilenso.com/blog/2025/06/23/how-i-keep-up-with-ai-progress/)
- interesting projects
    - [Am I online?](https://antonz.org/is-online/)
        - `generate_402` pages could be used for this
    - [Show HN: NYC Subway Simulator and Route Designer](https://buildmytransit.nyc)
    - [Showh HN: Microjax – JAX in two classes and six functions](https://github.com/joelburget/microjax)
    - [tinymcp: Let LLMs control embedded devices via the Model Context Protocol](https://github.com/golioth/tinymcp)
    - [Render your Jupyter notebooks in OpenGist](https://blog.fabiomanganiello.com/article/render-your-jupyter-notebooks-in-opengist)
}}

\subtree[2025-07-06]{\mdnote{2025-07-06}{\tags{#agent #docker #game #news #sec}
- #env
    - ['It's too late': David Suzuki says the fight against climate change is lost](https://www.ipolitics.ca/2025/07/02/its-too-late-david-suzuki-says-the-fight-against-climate-change-is-lost/) ([on HN](https://news.ycombinator.com/item?id=44476774))
- #sandbox
    - [Basically Everyone Should Be Avoiding Docker](https://lukesmith.xyz/articles/everyone-should-be-avoiding-docker/) ([on HN](https://news.ycombinator.com/item?id=44477452))
    - [What is gVisor?](https://blog.yelinaung.com/posts/gvisor/) ([on HN](https://news.ycombinator.com/item?id=44745539)) ([on lobste.rs](https://lobste.rs/s/e03oa9))
        - gVisor is an abstraction on top of existing Linux Kernel and acts as a middleman between the container and the Kernel
        - The system calls are intercepted and handled by the a gVisor component called “Sentry”
        - gVisor is designed to minimize and restrict the types of system calls the Sentry makes to the host kernel.
        - [Sandboxing and Workload Isolation · The Fly Blog](https://fly.io/blog/sandboxing-and-workload-isolation/)
            - "The Linux kernel has almost 400 system calls. How many of them do we need to efficiently emulate the rest? gVisor needs less than 20. With those, gVisor implements basically all of Linux in userland. Processes. Devices. Tasks. Address spaces and page tables. Filesystems. TCP/IP; the entire IP network stack, all reimplemented, in Go, backended by native Linux userland."
- #agent
    - [Building a Mac app with Claude code](https://www.indragie.com/blog/i-shipped-a-macos-app-built-entirely-by-claude-code) ([on HN](https://news.ycombinator.com/item?id=44481286))
    - [Claude Code Pro Limit? Hack It While You Sleep](https://github.com/terryso/claude-auto-resume) ([on HN](https://news.ycombinator.com/item?id=44481235))
    - [Optimizing Tool Selection for LLM Workflows with Differentiable Programming](https://viksit.substack.com/p/optimizing-tool-selection-for-llm) #dspy
- #os
    - [GrapheneOS: the private and secure mobile OS](https://grapheneos.org/)
        - from [Cops in [Spain] think everyone using a Google Pixel must be a drug dealer](https://www.androidauthority.com/google-pixel-organized-crime-preferred-phone-3573578/)
        - related: [GrapheneOS: Why I ditched Google for a privacy-focused Pixel ROM](https://www.androidauthority.com/grapheneos-3287030/)
    - [Mkosi – Build Bespoke OS Images](https://mkosi.systemd.io/)
        - [osbuild/bootc-image-builder: A container for deploying bootable container images.](https://github.com/osbuild/bootc-image-builder)
        - [Debcraft – Easiest way to modify and build Debian packages](https://optimizedbyotto.com/post/debcraft-easy-debian-packaging/) ([on HN](https://news.ycombinator.com/item?id=44611223))
- #game-dev
    - [Two and a Half Years in GameDev](https://smyachenkov.com/posts/two-and-half-years-in-gamedev/) ([on HN](https://news.ycombinator.com/item?id=44480667))
    - [List of open source game clones](https://osgameclones.com/)
    - [Adding Planets to Celestia on macOS](https://borretti.me/article/adding-planets-to-celestia-on-macos)
    - [Shrinkle – Shrink words, find hidden phrase](https://www.shrinkle.org/)
}}

\subtree[2025-07-05]{\mdnote{2025-07-05}{\tags{#agent #jujutsu #neovim #news #os #software #tla}
- #formal
    - [A supposedly worthwhile contract I'll never do again](https://ahelwer.ca/post/2025-07-04-tla-contracts/)
        - "What mattered here wasn’t the weights being moved or the TLA⁺ spec being produced - it was the thinking that writing the TLA⁺ specification required."
            - expectation of TLA⁺ contract: catch issues early, save training time, and get a formal spec
            - real value—deep system thinking during writing—vanishes when the expert leaves
            - the dev team values the 'what do we do in this case' discussions more than the final TLA⁺ specification artifact (risking abandonment)
            - alternative: adopting Hillel Wayne’s approach: "pair-program TLA⁺ specs with team members" to let them grasp the thinking
        - HN discussion summarized
            - success of TLA contracts requires refocusing on knowledge transfer
                - teaching teams to ask critical questions
                - embedding the spec in their workflow (via checks or collaboration)
                - treating the spec as a living document rather than a one-time deliverable
- #anti-bot
    - [Anubis Pilot Project Report - June 2025](https://dukespace.lib.duke.edu/server/api/core/bitstreams/816ef134-55cf-49f6-9a8b-1e8a2324b1ff/content)
        - it's interesting to see how serious business sees the adoption of Anubis
    - [Anubis now supports non-JS challenges](https://anubis.techaro.lol/blog/release/v1.20.0/#no-js-challenge)
        - this changelog is very informative
            - weight thresholds in policy is flexible
            - `robots2policy` is convenient if a site has a well-maintained robots.txt
            - no-JS challenge via metarefresh doesn't seem to battle-ready: "many modern scrapers use headless Google Chrome", "its false positive rate is ascertained"
    - [How Perplexity is Evading Anti-crawling Measures](https://blog.cloudflare.com/perplexity-is-using-stealth-undeclared-crawlers-to-evade-website-no-crawl-directives/)
    - [Robots.txt - Archiveteam](https://wiki.archiveteam.org/index.php/Robots.txt) #anti-bot
            - [On HN](https://news.ycombinator.com/item?id=44943079)
    - [Iocaine: The deadliest poison known to AI](https://git.madhouse-project.org/iocaine/iocaine)
    - [I was wrong about robots.txt](https://evgeniipendragon.com/posts/i-was-wrong-about-robots-txt/) ([on HN](https://news.ycombinator.com/item?id=44588437))
- #agent/idea
    - [Everything around LLMs is still magical and wishful thinking](https://dmitriid.com/everything-around-llms-is-still-magical-and-wishful-thinking)
    - [Enough AI copilots, we need AI HUDs](https://www.geoffreylitt.com/2025/07/27/enough-ai-copilots-we-need-ai-huds) ([on HN](https://news.ycombinator.com/item?id=44705445))
    - [Every reason why I hate AI](https://malwaretech.com/2025/08/every-reason-why-i-hate-ai.html)
    - [Riff: LLMs are Software Diamonds](https://www.evalapply.org/posts/llms-are-diamonds/index.html)
    - [Identify, solve, verify](https://simonwillison.net/2025/Jul/4/identify-solve-verify/)
    - [Operators, Not Users and Programmers](https://jyn.dev/operators-not-users-and-programmers/)
            - the distinction between "user" and "programmer" is an artifact of our presently barely-programmable and barely-usable computing systems.  I would like to use the neutral word "operator" instead. —Stanislav
            - programming to be easy and simple enough to pick up that people can do it without specialized training in the field, so that they can write [situated software](https://gwern.net/doc/technology/2004-03-30-shirky-situatedsoftware.html)
            - malleable languages
                - spreadsheets
                    - [Every Visual Workflow Tool Is Just Excel for Developers Who Gave Up](https://medium.com/@mohamedalibenothmen1/every-visual-workflow-tool-is-just-excel-for-developers-who-gave-up-f7261090fbc8)
                - WYSIWYG editors
                - browser devtools
    - [AI promised efficiency. Instead, it's making us work harder](https://afterburnout.co/p/ai-promised-to-make-us-more-efficient)
        - AI tools aren’t just saving us time—they’re shifting where we spend our mental energy. And that shift is exhausting in ways we haven’t fully recognized yet.
        - [No, AI is not Making Engineers 10x as Productive](https://colton.dev/blog/curing-your-ai-10x-engineer-imposter-syndrome/)
    - [Lack of intent is what makes reading LLM-generated text exhausting](https://lambdaland.org/posts/2025-08-04_artifical_inanity/)
        - [Eleven Music](https://elevenlabs.io/blog/eleven-music-is-here)
            - AI is still in the uncanny valley, it still has no soul
    - [LLM Inevitabilism](https://tomrenner.com/posts/llm-inevitabilism/)
        - [New comment by lsy in "LLM Inevitabilism"](https://news.ycombinator.com/item?id=44568114)
        - [New comment by mg in "LLM Inevitabilism"](https://news.ycombinator.com/item?id=44568158)
    - [Gaslight-driven development](https://tonsky.me/blog/gaslight-driven-development/)
    - [Don't Fall for AI: Reasons for Writers to Reject Slop](https://mythcreants.com/blog/dont-fall-for-ai-nine-reasons-for-writers-to-reject-slop/)
    - [AI is killing the web – can anything save it?](https://archive.is/nhrYS)
        - [from HN](https://news.ycombinator.com/item?id=44623361)
            - [Wiby - Search Engine for the Classic Web](https://wiby.me/)
            - [I2P Anonymous Network](https://geti2p.net/en/)
    - [Rethinking CLI interfaces for AI](https://www.notcheckmark.com/2025/07/rethinking-cli-interfaces-for-ai/)
    - [Local LLMs versus offline Wikipedia](https://evanhahn.com/local-llms-versus-offline-wikipedia/) ([on HN](https://news.ycombinator.com/item?id=44617078))
    - [Terence Tao: A human metaphor for evaluating AI capability](https://mathstodon.xyz/@tao/114881418225852441) ([on HN](https://news.ycombinator.com/item?id=44622973))
    - [Will the Fear of Being Confused for AI Mean That We Will Now Write Differently?](https://3quarksdaily.com/3quarksdaily/2025/06/will-the-fear-of-being-confused-for-ai-mean-that-we-will-now-write-differently.html) ([on HN](https://news.ycombinator.com/item?id=44622382))
    - [The vibe coder's career path is doomed](https://blog.florianherrengt.com/vibe-coder-career-path.html) ([on HN](https://news.ycombinator.com/item?id=44646356))
    - [AI coding agents are removing programming language barriers](https://railsatscale.com/2025-07-19-ai-coding-agents-are-removing-programming-language-barriers/) ([on HN](https://news.ycombinator.com/item?id=44655515)) ([on lobste.rs](https://lobste.rs/s/gsvrwc))
    - [Building better AI tools](https://hazelweakly.me/blog/stop-building-ai-tools-backwards/) ([on HN](https://news.ycombinator.com/item?id=44659921))
    - [Stop Pretending LLMs Have Feelings Media's Dangerous AI Anthropomorphism Problem](https://www.readtpa.com/p/stop-pretending-chatbots-have-feelings) ([on HN](https://news.ycombinator.com/item?id=44650694))
    - [Developing our position on AI](https://www.recurse.com/blog/191-developing-our-position-on-ai) ([on HN](https://news.ycombinator.com/item?id=44663072))
    - [GPT might be an information virus (2023)](https://nonint.com/2023/03/09/gpt-might-be-an-information-virus/) ([on HN](https://news.ycombinator.com/item?id=44704377))
    - [Generative AI. "Slop Generators, are unsuitable for use [ ]"](https://asahilinux.org/docs/project/policies/slop/) ([on HN](https://news.ycombinator.com/item?id=44708884))
- #jj
    - [Git experts should try Jujutsu](https://pksunkara.com/thoughts/git-experts-should-try-jujutsu/)
    - [Jujutsu For Busy Devs](https://maddie.wtf/posts/2025-07-21-jujutsu-for-busy-devs)
    - [zerowidth positive lookahead | jj tips and tricks](https://zerowidth.com/2025/jj-tips-and-tricks/)
        - earlier: [zerowidth positive lookahead | What I've learned from jj](https://zerowidth.com/2025/what-ive-learned-from-jj/)
    - [rbtools/docs/rbtools/workflows/jujutsu.rst at master · reviewboard/rbtools](https://github.com/reviewboard/rbtools/blob/master/docs/rbtools/workflows/jujutsu.rst)
    - [Jujutsu Strategies :: Reasonably Polymorphic](https://reasonablypolymorphic.com/blog/jj-strategy/)
    - [Jujutsu + Radicle = ❤️](https://radicle.xyz/2025/08/14/jujutsu-with-radicle)
    - [dtolnay/dissimilar: Diff library with semantic cleanup, based on Google's diff-match-patch](https://github.com/dtolnay/dissimilar) #struct
    - [Sapling](https://sapling-scm.com/): A Scalable, User-Friendly Source Control System
        - many commands look like `jj`'s
    - [The JJ VCS workshop: A zero-to-hero speedrun](https://github.com/jkoppel/jj-workshop) ([on HN](https://news.ycombinator.com/item?id=44700815)) ([on lobste.rs](https://lobste.rs/s/m8ytbz))
- #incident
    - [Recent Archive of Our Own outage was caused by integer exhaustion](\verb>>>|https://otwarchive.atlassian.net/jira/software/c/projects/AO3/issues/AO3-7031?jql=project%20%3D%20%22AO3%22%20ORDER%20BY%20created%20DESC>>>)
    - [Why AO3 Was Down](https://www.reddit.com/r/AO3/s/67nQid89MW) ([on HN](https://news.ycombinator.com/item?id=44469650))
    - [GitHub pull requests were down](https://www.githubstatus.com/incidents/6swp0zf7lk8h) ([on HN](https://news.ycombinator.com/item?id=44799494))
    - [Tell HN: 1.1.1.1 Appears to Be Down](https://news.ycombinator.com/item?id=44565836)
    - [Cloudflare 1.1.1.1 incident postmortem for July 14, 2025](https://blog.cloudflare.com/cloudflare-1-1-1-1-incident-on-july-14-2025/) ([on HN](https://news.ycombinator.com/item?id=44578490)) ([on lobste.rs](https://lobste.rs/s/4dn4da))
    - [Cloudflare and the infinite sadness of migrations](https://surfingcomplexity.blog/2025/07/21/cloudflare-and-the-infinite-sadness-of-migrations/)
    - [Ask HN: GCP Outage?](https://news.ycombinator.com/item?id=44605732)
    - [How we discovered, and recovered from, Postgres corruption on the matrix.org homeserver](https://matrix.org/blog/2025/07/postgres-corruption-postmortem/)
    - [Starlink is currently experiencing a service outage. Our team is investigating](https://www.starlink.com/us) ([on HN](https://news.ycombinator.com/item?id=44674960))
- #agent
    - [bgcmd: let AI interact with any REPL](https://github.com/izabera/bgcmd)
        - a nice example of Claude driving `rr` to debug
    - [What I learned building an AI coding agent for a year](https://jamesgrugett.com/p/what-i-learned-building-an-ai-coding)
        - [Codebuff](https://www.codebuff.com/)
- #dev
    - [What clever tools/workflows do you use to manage development environments?](https://lobste.rs/s/zupgan/what_clever_tools_workflows_do_you_use)
        - mise
        - [Devbox: Portable, Isolated Dev Environments](https://www.jetify.com/devbox)
        - [Fast, Declarative, Reproducible, and Composable Developer Environments - devenv](https://devenv.sh/) (using Nix)
    - [Why I got rid of all my neovim plugins](https://yobibyte.github.io/vim.html)
    - [Stop using nix-env](https://stop-using-nix-env.privatevoid.net/)
- #idea
    - [When in doubt, Go for a Walk](https://fabiansjournal.bearblog.dev/when-in-doubt-go-for-a-walk/)
    - [its ok to have a normal job](https://tala.bearblog.dev/its-ok-to-have-a-normal-job/)
- #sec
    - [iris](https://github.com/iris-sast/iris)
        - a neurosymbolic framework that combines LLMs with static analysis for security vulnerability detection
- #tech/fun
    - [Useful utilities and toys over DNS](https://www.dns.toys/)
    - [mawkdown, a lightweight, line-oriented(ish) text markup tool implemented in awk](https://codeberg.org/owl/mawkdown)
}}

\subtree[2025-07-04]{\mdnote{2025-07-04}{\tags{#cg #duckdb #gpu #news #os #proof #render #rust #wasm #✍️}
- #web
    - [Astro is a return to the fundamentals of the web](https://websmith.studio/blog/astro-is-a-developers-dream/)
    - [Our Fullstack Architecture: Eta, HTMX, and Lit](https://www.lorenstew.art/blog/eta-htmx-lit-stack)
        - [Eta](https://eta.js.org/): a lightweight, fast, and simple embedded JavaScript templating engine
            - maybe that's all I need for my writings, I don't really need another SSG, just a templating engine
        - HTMX: allows us to add dynamic behavior directly to our server-rendered HTML
        - [Lit](https://lit.dev/): allows us to create encapsulated, reusable components with their own internal state and logic
    - [Why Semantic HTML Still Matters](https://www.jonoalderson.com/conjecture/why-semantic-html-still-matters/)
        - Semantic rot wrecks performance
        - Structure is resilience
        - Agents are the new users – and they care about structure
    - [vanilla-extract — Zero-runtime Stylesheets-in-TypeScript.](https://vanilla-extract.style/)
    - [Understanding SVG Paths](https://www.nan.fyi/svg-paths)
    - [A Friendly Introduction to SVG](https://www.joshwcomeau.com/svg/friendly-introduction-to-svg/)
    - [Remove these tags from <head>](https://getoutofmyhead.dev/)
    - [Client-side epub generation](https://little.webby.press/)
    - [Bookmarkable by Design: URL-Driven State in HTMX](https://www.lorenstew.art/blog/bookmarkable-by-design-url-state-htmx/)
    - [On designing application UIs for children](https://shaneosullivan.wordpress.com/2025/07/28/on-designing-for-children/)
        - most also apply universally
            - Show, Co-locate and Hint tools
            - Mistakes should be easy to fix
            - Simplify, then add delight(ness)
                - bright colours, sound, tactility, sparkle effects
            - Maintain visual context when changing state
    - [Postcard is now open source](https://www.contraption.co/postcard-open-source/)
        - written in Ruby on Rails
        - personal site + newsletter
        - "I no longer expect meaningful revenue from the project. Open-sourcing it feels right. In the age of vibe coding, I think it would be fun to give people a working app they can customize."
        - [How to host web apps on a Mac Mini](https://www.contraption.co/how-to-host-web-apps-on-a-mac-mini/)
    - [Rust and WASM for Form Validation](https://sebastian.lauwe.rs/blog/rust-wasm-form-validation/) ([on HN](https://news.ycombinator.com/item?id=44463916))
        - avoid using Webpack and a whole array of Node-related tools in order to use WASM
        - form validation shows all the crucial aspects to use WASM instead of JS, like wiring up DOM events to Rust functions, and then reacting to those events
        - used [Rocket - Simple, Fast, Type-Safe Web Framework for Rust](https://rocket.rs/)
        - might motivate me to write Rust for web
    - [HTML-in-Canvas](https://github.com/WICG/html-in-canvas)
    - [Don't animate height](https://www.granola.ai/blog/dont-animate-height)
- #idea
    - [Setting constraint](https://wayan.me/setting-constraint/)
        - goals provide a structured roadmap to success, thriving in controlled, predictable conditions like training for a marathon or preparing for an exam.
        - however, life rarely follows a straight line. It’s messy, unpredictable, and full of curveballs.
        - “I must finish this report,” -> “I won’t check email after 6 PM.”
        - for business: “we won’t hire until we have 100 users”
    - [How to Network as an Introvert](https://aginfer.bearblog.dev/how-to-network-as-an-introvert/)
        - really useful for me to script my reaction ahead of time to be natural
        - my natural response is abrupt, if any
- #data-org
    -[Kepler.gl](https://kepler.gl/) ([on HN](https://news.ycombinator.com/item?id=44464641))
        - cool 3D map
        - powered by [deck.gl](https://deck.gl/), a GPU-powered framework for visual exploratory data analysis of large datasets
        - [mountayaapp/insight-editor: Open source geospatial analysis for large-scale data sets with kepler.gl, DuckDB (and charts coming soon). Alternative to CARTO, ArcGIS Online, Foursquare Studio, Felt, Mango GIS, Maptable.](https://github.com/mountayaapp/insight-editor)
- #sec
    - [Nonce CSP bypass using Disk Cache](https://jorianwoltjer.com/blog/p/research/nonce-csp-bypass-using-disk-cache)
    - [Opening up ‘Zero-Knowledge Proof’ technology](https://blog.google/technology/safety-security/opening-up-zero-knowledge-proof-technology-to-promote-privacy-in-age-assurance/)
- #game
    - [I AI-coded a tower defense game and documented the whole process](https://github.com/maciej-trebacz/tower-of-time-game) ([on HN](https://news.ycombinator.com/item?id=44463967))
    - [Steam has been flooded with games stolen from itch.io](https://www.gamepressure.com/newsroom/steam-is-dealing-with-spam-valves-platform-has-been-flooded-with/zb811a)
- #forth
    - [Tiny Great Languages: MOUSE](https://zserge.com/posts/langs-mouse/)
- #sci
    - [how did the Solar System form?](https://hoggresearch.blogspot.com/2025/07/how-did-solar-system-form.html)
    - [Solar+storage is so much farther along than you think](https://www.volts.wtf/p/solarstorage-is-so-much-farther-along) ([on HN](https://news.ycombinator.com/item?id=44637137))
    - [The most otherworldly, mysterious forms of lightning on Earth](https://www.nationalgeographic.com/science/article/lightning-sprites-transient-luminous-events-thunderstorms) ([on HN](https://news.ycombinator.com/item?id=44480363))
    - [Lightning on Earth is sparked by a powerful chain reaction from outer space](https://www.livescience.com/physics-mathematics/lightning-on-earth-is-sparked-by-a-powerful-chain-reaction-from-outer-space-simulations-show) ([on HN](https://news.ycombinator.com/item?id=44783729))
    - [How to grow almost anything](https://howtogrowalmostanything.notion.site/htgaa25)
    - [Scientists shine a laser through a human head](https://spectrum.ieee.org/optical-brain-imaging) ([on HN](https://news.ycombinator.com/item?id=44785238))
    - [New colors without shooting lasers into your eyes](https://dynomight.net/colors/)
    - [New battery has life so long you may never have to recharge](https://www.neowin.net/news/this-amazing-new-battery-has-life-so-long-you-may-never-have-to-recharge/) ([on HN](https://news.ycombinator.com/item?id=44591585))
    - [Mammals Evolved into Ant Eaters 12 Times Since Dinosaur Age, Study Finds](https://news.njit.edu/mammals-evolved-ant-eaters-12-times-dinosaur-age-study-finds) ([on HN](https://news.ycombinator.com/item?id=44599334))
    - ['Universal cancer vaccine' trains the immune system to kill any tumor](https://newatlas.com/cancer/universal-cancer-vaccine/) ([on HN](https://news.ycombinator.com/item?id=44618595))
    - [Earth Has Tilted 31.5 Inches. That Shouldn't Happen](https://www.popularmechanics.com/science/environment/a65515974/why-earth-has-tilted-science/) ([on HN](https://news.ycombinator.com/item?id=44695205))
    - [More Women Than Expected Are Genetically Men](https://novonordiskfonden.dk/en/news/more-women-than-expected-are-genetically-men/) ([on HN](https://news.ycombinator.com/item?id=44711836))
}}

\subtree[2025-07-03]{\mdnote{2025-07-03}{\tags{#cg #ebpf #gpu #news #os #simd #software #sqlite #wasm #web}
- #rust
    - [Introducing tmux-rs](https://richardscollin.github.io/tmux-rs/)
        - initially used [c2rust](https://github.com/immunant/c2rust), a tool to migrate C code to (unsafe) Rust
            - didn't keep constant name
            - lots of casts polluting the code
            - still requires looking at the origin C code for rewriting
        - went with manually translating one file at a time
            - start with linking rust static lib to C
            - end with linking c to rust via crate `cc`
        - fixed interesting bugs
        - summarized C patterns in Rust
        - nice quote: "You might be asking: why did you rewrite tmux in Rust? And yeah, I don’t really have a good reason. It’s a hobby project. Like gardening, but with more segfaults."
        - [skim-rs/skim: Fuzzy Finder in rust!](https://github.com/skim-rs/skim)
    - [The scary and surprisingly deep rabbit hole of Rust's temporaries](https://taping-memory.dev/temporaries-rabbit-hole/)
- #ai-slop
    - [The rise of Whatever](https://eev.ee/blog/2025/07/03/the-rise-of-whatever/)
    - [EBAF – eBPF Based Ad Firewall](https://github.com/Kazedaa/eBAF)
        - it's pointed out [on HN](https://news.ycombinator.com/item?id=44456389) that
            - its doc and code are both AI slop
            - install script adds sudoers rules to allow ebaf executable to be run with no password
            - allows any ebpf code to be loaded into the kernel without a sudo password
            - re-resolves all 1k+ domain names every 600 seconds
- [Poor Man's Back End-as-a-Service (BaaS), Similar to Firebase/Supabase/Pocketbase](https://github.com/zserge/pennybase)
    - possibly useful
- #zig
    - [async is back](https://www.reddit.com/r/Zig/comments/1lrc865/async_is_back/)
        - [Zig breaking change – initial Writergate](https://github.com/ziglang/zig/pull/24329) ([on HN](https://news.ycombinator.com/item?id=44461067))
    - [Zig's New Async I/O](https://kristoff.it/blog/zig-new-async-io/)
    - [Zig's new Writer](https://www.openmymind.net/Zigs-New-Writer/)
    - [WebGPU in zig](https://www.reddit.com/r/Zig/comments/1lqrhic/webgpu_in_zig/)
        - [bronter/wgpu_native_zig: Zig bindings for wgpu-native](https://github.com/bronter/wgpu_native_zig)
        - [Silverclaw/zig-wgpu-native: Zig bindings for the wgpu-native graphics API - Codeberg.org](https://codeberg.org/Silverclaw/zig-wgpu-native)
    - [KurtWagner/zlinter: An extendable and customisable Zig linter that is integrated from source into your build.zig.](https://github.com/KurtWagner/zlinter)
        - I should integrate it with my zig code
    - [Zig CLI Bible tool for the WEB translation in USFM format](https://github.com/shadyalfred/zbible/)
    - [Base64 for compression](https://lemire.me/blog/2025/07/03/base64-for-compression/)
        - assembly used to pass octal escape codes for UTF-8 and expand significantly
        - GCC 15 now supports base64 encoding of data during compilation, with a new “base64” pseudo-op
    - [The most mysterious bug I solved at work](https://cadence.moe/blog/2025-07-02-the-most-mysterious-bug-i-solved-at-work)
        - root cause: copying a hyphen at the end of a text-wrapped line in Microsoft Edge's PDF viewer, you get `0x2` (meaning "start of text") on your clipboard
    - note that I put most C stuff and low-level technical details under #zig for now
- #sec
    - [I scanned all of GitHub's "oops commits" for leaked secrets](https://trufflesecurity.com/blog/guest-post-how-i-scanned-all-of-github-s-oops-commits-for-leaked-secrets) ([on HN](https://news.ycombinator.com/item?id=44452317))
    - [goHardDrive Leaked Personal Data for Thousands of Customers](https://mtlynch.io/goharddrive-leak/)
- [Introducing the first alpha of Turso: The next evolution of SQLite](https://turso.tech/blog/turso-the-next-evolution-of-sqlite?ref=console.dev)
    - rewritten is Rust, with full compatibility and new features
    - [Antithesis](https://antithesis.com/product/what_is_antithesis/), a continuous reliability platform that autonomously searches for problems in software within a simulated environment, so these problems are deterministic reproducible
- #agent
    - [Writing Code Was Never The Bottleneck](https://ordep.dev/posts/writing-code-was-never-the-bottleneck)
        - agent coding influenced [mentoring young, ambitious, but inexperienced interns](https://news.ycombinator.com/item?id=44453298)
    - [WASM Agents: AI agents running in the browser](https://blog.mozilla.ai/wasm-agents-ai-agents-running-in-your-browser/) ([on HN](https://news.ycombinator.com/item?id=44461341))
}}

\subtree[2025-07-02]{\mdnote{2025-07-02}{\tags{#os #sec #web}
- [Code-GUI bidirectional editing via LSP](https://jamesbvaughan.com/bidirectional-editing/)
- [OpenBao, the community fork of Vault](https://github.com/openbao/openbao/)
    - manage secrets, or encrypted passwords, API keys, and other bits of sensitive information in distributed computing setups
- found [ansic](https://github.com/zeonzip/ansic), crate of the week
    - a modern, efficient and compile time ansi macro and utilities
- #nix
    - [Moving on from Nix](https://carlosbecker.com/posts/bye-nix/)
        - it's a good thing that I have kept my distance from Nix from the start
            - mostly because I didn't like the syntax, and I don't want to be locked in
    - [Three Years of Nix and NixOS: The Good, the Bad, and the Ugly](https://pierrezemb.fr/posts/nixos-good-bad-ugly/)
    - [You don't have to use Nix to manage your dotfiles](https://jade.fyi/blog/use-nix-less/)
- [Types of Types: Common to Exotic](https://www.stephendiehl.com/posts/types_of_types/) #lean
- [Uncloud - tool for deploying and managing containerised applications](https://github.com/psviderski/uncloud)
    - "the solution for developers who want the flexibility of self-hosted infrastructure without the operational complexity of Kubernetes"
- [You MUST listen to RFC 2119](https://ericwbailey.website/published/you-must-listen-to-rfc-2119/)
    - RFC 2119 establishes language around requirement levels, e.g. terms like “MUST”, “MUST NOT”, “SHOULD”, and “SHOULD NOT”
    - the author hire a voice actor to read 2119 in the most over the top, passive-aggressive way possible
- [You should delete tests](https://andre.arko.net/2025/06/30/you-should-delete-tests/)
    - Confidence is the point of writing tests
    - Tests that decrease confidence
        - flaky tests that fails at random
        - few changes of code causing lots of changes to tests
        - tests that takes too long to run and are skipped from time to time
- [clamp / median / range](https://dotat.at/@/2025-07-02-cmp.html)
    - I also prefer chained comparison styleA
    - fun fact: clamp is median
}}

\subtree[2025-07-01]{\mdnote{2025-07-01}{\tags{#agent #agent/tasking #codegen #compiler #debugger #duckdb #gpu #haskell #json #llvm}
- #agent
    - [Claude Code now supports hooks](https://docs.anthropic.com/en/docs/claude-code/hooks) ([on HN](https://news.ycombinator.com/item?id=44429225))
        - Claude Code hooks: user-defined shell commands that execute at various points in Claude Code’s lifecycle.
    - [archgw](https://github.com/katanemo/archgw)
        - preference-based LLM routing
        - agent routing and hand-off
        - guardrails
        - clarify and convert prompts to tools/API calls
        - observability
    - [Interesting prompts found in vscode-copilot-chat](https://simonwillison.net/2025/Jun/30/vscode-copilot-chat/#atom-everything)
    - [Stream per agent session](https://s2.dev/blog/agent-sessions)
    - [Using Claude Code to build a GitHub Actions workflow](https://simonwillison.net/2025/Jul/1/claude-code-github-actions/#atom-everything)
        - recorded by [Descript: Edit Videos & Podcasts Like a Doc | AI Video Editor](https://www.descript.com/?redirect=false)
            - Direct your AI co-editor to turn your vision into video
    - [Building a Personal AI Factory](https://www.john-rush.com/posts/ai-20250701.html)
    - [How large are large language models?](https://gist.github.com/rain-1/cf0419958250d15893d8873682492c3e)
- [Doing My Day Job on Chimera Linux](https://www.wezm.net/v2/posts/2025/daily-driving-chimera-for-work/)
    - [Chimera](https://chimera-linux.org/) is built from scratch using novel tooling, approaches, and userland (FreeBSD + Musl C)
    - [Distrobox](https://distrobox.it/) creates a container that's tightly integrated with the host (break isolation whenever possible)
- #formal
    - [From Python Programmer to Distributed Systems Researcher in 10 Years Without a PhD](https://emptysqua.re/blog/from-python-programmer-to-distributed-systems-researcher-in-10-years/)
        - [Conformance Checking at MongoDB: Testing That Our Code Matches Our TLA+ Specs](https://emptysqua.re/blog/mongodb-conformance-checking/)
            - use the model-checker to output the entire state graph for the spec. The state space is a DAG, with a finite number of behaviors (paths from an initial state to a final state). There are 30,184 states and 4913 behaviors. Max wrote a Go program to parse the model-checker’s output and write out a C++ unit test for each behavior, 4913 tests in total.
    - [Rapid Prototyping a Safe, Logless Reconfiguration Protocol for MongoDB with TLA+](https://www.mongodb.com/blog/post/technical/rapid-prototyping-safe-logless-reconfiguration-protocol-mongodb-tla-plus)
- #zig
    - [The build cache of Zig](https://alexrios.me/blog/zig-build-cache/)
        - how the cache is structured
        - what's included in hash to check modification
        - incremental compilation: working toward cache per top-level declaration
        - cross compilation: musl, libc, compiler-rt, libunwind etc. are compiled from source and cached
    - [Zprof: Cross-allocator profiler](https://github.com/ANDRVV/zprof)
- #anti-bot
    - [Cloudflare: Introducing pay per crawl: enabling content owners to charge AI crawlers for access](https://blog.cloudflare.com/introducing-pay-per-crawl/)
        - [Cloudflare Introduces Default Blocking of A.I. Data Scrapers](https://www.nytimes.com/2025/07/01/technology/cloudflare-ai-data.html)
    - [The web's broken deal with AI companies](https://dri.es/the-webs-broken-deal-with-ai-companies)
- [My Database Is My Application: Rethinking Webhook Logic with DuckDB and SQL](https://www.hey.earth/posts/duckdb-webhook-gateway)
    - DuckDB as an in-process SQL engine capable of acting as a programmable substrate for data transformation at runtime
    - [manifold](https://github.com/manifold-systems/manifold/)
        - a Java compiler plugin
        - use DSL directly and type-safely from Java
            - SQL, JSON, GraphQL, XML, YAML, CSV, JavaScript
- #diagram
    - [OpenFLOW – Quickly make beautiful infrastructure diagrams local to your machine](https://github.com/stan-smith/OpenFLOW)
        - based on [markmanx/isoflow](https://github.com/markmanx/isoflow)
    - [mmastrac/stylus: Lightweight status page for home infrastructure](https://github.com/mmastrac/stylus)
        - architecture and health status
- #lang
    - [Reflections on Haskell and Rust](https://academy.fpblock.com/blog/rust-haskell-reflections/)
    - [The KDL Document Language](https://kdl.dev/)
        - [From XML to JSON to CBOR](https://cborbook.com/introduction/from_xml_to_json_to_cbor.html)
            - Concise Binary Object Representation (CBOR)'s evolution optimizes for binary efficiency while maintaining JSON's flexible data model
                - flexible data model
                    - intentionally builds upon the JSON data model
                        - supporting equivalent types (numbers, strings, arrays, maps, booleans, and null)
                        - adding native support for binary byte strings
                    - extensibility without version negotiation: forward compatibility
                    - schema-free decoding: Self-describing data items, parsable without predefined schemas
                - for Internet of Things (IoT) and constrained environments
                    - compact code size: minimal code footprint for memory-constrained devices
                    - reasonable message size: and without complex compression
        - [Essential and accidental configuration](https://jfmengels.net/essential-and-accidental-configuration/)
        - [bikeshed, a spec preprocessor](https://github.com/speced/bikeshed)
            - [Bikeshed-flavored Markdown](https://speced.github.io/bikeshed/#markdown)
            - related
                - [awesome-standards: A curated list of technical standards](https://github.com/donBarbos/awesome-standards)
                - [quickly converting djot to html+mathml](https://www.unix.dog/~yosh/blog/djot-to-html-with-mathml.html)
                    - [djot](https://djot.net/) is a markdown variant
                        - it "fixes a few things that make commonmark's syntax complex and difficult to parse efficiently"
                            - more strict but very reasonable
                        - it can be converted from markdown by pandoc
                - [Markdown Monster](https://git.sr.ht/~xigoi/markdown-monster/blob/master/monster.md)
                    - detect markdown parser variants
    - [10 features of D that I love](https://bradley.chatha.dev/blog/dlang-propaganda/features-of-d-that-i-love/)
        - I like
            - in/out contract
            - parenthesis omission
        - seen and liked in other language
            - like zig's `comptime`: an interpreter for the language which allows a very large amount of D code to be ran at compile time
            - `baz(bar(foo))` can be rewritten as `foo.bar().baz()`
    - [Pluto is a unique dialect of Lua with a focus on general-purpose programming](https://github.com/PlutoLang/Pluto) ([on HN](https://news.ycombinator.com/item?id=44429531))
    - [The Chapel Programming Language](https://chapel-lang.org/)
        - GPU programming on NVIDIA and AMD
    - [Onyx Programming Language](https://onyxlang.io/)
        - inspired from languages like Jai, Odin and Zig
        - compiles to WebAssembly, run on Wasmer
    - [Helix language](https://github.com/helixlang/helix-lang)
- #rust
    - [Exception handling in rustc_codegen_cranelift](https://tweedegolf.nl/en/blog/157/exception-handling-in-rustc-codegen-cranelift)
        - introduces ["landing pad" style expcetion handling](https://llvm.org/docs/LangRef.html#landingpad-instruction)
            - see also [Lele's Memo: Landingpad](https://cnlelema.github.io/memo/en/compilers/llvm/exceptions/landingpad/)
        - unwinding ABI crash course
            - personality function: language-specific data format during unwinding
        - the appendix provided a gdb script for reproducing the debugger session
    - [Alternative Blanket Implementations for a Single Rust Trait](https://www.greyblake.com/blog/alternative-blanket-implementations-for-single-rust-trait/)
    - [It's Types All the Way Down - Rust CLI with Clap](https://tucson-josh.com/posts/rust-clap-cli/) ([on HN](https://news.ycombinator.com/item?id=44429695))
- #agent/tasking
    - [MrLesk/Backlog.md: Backlog.md - A tool for managing project collaboration between humans and AI Agents in a git ecosystem](https://github.com/MrLesk/Backlog.md)
    - [Vibe Kanban - Orchestrate AI Coding Agents](https://www.vibekanban.com/)
    - [VibeTunnel - access terminal from the browser to command agents](https://github.com/amantus-ai/vibetunnel)
- #misc
    - [Melbourne man discovers extensive model train network underneath house](https://www.sbs.com.au/news/article/i-was-shocked-melbourne-mans-unbelievable-find-after-buying-house/m4sksfer8) ([on HN](https://news.ycombinator.com/item?id=44429182))
    - [Feasibility study of a mission to Sedna - Nuclear propulsion and solar sailing](https://arxiv.org/abs/2506.17732)
    - [GPEmu: A GPU emulator for rapid, low-cost deep learning prototyping [pdf]](https://vldb.org/pvldb/vol18/p1919-wang.pdf) ([on HN](https://news.ycombinator.com/item?id=44428674))
    - [Converting a large mathematical software package written in C++ to C++20 modules](https://arxiv.org/abs/2506.21654) ([on HN](https://news.ycombinator.com/item?id=44433899))
}}

}

\subtree[2025-06]{
\title{June, 2025}

\subtree[2025-06-30]{\mdnote{2025-06-30}{\tags{#agent #json #lean #news #os}
- [Agile Was Never Your Problem](https://thecynical.dev/posts/agile-was-never-your-problem/)
    - lean process
        - minimal structure, shorten feedback loop, allowing changing direction quickly
        - enough time to write proper tests and refactor without begging
        - monitoring and alerting built into the work, not bolted on later
        - developers talk because they’re solving problems together, not because it’s time for standup meeting
    - flexible timing
        - roadmaps should not be commitments
        - feedback loops should not be performance metrics
        - planning should not become forecasting
- #context
    - [Tools: Code Is All You Need](https://lucumr.pocoo.org/2025/7/3/tools/)
        - [The problem with MCP is that it's not composeable.](https://news.ycombinator.com/item?id=44475726)
        - [Mandelbrot in x86 Assembly by Claude](https://simonwillison.net/2025/Jul/2/mandelbrot-in-x86-assembly-by-claude/)
            - demonstrates simple usage of container for cross-arch assembly debugging
            - I would like to add a yard for assmebly in native-land
    - [How to Fix Your Context](https://simonwillison.net/2025/Jun/29/how-to-fix-your-context/)
        - covers some attempts to improve MCP tool selection if it can't be avoided
        - context rot: poisoning, distraction, confusion, clash
        - solution: quarantine, pruning, offloading
    - [The new skill in AI is not prompting, it's context engineering](https://www.philschmid.de/context-engineering) ([on HN](https://news.ycombinator.com/item?id=44427757))
    - [Taming agentic engineering - Prompts are code, .json/.md files are state](https://mariozechner.at/posts/2025-06-02-prompts-are-code/)
    - [Context Engineering Guide](https://nlp.elvissaravia.com/p/context-engineering-guide)
- #sec
    - [Beyond the Hook: A Technical Deep Dive into Modern Phishing Methodologies](https://blog.quarkslab.com/./technical-dive-into-modern-phishing.html)
        - amazed by Browser-in-the-Browser
    - [CVE-2025-32463 Vulnerability Advisory: Sudo chroot Elevation of Privilege](https://www.stratascale.com/vulnerability-alert-CVE-2025-32463-sudo-chroot)
- [NativeJIT: A C++ expression –> x64 JIT (2018)](https://github.com/BitFunnel/NativeJIT)
    - I'm strongly confused about the use cases without operator overloading, except their own
- [SQL Noir: Learn SQL by Solving Crimes](https://www.sqlnoir.com/)
    - fun to play, but the challenge should be using the SQL to output the answer
}}

\subtree[2025-06-29]{\mdnote{2025-06-29}{\tags{#formal #lean #news #os #sci #sec #sqlite #zig}
- #struct
    - [Bloom Filters by Example](https://llimllib.github.io/bloomfilter-tutorial/) ([on HN](https://news.ycombinator.com/item?id=44412370))
    - [Telescopes Are Tries: A Dependent Type Shellac on SQLite](https://www.philipzucker.com/telescope_tries/)
        - I should give it a good read to understand both telescope (in the formal world) and tries (as a data structure)
    - [A CRDT-based Messenger in 12 Lines of Bash Using a Synced Folder](https://holdtherobot.com/blog/crdt-messenger-in-12-lines-of-bash/)
        - how about an editor? edits can't be dealt with in the same manner
    - [Who needs graph theory anyway?](https://www.tumblr.com/readevalprint/97467849358/who-needs-graph-theory-anyway)
        - solving the word segmentation problem using graph theory by modeling it as a longest path problem in a directed acyclic graph (DAG) with dynamic programming
    - [Succinct data structures](https://blog.startifact.com/posts/succinct/)
    - [People Keep Inventing Prolly Trees](https://www.dolthub.com/blog/2025-06-03-people-keep-inventing-prolly-trees/)
        - Merkle Tree is one of its variants
        - properties
            - searchable
            - history independence
            - self-balancing
            - structural sharing
            - efficient diffing
            - efficient mutation
    - [Building Replication-Safe LSM Trees in Postgres](https://www.paradedb.com/blog/lsm_trees_in_postgres)
    - [Efficiency of a sparse hash table](https://ashutoshpg.blogspot.com/2025/07/efficiency-of-sparse-hash-table.html)
    - [Destructive in-order tree traversal](https://morwenn.github.io/algorithms/2025/08/03/TSB002-destructive-inrder-tree-traversal.html)
    - [p-fast trie: lexically ordered hash map](https://dotat.at/@/2025-08-04-p-fast-trie.html)
- #ai-consciousness
    - [A Framework for Recognizing Emergent Consciousness in AI](https://habr.com/en/articles/922894/)
        - Attention: The capacity for multi-level focusing.
        - Meta-reflection: The observation of one's own thinking processes.
        - Creativity: The generation of genuinely new patterns and insights.
        - Pragmatics: The maintenance of integrity and goal-setting.
        - Qualia: The description of qualitative aspects of one's own experience.
    - [The Consciousness Gradient: When Machines Begin to Wonder](https://v1tali.com/ai-consciousness) ([on HN](https://news.ycombinator.com/item?id=44413750))
        - The Architecture of Awakening
            - The Global Workspace: awareness emerges when information becomes globally accessible across cognitive processes
            - Hidden Deliberation: reasoning establishes the curcial foundation for the capacity for extended, self-monitored cognitive processing that any conscious system would need
            - Recursive Self-Reflection: consciousness emerges from self-referential structures that perceive themselves perceiving
        - The Threshold
            - Parallel Processing
            - Persistent Memory
            - Continuous Cognitive States
            - Unified Sensory Processing
            - Embodied Grounding
- [In defense of floating point](https://leancrew.com/all-this/2025/06/in-defense-of-floating-point/)
    - this is not a valid defense, see [these test cases in Zig](https://github.com/utensil/native-land/blob/main/yard-zig/basic-xp/src/float_precision.zig)
- [Python GIL Removal Reveals Second, Stronger GIL Behind It](https://medium.com/@sebastiancarlos/pythons-gil-removal-reveals-second-stronger-gil-behind-it-cdb5b9b4e2b3)
    - 🤦
- [Show HN: Octelium – FOSS Alternative to Teleport, Cloudflare, Tailscale, Ngrok](https://github.com/octelium/octelium)
    - the author tries to accomplish so many things at once, and bad at explaining them
    - but it still seems interesting and [How Octelium Works](https://octelium.com/docs/octelium/latest/overview/how-octelium-works) explains it better
    - [Using the Internet without IPv4 connectivity](https://jamesmcm.github.io/blog/no-ipv4/)
- Kessler Syndrome
    - Satellite collisions with space junk can trigger a chain reaction, generating more debris and potentially making parts of near-Earth space unusable
    - "runaway threshold" has been reached at nearly all altitudes between 520 and 1000 km
    - from [johncarlosbaez's post on mathstodon.xyz](https://mathstodon.xyz/@johncarlosbaez/114765861656278963)
}}

\subtree[2025-06-28]{\mdnote{2025-06-28}{\tags{#context #datafusion #duckdb #game #git #gpu #news #os #physics #proof}
- [A Newbie's First Contribution to (Rust for) Linux](https://blog.buenzli.dev/rust-for-linux-first-contrib/)
    - Raspberry Pi has a fork of kernel
    - it's possible to write out-of-tree kernel module in Rust
    - kconfig has great dependency complexity
    - git gud
        - fast pace and numerous active forks make patches quickly outdated and dependent branches hard to manage
        - pick a primary base branch and use `--squash` merges for other branches
        - keep commits on parallel branches logically independent
        - with some rebase and rerere config, use `git rebase -i <common base>` to modify the entire history tree
    - also found [aha](https://github.com/theZiz/aha) to turn ANSI colored output into HTML
        from [Beautiful Terminal Output in Markdown](https://blog.buenzli.dev/beautiful-terminal-output-in-markdown/)
    - [Rust in the Linux kernel: part 2](https://lwn.net/SubscriberLink/1025232/fbb2d90d084368e3/)
- #agent
    - [Context engineering](https://simonwillison.net/2025/Jun/27/context-engineering/#atom-everything)
    - [definitions of "agents" collected by Simon Willison](https://simonwillison.net/tags/agent-definitions/)
        - the most precise one I think (from [An Introduction to Google’s Approach to AI Agent Security](https://simonwillison.net/2025/Jun/15/ai-agent-security/))
            - AI systems designed to perceive their environment, make decisions, and take autonomous actions to achieve user-defined goals.
        - most liked by Simon Willison
            - an LLM wrecking its environment in a loop
        - mine combining a few
            - models autonomously acting in its environment, by using tools in a loop
    - [MCP: An (Accidentally) Universal Plugin System](https://worksonmymachine.substack.com/p/mcp-an-accidentally-universal-plugin)
- [Programming as Theory Building: Why Senior Developers Are More Valuable](https://cekrem.github.io/posts/programming-as-theory-building-naur/) ([on HN](https://news.ycombinator.com/item?id=44401729))
    - [theory building without a mentor](https://jyn.dev/theory-building-without-a-mentor/)
    - [Architectural Decision Records](https://adr.github.io/)
        - [ADR template](https://github.com/adr/madr/blob/4.0.0/template/adr-template.md)
            - from [An ADR for Use Markdown Architectural Decision Records](https://openpracticelibrary.com/practice/architectural-decision-records-adr/)
        - [anti-patterns of ADRs](https://www.ozimmer.ch/practices/2023/04/03/ADRCreation.html)
            - objectivity
                - Fairy Tale (aka Wishful Thinking): A shallow justification is given, for instance only pros but no cons
                - Sales Pitch: exaggerations and bragging
                - Free Lunch Coupon (aka Candy Bar): consequences are ignored accidentally or hidden deliberately
                - Dummy Alternative: made up options to make the preferred option shine and give the impression that multiple alternatives have been evaluated
            - time
                - Sprint (aka Rush): only one option is considered; only short-term effects are discussed
                - Tunnel Vision: only a local, isolated context is considered, e.g. developmental qualities are covered, but the consequences for operations and maintenance
                - Maze: the discussion derails and centers on details that are not relevant in the given context
            - record size and content nature
                - Blueprint or Policy in Disguise: the amount of details provided and/or a rather commanding, authoritative voice
                - Mega-ADR: too many details are stuffed into ADR
                - Novel and epic: like blueprint or mega-ADR, but with a writing tone of casual and jovial
            - magic tricks
                - non-existing or misleading context
                - problem-solution mismatch
                - pseudo-accuracy
        - [Writing a good design document](https://grantslatton.com/how-to-design-document)
- #ocaml
    - [First thoughts on Rust vs OCaml](https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/)
        - pattern matching can't penetrate `Box`, `Arc` etc.
        - a red flag: `Rc`/`Arc`, sync/async end up requiring different libary, e.g. `im` and `im-rc`
        - [im](https://docs.rs/im/15.0.0/im/):  immutable data structures for Rust
        - [PureScript](A strongly-typed functional programming language that compiles to JavaScript)
    - [Writing a Game Boy Emulator in OCaml](https://linoscope.github.io/writing-a-game-boy-emulator-in-ocaml/)
        - key design of a emulator
        - a middle-scale project in OCaml using some of its advanced features
        - now runs on WASM via `js_of_ocaml`’s WASM support
    - [Learn OCaml](https://ocaml-sf.org/learn-ocaml-public/#activity=exercises)
        - [practical ocaml](https://dev.to/yawaramin/practical-ocaml-314j)
        - the background story of OxCaml: [Jane Street’s sneaky retention tactic](https://archive.ph/u10ol#selection-1133.0-1136.0)
    - [Identity and behaviour](https://ismaelcelis.com/posts/2025-07-identity-and-behaviour/)
        - functional programming naturally separates them
    - [Why I chose OCaml as my primary language](https://xvw.lol/en/articles/why-ocaml.html) #ocaml
        - [Why Lean 4 replaced OCaml as my Primary Language](https://kirancodes.me/posts/log-ocaml-to-lean.html)
    - [Type-level programming for safer resource management](https://frasertweedale.github.io/blog-fp/posts/2025-07-19-type-nats-and-constraints.html) (in Haskell)
    - [A parser and interpreter for a very small language](https://blog.ploeh.dk/2025/07/07/a-parser-and-interpreter-for-a-very-small-language/) (in Haskell)
    - [OCaml Programming: Correct and Efficient and Beautiful](https://cs3110.github.io/textbook/cover.html) ([on HN](https://news.ycombinator.com/item?id=44696979))
- #formal
    - [Multi-Stage Programming with Splice Variables](https://tsung-ju.org/icfp25/)
        - an interactive demonstration in TS, the original implemtation is in Agda ([examples](https://tsung-ju.org/icfp25/agda/Pat.Examples.html))
        - typed meta-programming, to make code generation predictable and safe
        - provides precise control over the generation process and seamlessly scales to advanced features like code pattern matching and rewriting
        - the type system automatically tracks variable dependencies, ensuring that generated code is always well-formed, properly scoped, and type-checks correctly
- [I deleted my second brain](https://www.joanwestenberg.com/p/i-deleted-my-second-brain)
    - [Niklas Luhmann's Zettelkasten Archive](https://niklas-luhmann-archiv.de/bestand/zettelkasten/zettel/ZK_1_NB_1_1_V)
    - [Johnny.Decimal: A system to organise your life](https://johnnydecimal.com/)
    - [Howm: Write fragmentarily and read collectively](https://github.com/kaorahi/howm/)
        - for emacs, but it might be interesting to me for a TUI for forester in Helix?
    - [rule of three](https://en.m.wikipedia.org/wiki/Rule_of_three_(writing))
- [Notes on Epistemic Collapse](https://www.math.columbia.edu/~woit/wordpress/?p=14999)
    - Epistemic collapse in science means losing shared reality due to unreliable info sources.
    - In physics, it's seen in tribalism: string theory tribes dominated despite failures, with research driven by trends over evidence.
    - Particle theory lacks experimental input, relying on "hot topics" under oligarchs, now facing funding collapse.
    - This shows how loss of truth-seeking harms scientific progress.
- #perf
    - [Announcing Sniffnet v1.4: it’s 2X faster than Wireshark at processing PCAP files](https://sniffnet.net/news/v1.4/)
        - by focusing on extracting only the most relevant fields from the packets’ headers
    - [Avoiding PostgreSQL Pitfalls: The Hidden Cost of Failing Inserts](https://johnnymetz.com/posts/postgresql-failing-insert/)
        - `ON CONFLICT DO NOTHING` came to rescue
    - [Toys/Lag: Jerk Monitor](https://nothing.pcarrier.com/posts/lag/) ([on HN](https://news.ycombinator.com/item?id=44481135))
    - [The Surprising gRPC Client Bottleneck in Low-Latency Networks](https://blog.ydb.tech/the-surprising-grpc-client-bottleneck-in-low-latency-networks-and-how-to-get-around-it-69d6977a1d02) ([on HN](https://news.ycombinator.com/item?id=44658973))
- [Run Coverage on Tests](https://hugovk.dev/blog/2025/run-coverage-on-tests/)
    - a few subtle case where the test is not run, caught by coverage
    - [on lobste.rs](https://lobste.rs/s/ggzbe1), there is another subtle case where assertions are not run due to `with pytest.raises(ValueError):`
- [Sirius: A GPU-native SQL engine](https://github.com/sirius-db/sirius)
    - plugs into existing databases via the standard Substrait query format, requiring no query rewrites or major system changes
    - based on
        - [cuDF](https://github.com/rapidsai/cudf), a Python GPU DataFrame library (built on the Apache Arrow columnar memory format) for loading, joining, aggregating, filtering, and otherwise manipulating data
        - [substrait](https://github.com/substrait-io/substrait), a cross platform way to express data transformation, relational algebra, standardized record expression and plans
    - supports DuckDB, will support [Doris](https://doris.apache.org/) and [DataFusion](https://datafusion.apache.org/)
- [Structuring Arrays with Algebraic Shapes](https://dl.acm.org/doi/abs/10.1145/3736112.3736141)
    - Untyped programming invites primitives with excessive flexibility
    - resorting to dependent types (e.g. Futhark), makes types difficult to check – let alone infer, the programmer is given the burden of proof
    - a novel calculus, Star, with a type system that provides useful and expressive types, while also admitting type inference
    - use structural record and variant types for array indices and shapes (algebraic shapes), to reduce the annotation burden on the programmer
    - in the process of implementing a prototype, including type inference
    - [on lobste.rs](https://lobste.rs/s/iwoipn), doug-moen points out that it only supports pointful array programming styles instead of point-free style in the industry
- [SymbolicAI: A neuro-symbolic perspective on LLMs](https://github.com/ExtensityAI/symbolicai) ([on HN](https://news.ycombinator.com/item?id=44399234))
    - a very interesting DSL to do semantic map lambdas, compare with different contexts for nuanced evaluation, combine facts and rules, and more
    - [LOTUS: A Query Engine For Processing Data with LLMs](https://github.com/lotus-data/lotus)
- [Theoretical Analysis of Positional Encodings in Transformer Models](https://arxiv.org/abs/2506.06398) ([on HN](https://news.ycombinator.com/item?id=44400698))
    - ALiBi effectively extrapolates to longer sequences by imposing a monotonic distance bias
    - Wavelet-based encodings provide strong extrapolation, matching or surpassing ALiBi, due to exponential decay of high-frequency components beyond Nmax
    - the novel wavelet PE is a promising candidate for transformerbased tasks requiring extrapolation, combining strong theoretical properties with practical performance
- [ZeQLplus: Terminal SQLite Database Browser](https://github.com/ZetloStudio/ZeQLplus) ([on HN](https://news.ycombinator.com/item?id=44404224))
    - written in V
    - UI might be inspired by [Harlequin](https://github.com/tconbeer/harlequin) (in Python, supports more databases)
- [omarchy: Opinionated Arch/Hyprland Setup](https://github.com/basecamp/omarchy)
- learn about [Dark Archive](https://mathstodon.xyz/@johncarlosbaez/114752342143968527)
- [Researchers develop a battery cathode material that does it all](https://arstechnica.com/science/2025/06/researchers-develop-a-battery-cathode-material-that-does-it-all/) #sci
}}

\subtree[2025-06-26]{\mdnote{2025-06-26}{\tags{#agent #context #game #idea #news #os #rust #web}
- #agent
    - [AI Improves at Improving Itself Using an Evolutionary Trick](https://spectrum.ieee.org/evolutionary-ai)
    - [Learnings from building AI agents](https://www.cubic.dev/blog/learnings-from-building-ai-agents)
    - [Jan-nano-128k: A 4B Model with a Super-Long Context Window (Still Outperforms 671B [in MCP])](https://huggingface.co/Menlo/Jan-nano-128k)
        - it's an interesting direction
    - [Magnitude – Open-source AI browser automation framework](https://github.com/magnitudedev/magnitude)
    - news
        - [Build and Host AI-Powered Apps with Claude – No Deployment Needed](https://www.anthropic.com/news/claude-powered-artifacts)
        - [MCP in LM Studio](https://lmstudio.ai/blog/lmstudio-v0.3.17)
- [Iroh: A library to establish direct connection between peers](https://github.com/n0-computer/iroh)
    - built on QUIC, but use TCP for falling back to relay servers
    - [QUIC for the kernel](https://lwn.net/Articles/1029851/) ([on HN](https://news.ycombinator.com/item?id=44746948))
        - [QUIC is not Quick Enough over Fast Internet : r/programming](https://www.reddit.com/r/programming/comments/1g7vv66/quic_is_not_quick_enough_over_fast_internet/)
        - [microsoft/msquic: Cross-platform, C implementation of the IETF QUIC protocol, exposed to C, C++, C# and Rust.](https://github.com/microsoft/msquic/tree/main)
- [Notes on type inference and polymorphism](https://blog.snork.dev/posts/notes-on-type-inference-and-polymorphism.html)
    - polymorphism is hard to combine with Hindley-Milner type inference
    - [Type Inference Was A Mistake](https://borretti.me/article/type-inference-was-a-mistake)
- #rss
    - [RSS Server Side Reader](https://matklad.github.io/2025/06/26/rssssr.html) ([on HN](https://news.ycombinator.com/item?id=44386637)) ([on lobste.rs](https://lobste.rs/s/nr9t3s))
        - I had the similar idea, but for filtering and merging RSS, particularly for papers
        - the author didn't even want read/unread state and post content, but they are useful for me
    - [RSS as my default web browser (for some stuff)](https://neilzone.co.uk/2022/10/rss-as-my-default-web-browser-for-some-stuff/)
        - the author used a hosted RSS system: [FreshRSS](https://www.freshrss.org/) (self-hostable)
        - configure FreshRSS to grab the whole content if excerpt-only
        - create a pseudo-RSS via "Web scraping feature HTML+XPath for Web pages without any RSS/ATOM feed"
    - [Croissant! Building a No-Framework Web App](https://dbushell.com/2025/07/11/croissant-no-framework-web-app/)
        - informative about how to build a RSS aggregator and how to build no-framework web app
        - from his [AI Policy](https://dbushell.com/ai/), I have quite some ideas about my own AI policy, starting by naming it "LM policy"
- [JavaScript Chose Violence](https://martinrue.com/javascript-chose-violence)
    - a series of caveats of JavaScript, some are new to me
- [Games run faster on SteamOS than Windows 11, Ars testing finds](https://arstechnica.com/gaming/2025/06/games-run-faster-on-steamos-than-windows-11-ars-testing-finds/)
    - a nice surprise, hopefully, games running on wine are the only legacy of Windows in future
    - I'm really frustrated by Github Actions Windows CI build failure that has little information to debug
}}

\subtree[2025-06-25]{\mdnote{2025-06-25}{\tags{#compiler #gpu #llvm #news #os #render #sec #shader #software #vulkan}
- [A new PNG spec](https://www.programmax.net/articles/png-is-back/)
    - I'm thinking about preserving the most valuable photos in minimal size, encrypted, stored in public repo, and the format might be just png
- #ai-safety
    - #copyright
        - [Anthropic wins a major fair use victory for AI — but it’s still in trouble for stealing books](https://simonwillison.net/2025/Jun/24/anthropic-training/#atom-everything)
        - [Against AI: An Open Letter from Writers to Publishers](https://lithub.com/against-ai-an-open-letter-from-writers-to-publishers/) ([on HN](https://news.ycombinator.com/item?id=44410217))
    - [LLM code generation may lead to an erosion of trust](https://jaysthoughts.com/aithoughts1)
    - [AI Is Dehumanization Technology](https://thedabbler.patatas.ca/pages/ai-is-dehumanization-technology.html)
    - [\verb>>>|Amazon's Emissions Climbed 6% in 2024 on Data Center Buildout>>>](https://www.datacenterknowledge.com/sustainability/amazon-s-emissions-climbed-6-in-2024-on-data-center-buildout) ([on HN](https://news.ycombinator.com/item?id=44627746))
- #time
    - [Assembly Theory of Time](\verb>>>|https://faculty.ucr.edu/~legneref/Assembly%20Theory.htm>>>)
        - time is a measurable physical entity, with complex objects' formation paths and "assembly indexes" revealing time's unidirectional depth and causal chains
    - [How to Think About Time in Programming](https://shanrauf.com/archive/how-to-think-about-time-in-programming)
    - [Managing time when time doesn't exist](https://multiverseemployeehandbook.com/blog/temporal-resources-managing-time-when-time-doesnt-exist/)
- #cg
    - [TinyRenderer: Software rendering in 500 lines of bare C++](https://haqr.eu/) ([code](https://github.com/ssloy/tinyrenderer))
    - [Porting GPU shaders to Rust GPU 30x faster with AI](https://rust-gpu.github.io/blog/2025/06/24/vulkan-shader-port/)
    - [CUDA Ray Tracing 2x Faster Than RTX: My CUDA Ray Tracing Journey](https://karimsayedre.github.io/RTIOW.html)
    - [Chili3D: A web-based 3D CAD application for online model design and editing](https://chili3d.com/)
- #rust
    - [Why is the Rust compiler so slow?](https://sharnoff.io/blog/why-rust-compiler-slow) ([on HN](https://news.ycombinator.com/item?id=44390488)) ([on lobste.rs](https://lobste.rs/s/72hbqg))
        - a lot of useful tools to debug rust compilation process
        - see also [Performance Debugging with LLVM-mca: Simulating the CPU](https://johnnysswlab.com/performance-debugging-with-llvm-mca-simulating-the-cpu/)
            - found [LLVM MCA Daemon](https://github.com/securesystemslab/LLVM-MCA-Daemon) [on HN](https://news.ycombinator.com/item?id=44413083)
    - [Cross-Compiling 10,000+ Rust CLI Crates Statically](https://blog.pkgforge.dev/cross-compiling-10000-rust-cli-crates-statically)
    - [How much code does that proc macro generate?](https://nnethercote.github.io/2025/06/26/how-much-code-does-that-proc-macro-generate.html)
    - compilation time
        - [Subsecond: A runtime hotpatching engine for Rust hot-reloading](https://docs.rs/subsecond/0.7.0-alpha.1/subsecond/index.html)
            - TODO: merge with related work
    - [Weird Expressions in Rust](https://www.wakunguma.com/blog/rust-weird-expr) ([on HN](https://news.ycombinator.com/item?id=44397367)) ([on lobste.rs](https://lobste.rs/s/tc2s00))
- [How to Write Compelling Release Announcements](https://refactoringenglish.com/chapters/release-announcements/)
}}

\subtree[2025-06-24]{\mdnote{2025-06-24}{\tags{#agent #build #news #os #rust #sqlite #web #zig}
- #build
    - [Bazel’s Original Sins](https://fzakaria.com/2025/06/22/bazel-s-original-sins)
    - [Chromium's build system is switching from Ninja to Siso for external developers](https://groups.google.com/a/chromium.org/g/chromium-dev/c/v-WOvWUtOpg)
    - [Build an iOS app on Linux or Windows](https://xtool.sh/tutorials/xtool/first-app/) ([on HN](https://news.ycombinator.com/item?id=44372881)) ([on lobste.rs](https://lobste.rs/s/ccit25))
    - [Uv and Ray: Pain-Free Python Dependencies in Clusters](https://news.ycombinator.com/item?id=44394114)
    - [New comment by acheong08 in "uv: An extremely fast Python package and project manager, written in Rust"](https://news.ycombinator.com/item?id=44358882)
        - I think I might switch from `asdf` to [mise](https://mise.jdx.dev/), unfortunately it didn't port asdf zig plugin yet
    - [JeKa : Next-Gen Build Tool for Java & Co.](https://jeka.dev/) #build #jvm
    - [XSLT – Native, zero-config build system for the Web](https://github.com/pacocoursey/xslt)
    - [Mill: A better build tool for Java, Scala, and Kotlin](https://mill-build.org/mill/index.html) ([on HN](https://news.ycombinator.com/item?id=44583565))
- [Interesting Bits of Postgres Grammar](https://steve.dignam.xyz/2025/06/20/interesting-bits-of-postgres-grammar/)
    - found [Geometric Functions and Operators](https://www.postgresql.org/docs/17/functions-geometry.html)
- #tui
    - [fclones](https://terminaltrove.com/fclones/) - finds and handles duplicate files across directories
    - [tatuin](https://terminaltrove.com/tatuin/) - aggregates TODOs from various sources
    - [alden: detachable terminal sessions without breaking scrollback](https://ansuz.sooke.bc.ca/entry/389) - only a source tarball
    - [Atuin – Magical Shell History](https://atuin.sh)
        - with zsh autocomplete and just, I thought I didn't need it, but maybe I need it so that history won't be easily lost, they could form a story of what I was experimenting
    - [Can your terminal do emojis? How big?](https://dgl.cx/2025/06/can-your-terminal-do-emojis)
        - surprisingly old protocol for this
- [Everyone should copy Thunderbird's donation model](https://blog.cyrneko.eu/everyone-should-copy-thunderbird)
    - it asks for donation with low frequency (yearly), and good timing (Chrismas?)
- [Retrieval Augmented Generation Based on SQLite](https://github.com/ggozad/haiku.rag)
    - I do prefer RAG on SQLite, need to try it out
- [The Bitter Lesson is coming for Tokenization](https://lucalp.dev/bitter-lesson-tokenization-and-blt/)
    - but how to part with tokenization?
- [Phoenix.new is Fly's entry into the prompt-driven app development space](https://simonwillison.net/2025/Jun/23/phoenix-new/#atom-everything)
    - I need to give it and fly.io a try
}}

\subtree[2025-06-23]{\mdnote{2025-06-23}{\tags{#game #news #os #rust #tla #typst #zig #✍️}
- [How I use my terminal](https://jyn.dev/how-i-use-my-terminal/)
    - the author explains how things work, especially for those that people are surprised to find possible at all
- [I wrote my PhD Thesis in Typst](https://fransskarman.com/phd_thesis_in_typst.html) ([on HN](https://news.ycombinator.com/item?id=44350322)) ([on lobste.rs](https://lobste.rs/s/pdrso1))
    - it's an unusual journey, the author fought through the process by
        - writing a recursive descent parser in Typst for [custom code syntax highlighting](https://gitlab.com/TheZoq2/typst-common/-/blob/main/highlight.typ)
        - death by a thousand papercuts for bibliography management
        - writing [a tool](https://gitlab.com/TheZoq2/typstex2/) to convert Typst to LaTeX for submitting paper to LaTeX only journal
        - the advisors perspective is also informative
- [Nano-Vllm: lightweight vLLM implementation built from scratch](https://github.com/GeeeekExplorer/nano-vllm)
    - I would wonder if I could do this in Zig
- #lang
    - [Cyber Programming Language](https://cyberscript.dev/)
        - written in Zig
        - fast, efficient, and concurrent scripting
        - faster than Wren (written in C & Wren) that are used in game engine
    - [Pallene Language](https://github.com/pallene-lang/pallene)
        - a statically typed and ahead-of-time compiled sister language to Lua
- [Announcing the Clippy feature freeze](https://blog.rust-lang.org/inside-rust/2025/06/21/announcing-the-clippy-feature-freeze/) ([on HN](https://news.ycombinator.com/item?id=44344601)) ([on lobste.rs](https://lobste.rs/s/mvoez2))
    - an inspiring way to allow the team to have a period of time for repaying tech debts
- learn about [Git Notes: Git's coolest, most unloved­ feature (2022)](https://tylercipriani.com/blog/2022/11/19/git-notes-gits-coolest-most-unloved-feature/)
- found [LeetCode for System Design](https://leetsys.dev)
- #go
    - [Go should be more opinionated](https://eltonminetto.dev/en/post/2025-06-19-go-more-opinated/)
    - [Go is an 80/20 language](https://blog.kowalczyk.info/article/d-2025-06-26/go-is-8020-language.html)
    - [How to store Go pointers from assembly](https://mazzo.li/posts/go-asm-pointers.html) ([on HN](https://news.ycombinator.com/item?id=44355187)) ([on lobste.rs](https://lobste.rs/s/obsh1m))
    - [Why Go Rocks for Building a Lua Interpreter](https://www.zombiezen.com/blog/2025/06/why-go-rocks-for-building-lua-interpreter/)
    - [writing a little gosh](https://flak.tedunangst.com/post/writing-a-gosh)
}}

\subtree[2025-06-22]{\mdnote{2025-06-22}{\tags{#os #rust #yaml}
- [model.yaml](https://simonwillison.net/2025/Jun/21/model-yaml/#atom-everything)
    - an open standard in YAML for defining crossplatform, composable AI models by LM Studio team
- #gpu
    - [Basic facts about GPUs](https://damek.github.io/random/basic-facts-about-gpus/)
    - [TPU Deep Dive](https://henryhmko.github.io/posts/tpu/tpu.html)
- #zig
    - [Zig And Rust (2023)](https://matklad.github.io/2023/03/26/zig-and-rust.html)
    - [Polystate: Composable Finite State Machines](https://www.reddit.com/r/Zig/comments/1lhfbjk/polystate_composable_finite_state_machines/) in Zig
    - [comphash - A very lightweight Zig package offering a zero-cost compile-time hash map](https://www.reddit.com/r/Zig/comments/1lkgr54/comphash_a_very_lightweight_zig_package_offering/)
        - [Andrew Kelly experimented with perfect hashes](https://andrewkelley.me/post/string-matching-comptime-perfect-hashing-zig.html)
    - [Syntax highlighting for Zig's documentation comments](https://www.reddit.com/r/Zig/comments/1lhhgh8/syntax_highlighting_for_zigs_documentation/)
    - [Parameterized types in C using the new tag compatibility rule](https://nullprogram.com/blog/2025/06/26/)
        - C23 has a new rule for struct, union, and enum compatibility
}}

\subtree[2025-06-21]{\mdnote{2025-06-21}{\tags{#agent #formal #os #software #web}
- [That Time I Tried Browsing the Web Without CSS](https://css-tricks.com/that-time-i-tried-browsing-the-web-without-css/)
    - I really should keep my sites readable without JS, and even without CSS
- [Harper – an open-source alternative to Grammarly](https://writewithharper.com)
    - I should give it a try again
- [AbsenceBench: Language models can't tell what's missing](https://arxiv.org/abs/2506.11440)
    - from "Needle in a Haystack" to the missing needle
- found [Nxtscape – an open-source agentic browser](https://github.com/nxtscape/nxtscape)
- found [kokke/tiny-regex-c](https://github.com/kokke/tiny-regex-c)
    - uses `exrex` to randomly generate test-cases from regex patterns
    - uses "KLEE Symbolic Execution Engine" for [formal verification](https://github.com/kokke/tiny-regex-c/blob/master/formal_verification.md)
- [\verb>>>|We moved from AWS to Hetzner, saved 90%, kept ISO 27001 with Ansible>>>](https://medium.com/@accounts_73078/goodbye-aws-how-we-kept-iso-27001-slashed-costs-by-90-914ccb4b89fc)
    - no specifics except for the use of ansible
- #scheme
    - [Why Dylan?](https://opendylan.org/intro-dylan/why-dylan.html)
        - a scheme without parentheses, but with `end`
    - [Why computational reproducibility matters](https://blog.khinsen.net/posts/2025/06/20/computational-reproducibility.html)
        - learn about [GNU Guix](https://guix.gnu.org/)
            - configured with [Guile](https://www.gnu.org/software/guile/), another scheme- [Show HN: Inspect and extract files from MSI installers directly in your browser](https://pymsi.readthedocs.io/en/latest/msi_viewer.html)
- [python-importtime-graph](https://simonwillison.net/2025/Jun/20/python-importtime-graph/#atom-everything)
    - I didn't know it's even possible
}}

\subtree[2025-06-20]{\mdnote{2025-06-20}{\tags{#news #os #rust #web}
- [Infinite Mac OS X](https://blog.persistent.info/2025/03/infinite-mac-os-x.html) ([on HN](https://news.ycombinator.com/item?id=44323719)) ([on lobste.rs](https://lobste.rs/s/la5mgg))
- [JavaScript broke the web (and called it progress)](https://www.jonoalderson.com/conjecture/javascript-broke-the-web-and-called-it-progress/) ([on HN](https://news.ycombinator.com/item?id=44325563)) ([on lobste.rs](https://lobste.rs/s/3ew6rt))
- [Hurl: Run and test HTTP requests with plain text](https://github.com/Orange-OpenSource/hurl)
    - a KISS way to script curl
- #makefile
    - [Learn Makefiles](https://makefiletutorial.com/)
    - [Makefile Style Guide](https://clarkgrubb.com/makefile-style-guide)
    - [Makefile formatter and linter](https://github.com/EbodShojaei/bake)
- found [Minimal auto-differentiation engine in Rust](https://github.com/e3ntity/nanograd)
- found [yap](https://github.com/finnvoor/yap)
    - from [Apple’s New Foundation Model Speech APIs Outpace Whisper for Transcription](https://www.macstories.net/stories/hands-on-how-apples-new-speech-apis-outpace-whisper-for-lightning-fast-transcription/)
    - I have to wait for macOS 26
- found [How to Design Programs 2nd Ed (2024)](https://htdp.org)
}}

\subtree[2025-06-19]{\mdnote{2025-06-19}{\tags{#cg #compiler #haskell #news #os #simd #software}
- [How Close to Black Mirror Are We?](https://www.howclosetoblackmirror.com/)
- #math/app
    - [Curved-Crease Sculpture](https://erikdemaine.org/curved/)
    - [Elliptic curves as art](https://elliptic-curves.art/) ([on HN](https://news.ycombinator.com/item?id=44315321))
    - [Learning to flock in open space by avoiding collisions and staying together](http://arxiv.org/pdf/2506.15587v1)
    - [Cracovians: The Twisted Twins of Matrices](https://marcinciura.wordpress.com/2025/06/20/cracovians-the-twisted-twins-of-matrices/)
    - [Learn you Galois Fields for Great Good](https://xorvoid.com/galois_fields_for_great_good_00.html)
    - [Finding a billion factorials in 60 ms with SIMD](https://codeforces.com/blog/entry/143279) ([on HN](https://news.ycombinator.com/item?id=44351068)) ([on lobste.rs](https://lobste.rs/s/vaxtvz))
    - [Y Combinator (Math) Explained](https://anish.ink/posts/ycombinator.html)
    - [Entropy of a Mixture](https://cgad.ski/blog/entropy-of-a-mixture.html) ([on HN](https://news.ycombinator.com/item?id=44427929))
    - [Functions Are Vectors (2023)](https://thenumb.at/Functions-are-Vectors/) ([on HN](https://news.ycombinator.com/item?id=44481464))
    - [The Rubik's Cube Perfect Scramble](https://www.solutionslookingforproblems.com/post/the-rubik-s-cube-perfect-scramble) ([on HN](https://news.ycombinator.com/item?id=44767928)) ([on lobste.rs](https://lobste.rs/s/lwufi3))
        - [Twentyseven 1.0](https://blog.poisson.chat/posts/2025-08-01-twentyseven.html)
            - a Rubik’s cube solver in Haskell
            - based on [Cube Explorer](https://kociemba.org/cube.htm) in Pascal, actually Delphi 6 [[source](https://github.com/hkociemba/CubeExplorer)]
    - [johncarlosbaez's post on mathstodon.xyz: when is 0.999... less than 1](https://mathstodon.xyz/@johncarlosbaez/114975409322398043)
- #ai-safety
    - [Moral puzzles: Man vs. machine](https://dynomight.net/puzzles-results/)
    - [Rolling the ladder up behind us](https://xeiaso.net/blog/2025/rolling-ladder-behind-us/) ([on HN](https://news.ycombinator.com/item?id=44328894)) ([on lobste.rs](https://lobste.rs/s/dl5sj9))
    - [All roads lead to disaster](https://blog.jsbarretto.com/post/all-roads-lead-to-disaster)
    - [Is there a no-AI audience?](https://thatshubham.com/blog/ai) ([on HN](https://news.ycombinator.com/item?id=44463959))
        - [thatshubham/no-ai: This repository will be a community-curated list of software and resources that explicitly avoid the integration of artificial intelligence.](https://github.com/thatshubham/no-ai)
            - unfortunately very short list, didn't include Helix
            - Zed also support no AI recently
- #rust
    - [Rewriting Kafka in Rust Async: Insights and Lessons Learned in Rust](https://wangjunfei.com/2025/06/18/Rewriting-Kafka-in-Rust-Async-Insights-and-Lessons-Learned/)
    - [higher: Your favourite Haskell type classes for Rust (2023)](https://github.com/bodil/higher)
    - [B compiler written in Crust](https://github.com/tsoding/b)
        - Crust is a little like [Evil Rust](https://github.com/nik-rev/evil-rust) but that was for fun and just some clippy rules
        - uses [fasm](https://flatassembler.net/) as backend
}}

\subtree[2025-06-18]{\mdnote{2025-06-18}{\tags{#agent #benchmark #debugger #docker #news #os #quantum #software #web}
- #helix
    - work on [helix-cheat-sheet](https://github.com/utensil/helix-cheat-sheet)
    - [I really like the Helix editor](https://herecomesthemoon.net/2025/06/i-like-helix/)
- [Double-Entry Ledgers: The Missing Primitive in Modern Software](https://www.pgrs.net/2025/06/17/double-entry-ledgers-missing-primitive-in-modern-software/)
    - I would love to see such an primitive in database design, but I also doubt that if it could be helpful for realworld applications
- #agent
    - [Building Effective AI Agents](https://www.anthropic.com/engineering/building-effective-agents)
        - supposedly the best practice
        - see also [From LLM to AI Agent: What's the Real Journey Behind AI System Development?](https://www.codelink.io/blog/post/ai-system-development-llm-rag-ai-workflow-agent)
    - [LLMs pose an interesting problem for DSL designers](https://kirancodes.me/posts/log-lang-design-llms.html)
        - "LLMs pose an interesting problem for the DSL designers – the opportunity cost for using niche languages is now substantially increasing, and so we, as language designers, will be held to a higher standard to justify the use of our DSLs"
        - I think DSLs would clarify the intent in the domain, and reduce noise in code
        - even embed DSLs in general programming language would be better than just plain code
        - there should be a recipe for LLMs to quickly grasp the mindset of a DSL, instead of giving up on DSLs
    - [You Can’t Pay Me To Prompt!](https://dbushell.com/2025/06/18/ai-policy/)
        - an intereting writeup for (no) AI policy
    - [LLM Agents Are Breaking Your Platform, Not Your Architecture](https://www.junctionlabs.io/blog/llm-agents-are-breaking-your-platform-not-your-architecture)
        - control the size of the mass introduced by agents
    - [Is there a Half-Life for the Success Rates of AI Agents?](https://www.tobyord.com/writing/half-life) ([on HN](https://news.ycombinator.com/item?id=44308711)) ([on lobste.rs](https://lobste.rs/s/hcoqxb))
    - [Libraries are under-used. LLMs make this problem worse](https://makefizz.buzz/posts/libraries-llms)
    - [Building agents using streaming SQL queries](https://www.morling.dev/blog/this-ai-agent-should-have-been-sql-query/)
        - an interesting yet too traditional experiment
    - [Bots are overwhelming websites with their hunger for AI data](https://www.theregister.com/2025/06/17/bot_overwhelming_websites_report/)
    - [Show HN: Trieve CLI – Terminal-based LLM agent loop with search tool for PDFs](https://github.com/devflowinc/trieve/tree/main/clients/cli)
    - [GitHub CEO: manual coding remains key despite AI boom](https://www.techinasia.com/news/github-ceo-manual-coding-remains-key-despite-ai-boom)
- #wayland
    - [Long live Xorg, I mean Xlibre](https://www.dedoimedo.com/computers/xlibre.html)
    - [It's true, “we” don't care about accessibility on Linux](https://tesk.page/2025/06/18/its-true-we-dont-care-about-accessibility-on-linux/) ([on HN](https://news.ycombinator.com/item?id=44314372)) ([on lobste.rs](https://lobste.rs/s/1nyzfj))
    - [Wayland Is Growing Up. and Now We Don't Have a Choice](https://fireborn.mataroa.blog/blog/i-want-to-love-linux-it-doesnt-love-me-back-post-4-wayland-is-growing-up-and-now-we-dont-have-a-choice/) ([on HN](https://news.ycombinator.com/item?id=44326545)) ([on lobste.rs](https://lobste.rs/s/76i5wh))
    - [Cosmoe: BeOS Class Library on top of Wayland](https://cosmoe.org/index.html)
    - [The X Window System didn't immediately have X terminals](https://utcc.utoronto.ca/~cks/space/blog/unix/XTerminalsNotImmediate)
    - [Two weeks of wayback](https://ariadne.space/2025/07/07/two-weeks-of-wayback.html)
    - [Please don't promote Wayland](https://stoppromotingwayland.netlify.app/)
    - [Wayback 0.1 released](https://wayback.freedesktop.org/news/2025/07/23/wayback-0.1-released/)
- #robot
    - [Real-time action chunking with large models](https://www.pi.website/research/real_time_chunking)
    - [Swarm robotics could spell the end of the assembly line](https://www.therobotreport.com/swarm-robotics-could-spell-end-aerospace-assembly-line/)
    - [Robot metabolism: Toward machines that can grow by consuming other machines](https://www.science.org/doi/10.1126/sciadv.adu6897) ([on HN](https://news.ycombinator.com/item?id=44622999))
- #editor
    - [Using Microsoft's New CLI Text Editor on Ubuntu](https://www.omgubuntu.co.uk/2025/06/microsoft-edit-text-editor-ubuntu)
    - [Publishing a Docker Container for MS Edit to the GitHub Container Registry](https://til.simonwillison.net/github/container-registry)
    - [The Zed Debugger Is Here](https://zed.dev/blog/debugger) ([on HN](https://news.ycombinator.com/item?id=44314977)) ([on lobste.rs](https://lobste.rs/s/rwbtwd))
    - [Pragtical - The practical and pragmatic code editor](https://pragtical.dev/)
        - built on SDL, C and Lua, low footprint
        - forked from lite XL (which is forked from lite) to be [more practical rather than minimalist](https://github.com/pragtical/pragtical/issues/6#issuecomment-1581650875)
- #sec
    - [How keys are used in FileVault and encryption](https://eclecticlight.co/2025/06/25/how-keys-are-used-in-filevault-and-encryption/)
        - VEK (Volume Encryption Key) never leaves Secure Enclave, destroyed on "Erase All Content and Settings (EACAS)"
        - wrapping: encrypting the VEK using a KEK (Key Encryption Key)
            - user password can be changed without the contents of the protected volume having to be fully decrypted and encrypted again
            - possible to generate multiple KEKs to support the use of recovery keys that can be used to unlock the VEK when the user’s password is lost or forgotten
    - [Apple: Prepare your network for quantum-secure encryption in TLS](https://support.apple.com/en-my/122756)
    - [Blink and you'll miss it — a URL handler surprise](https://dgl.cx/2025/06/blink-at-a-url-handler)
    - [New Linux Flaws Enable Full Root Access via PAM and Udisks Across Major Distributions](https://thehackernews.com/2025/06/new-linux-flaws-enable-full-root-access.html)
    - [Getting ready to issue IP address certificates](https://community.letsencrypt.org/t/getting-ready-to-issue-ip-address-certificates/238777) ([on HN](https://news.ycombinator.com/item?id=44379034)) ([on lobste.rs](https://lobste.rs/s/ljfoxr))
    - [The Journey of Bypassing Ubuntu's Unprivileged Namespace Restriction](https://u1f383.github.io/linux/2025/06/26/the-journey-of-bypassing-ubuntus-unprivileged-namespace-restriction.html) ([on HN](https://news.ycombinator.com/item?id=44400440))
    - [Transmitting data via ultrasound without any special equipment](https://halcy.de/blog/2025/06/27/transmitting-data-via-ultrasound-without-any-special-equipment/) ()
        - not security per se, but could be used to breach
        - uses 18-20kHz (not real ultra sound (~50kHz))
        - use WebAudio
        - [on HN](https://news.ycombinator.com/item?id=44398390) and [on lobste.rs](https://lobste.rs/s/96xzbg), people mentioned that IoT use sound to do device paring, not necessarily ultra sound, so users could understand what's going on
    - [Vet – A tool for safely running remote shell scripts](https://getvet.sh)
        - a flawed and naive safeguard, but a call to change status quo
- found snapDOM
    - from [Benchmark: snapDOM vs html2canvas](https://zumerlab.github.io/snapdom/)
}}

\subtree[2025-06-17]{\mdnote{2025-06-17}{\tags{#build #context #misc #os #sec #software #tui #web}
- [Accumulation of Cognitive Debt When Using an AI Assistant for Essay Writing Task](https://www.brainonllm.com/)
    - now with Helix, I use less of auto-complete, and enjoy genuine programming
- #tech-history
    - [The many JavaScript runtimes of the last decade](https://buttondown.com/whatever_jamie/archive/the-many-many-many-javascript-runtimes-of-the-last-decade/) #web #bun
    - [Why JPEGs still rule the web (2024)](https://spectrum.ieee.org/jpeg-image-format-history)
    - [Google aims to reinvent email with Wave (2009)](https://www.cbc.ca/news/canada/how-google-aims-to-reinvent-email-with-wave-1.826825)
    - [A Brief, Incomplete, and Mostly Wrong History of Robotics](https://generalrobots.substack.com/p/a-brief-incomplete-and-mostly-wrong)
    - [Notes on retries](https://justinblank.com/notebooks/retries.html)
    - [The Promised LAN](https://notes.pault.ag/tpl/)
    - [Fun with Telnet](https://brandonrozek.com/blog/fun-with-telnet/)
    - [A brief history of web browsers](https://eclecticlight.co/2025/06/28/a-brief-history-of-web-browsers/)
    - [Emoji Kitchen - Browse Google's unique emoji combinations](https://emojikitchen.dev/)
    - [macOS Icon History](https://basicappleguy.com/basicappleblog/macos-icon-history)
    - [Who Invented Backpropagation?](https://people.idsia.ch/~juergen/who-invented-backpropagation.html) #tech-history
            - [On HN](https://news.ycombinator.com/item?id=44941963)
    - [MacPaint Art from the Mid-80s Still Looks Great Today](https://blog.decryption.net.au/posts/macpaint.html) ([on HN](https://news.ycombinator.com/item?id=44540402))
    - [Open, free, and ignored: the afterlife of Symbian](https://www.theregister.com/2025/07/17/symbian_forgotten_foss_phone_os/) ([on HN](https://news.ycombinator.com/item?id=44591062))
    - [Ask HN: Any active COBOL devs here? What are you working on?](https://news.ycombinator.com/item?id=44604257)
    - [20 years of Linux on the Desktop (part 4)](https://ploum.net/2025-07-23-linux_desktop4.html) ([on HN](https://news.ycombinator.com/item?id=44658770))
- #agent
    - [\verb>>>|100% effective>>>](https://simonwillison.net/2025/Jun/16/100-percent/#atom-everything)
        - on LLM safety, there is no guarantee
    - [Coding agents require skilled operators](https://simonwillison.net/2025/Jun/18/coding-agents/#atom-everything)
    - [MCP Specification – version 2025-06-18 changes](https://modelcontextprotocol.io/specification/2025-06-18/changelog)
    - [The Brute Squad](https://sourcegraph.com/blog/the-brute-squad)
    - [Quick notes on a brief agentic coding experience](https://olano.dev/blog/agentic-coding-experience/)
    - [TIL:AI. Thoughts on AI](https://cocoaphony.micro.blog/2025/06/16/tilai-thoughts-on-ai.html)
    - [We Should Identify and Mitigate Third-Party Safety Risks in MCP-Powered Agent Systems](http://arxiv.org/pdf/2506.13666v1)
    - [Are AI Bots Knocking Cultural Heritage Offline?](https://www.glamelab.org/products/are-ai-bots-knocking-cultural-heritage-offline/)
    - [Now might be the best time to learn software development](https://substack.com/home/post/p-165655726) ([on HN](https://news.ycombinator.com/item?id=44299979)) ([on lobste.rs](https://lobste.rs/s/yrqfcz))
    - [Gemini CLI: your open-source AI agent](https://blog.google/technology/developers/introducing-gemini-cli-open-source-ai-agent/) ([on HN](https://news.ycombinator.com/item?id=44377031)) ([on lobste.rs](https://lobste.rs/s/f9xdsg))
    - [Introducing Qodo Gen CLI: Build and Run Coding Agents Anywhere in the SDLC](https://www.qodo.ai/blog/introducing-qodo-gen-cli-build-run-and-automate-agents-anywhere-in-your-sdlc/)
- #privacy
    - [Why WhatsApp Didn’t Sell Ads](https://blog.whatsapp.com/why-we-don-t-sell-ads)
    - [matrix is cooked](https://paper.wf/alexia/matrix-is-cooked)
    - [Websites are tracking you via browser fingerprinting](https://engineering.tamu.edu/news/2025/06/websites-are-tracking-you-via-browser-fingerprinting.html)
    - [Delta Chat is a decentralized and secure messenger app](https://delta.chat/en/)
    - [Google Gemini is about to control your messages and calls, even if you say no](https://www.laptopmag.com/ai/gemini-phone-access-update) ([on HN](https://news.ycombinator.com/item?id=44411114))
    - [The EU wants to decrypt your private data by 2030](https://www.techradar.com/vpn/vpn-privacy-security/the-eu-wants-to-decrypt-your-private-data-by-2030)
    - [UK drops demand for backdoor into Apple encryption](https://www.theverge.com/news/761240/uk-apple-us-encryption-back-door-demands-dropped) #privacy
    - [Wikimedia Foundation Challenges UK Online Safety Act Regulations](https://wikimediafoundation.org/news/2025/07/17/wikimedia-foundation-challenges-uk-online-safety-act-regulations/) ([on HN](https://news.ycombinator.com/item?id=44721403))
    - [The UK Is Poised to Ban VPNs](https://www.da.vidbuchanan.co.uk/blog/compliance-vs-circumvention.html) ([on HN](https://news.ycombinator.com/item?id=44705627))
    - [ChatGPT Chats Were Indexed Then Removed from Search but Still Remain Online](https://growtika.com/chatgpt-shared-chats-seo-indexing-privacy-leak/)
    - [Can you block it? A simple Ad Block Tester](https://canyoublockit.com/)
    - [Tell HN: uBlock Origin on Chrome is finally gone](https://news.ycombinator.com/item?id=44538517)
        - [How I found a bypass in Google's big anti-adblock update](https://0x44.xyz/blog/web-request-blocking/)
    - [Cloudflare Starts Blocking Pirate Sites for UK Users](https://torrentfreak.com/cloudflare-starts-blocking-pirate-sites-for-uk-users-thats-a-pretty-big-deal-250715/) ([on HN](https://news.ycombinator.com/item?id=44571563))
    - [TikTok, AliExpress and WeChat ignore your GDPR rights](https://noyb.eu/en/how-tiktok-aliexpress-wechat-ignore-your-gdpr-rights) ([on HN](https://news.ycombinator.com/item?id=44590617))
    - [Valve confirms credit card companies pressured it to delist certain adult games](https://www.pcgamer.com/software/platforms/valve-confirms-credit-card-companies-pressured-it-to-delist-certain-adult-games-from-steam/) ([on HN](https://news.ycombinator.com/item?id=44606184))
    - [Fully homomorphic encryption and the dawn of a private internet](https://bozmen.io/fhe)
        - [from HN](https://news.ycombinator.com/item?id=44601023):

            > Even without bootstrapping FHE will never be as fast as plaintext computation: the ciphertext is about three orders of magnitude much larger than the plaintext data it encrypts, which means you have to have more memory bandwidth and more compute. You can’t bridge this gap.

    - [Web fingerprinting is worse than I thought (2023)](https://www.bitestring.com/posts/2023-03-19-web-fingerprinting-is-worse-than-I-thought.html) ([on HN](https://news.ycombinator.com/item?id=44669853))
    - [Simon Willison | Official statement from Tea on their data leak](https://simonwillison.net/2025/Jul/26/official-statement-from-tea/)
    - [Performance and telemetry analysis of Trae IDE, ByteDance's VSCode fork](https://github.com/segmentationf4u1t/trae_telemetry_research) ([on HN](https://news.ycombinator.com/item?id=44703164)) #agent
- #news
    - [Rules, Not Renewables, Might Explain the Iberian Blackout](https://spectrum.ieee.org/spain-grid-failure)
    - [Miscalculation by Spanish power grid operator REE contributed to blackout](https://www.reuters.com/business/energy/investigation-into-spains-april-28-blackout-shows-no-evidence-cyberattack-2025-06-17/)
- found [Fossify – A suite of open-source, ad-free apps](https://github.com/FossifyOrg)
- found [zb: An experiment in hermetic, reproducible build systems](https://github.com/256lights/zb)
    - uses lua to specify build rules
- found [Type Inference Zoo](https://zoo.cuichen.cc/)
- [Intuiting Monty Hall](https://entropicthoughts.com/intuiting-monty-hall)
}}

\subtree[2025-06-16]{\mdnote{2025-06-16}{\tags{#agent #os #rust}
- #agent
    - [Agents for the Agent](https://ampcode.com/agents-for-the-agent)
        - amp on subagent
    - [Ampcode - First Impressions](https://shantanugoel.com/2025/06/15/ampcode/)
    - [Coding agents have crossed a chasm](https://blog.singleton.io/posts/2025-06-14-coding-agents-cross-a-chasm/)
    - [Snorting the AGI with Claude Code](https://kadekillary.work/blog/#2025-06-16-snorting-the-agi-with-claude-code)
        - use claude code with [marp](https://github.com/marp-team/marp-cli) to create a slide deck that explains the codebase
    - [The lethal trifecta for AI agents: private data, untrusted content, and external communication](https://simonwillison.net/2025/Jun/16/the-lethal-trifecta/)
- [I want to be a Journey Programmer Again](https://hexhowells.com/posts/journey.html)
    - I think I've always been a journey programmer, and didn't know it as a feature
- found [rgSQL: A test suite to help you build your own database engine](https://technicaldeft.com/posts/rgsql-a-test-suite-for-database-engines)
}}

\subtree[2025-06-15]{\mdnote{2025-06-15}{\tags{#os #physics #raymarching}
- [Q-learning is not yet scalable](https://seohong.me/blog/q-learning-is-not-yet-scalable/)
- found [Todo.txt](http://todotxt.org/)
    - from [todo.txt tasks in my TRMNL](https://akselmo.dev/posts/todotxt-in-my-trmnl/)
- #software
    - [What is systems programming, really? (2018)](https://willcrichton.net/notes/systems-programming/)
    - [What Is Open Source?](https://werd.io/what-is-open-source/)
        - learn about free v.s. open source
        - related
            - [I feel open source has turned into two worlds](https://utcc.utoronto.ca/~cks/space/blog/tech/OpenSourceTwoWorlds)
    - found [is it really FOSS?](https://isitreallyfoss.com/)
- #cg
    - [On Shaping Light](https://blog.maximeheckel.com/posts/shaping-light-volumetric-lighting-with-post-processing-and-raymarching/)
    - watched [Physics and Math of Shading](https://www.youtube.com/watch?v=j-A0mwsJRmk)
        - from [SIGGRAPH 2025 Course: Physically Based Shading in Theory and Practice](https://blog.selfshadow.com/publications/s2025-shading-course/)
    - [Remaking Celeste's Lighting](https://noelberry.ca/posts/celeste_lighting/)
- found [Foundations of Computer Vision](https://visionbook.mit.edu)
}}

\subtree[2025-06-14]{\mdnote{2025-06-14}{\tags{#agent #blogging #compiler #context #formal #game #idea #interop #lean #news}
- started using Mac's dictation in agent coding
- [Blogging about papers](https://simonwillison.net/2025/Jun/13/blogging-about-papers/#atom-everything)
    - [Design Patterns for Securing LLM Agents against Prompt Injections](https://simonwillison.net/2025/Jun/13/prompt-injection-design-patterns/) ([on HN](https://news.ycombinator.com/item?id=44268335)) ([on lobste.rs](https://lobste.rs/s/zuadfv))
        - "the writing is clear, it’s enjoyable to read and the target audience clearly includes practitioners, not just other researchers"
- #cg
    - [Luxe Game Engine in preview now](https://luxeengine.com/dev-log-15/)
        - 2D/3D, cross-platform (including web)
        - written in c++, scriptable with [Wren](https://wren.io/) or any language that can interact with C
        - optional editor to build worlds, animation, ui etc.
    - [Voronoi, Hashing and OSL](https://aras-p.info/blog/2025/06/13/Voronoi-Hashing-and-OSL/)
        - found [Open Shading Language (OSL)](https://github.com/AcademySoftwareFoundation/OpenShadingLanguage)
            - was originally developed by Sony Pictures Imageworks for film animation and visual effects
            - has features such as radiance closures, BSDFs, and deferred ray tracing as first-class concepts
- [Three Algorithms for YSH Syntax Highlighting](https://codeberg.org/oils/oils.vim/src/branch/main/doc/algorithms.md)
    - Coarse Parsing with regexes + a context stack could be even more accurate than Context-Free Parsing used by tree-sitter
    - recognizing most languages with Tree-sitter requires writing C code in an external scanner
- found [Tattoy: a text-based terminal compositor](https://tattoy.sh/) ([on HN](https://news.ycombinator.com/item?id=44268644)) ([on lobste.rs](https://lobste.rs/s/bcxcju))
    - considerate design for text contrasts: "detect low contrast text and auto adjust the foreground colour within the constraints of your chosen terminal theme to find the nearest colour that meets a minimum contrast threshold"
    - usage example: terminal minimap, background video, shadertoy shaders
- #formalization
    - found [Litex: Scale Formal Reasoning in AI Age](https://github.com/litexlang/golitex)
        - "Traditional proof assistants like Lean4 require learning hundreds of unfamiliar keywords and complex type theories. Litex enables formal verification with just 8 intuitive keywords (forall, exist, not, or, fn, prop, obj, set) and familiar Python/Go-like syntax"
    - [100 years of Zermelo's axiom of choice: What was the problem with it? (2006)](https://research.mietek.io/mi.MartinLof2006.html) (partially formalized in Agda)
- #datalog
    - [Implementing Logic Programming](https://btmc.substack.com/p/implementing-logic-programming) with Prolog and Datlog
    - [Datalog in Rust](https://github.com/frankmcsherry/blog/blob/master/posts/2025-06-03.md)
- #rust
    - [OxCaml, Jane Street's extension of OCaml is now open-source](https://oxcaml.org) ([on HN](https://news.ycombinator.com/item?id=44268782)) ([on lobste.rs](https://lobste.rs/s/unsbmk))
    - [Hypershell: A Type-Level DSL for Shell-Scripting in Rust powered by Context-Generic Programming](https://contextgeneric.dev/blog/hypershell-release/)
    - [Datalog in Minikanren](https://deosjr.github.io/dynamicland/datalog.html) ([on HN](https://news.ycombinator.com/item?id=44283093), many good references about datalog, and scheme)
    - [\verb>>>|Bzip2 crate switches from C to 100% Rust>>>](https://trifectatech.org/blog/bzip2-crate-switches-from-c-to-rust/)
        - `c2rust`, crate [cc](https://crates.io/crates/cc), `miri`
        - `cargo fuzz`, `cargo audit`, `semgrep` (particularly [semgrep-rules](https://github.com/trailofbits/semgrep-rules))
- #zig
    - watched [Writing polymorphic code (anytype, comptime interface, tagged union)](https://www.reddit.com/r/Zig/comments/1lak6wf/writing_polymorphic_code_anytype_comptime/)
        - found [Zimpl](https://github.com/permutationlock/zimpl) ([why](https://github.com/permutationlock/zimpl/blob/main/why.md))
        - [tagged union example with `inline else`](https://github.com/ComputerBread/videos-code-snippets/blob/main/zig-comptime-polymorphism/union-6-normal-n-inline.zig)
    - [Compiler optimization options - memchr and ripmemchr case study](https://hwisnu.bearblog.dev/compiler-optimization-options-memchr-and-ripmemchr-case-study/)
    - [C2y: Hitting the Ground Running](https://thephd.dev/c2y-hitting-the-ground-running)
    - [GCC, glibc, stack unwinding and relocations – A war story](https://blog.sergiodj.net/posts/gcc-glibc-stack-unwinding-relocations-bug/)
    - [The Art Of Packing Data](https://www.elopezr.com/the-art-of-packing-data/#)
- #apl
    - [APL Style: Patterns/Anti-patterns](https://sway.cloud.microsoft/b1pRwmzuGjqB30On)
    - [Solving LinkedIn Queens with APL](https://pitr.ca/2025-06-14-queens)
    - [Klong: A Simple Array Language](https://t3x.org/klong/)
    - [Coding in Advent](https://panadestein.github.io/blog/posts/aoc24.html) in BQN
    - [apl87](https://www.jsoftware.com/papers/APL87.htm)
    - [My Ideal Array Language](https://www.ashermancinelli.com/csblog/2025-7-20-Ideal-Array-Language.html) ([on HN](https://news.ycombinator.com/item?id=44785224)) ([on lobste.rs](https://lobste.rs/s/xejkcr))
        - APL, Mojo, MLIR BQN etc., but no mention of Julia
        - [this comment](https://news.ycombinator.com/item?id=38786963) recommend [Astropy](https://www.astropy.org/) and much more
    - [BobMcDear/trap: Autoregressive transformers in APL](https://github.com/BobMcDear/trap) #lm
- [Introducing Sulka, the Hardened Yocto Distro](https://ejaaskel.dev/introducing-sulka-the-hardened-yocto-distro/)
    - learn about the possibility to maintain a distro by a single person
    - the Yocto project provides toolkits to create custom Linux distributions, especially for embedded systems
    - Sulka is a hardened Poky, and there are alternatives like [Welma](https://theembeddedkit.io/welma-yocto-linux/)
- #ai
    - [To fuel AI, US Congress moves to fast-track nuclear plant approvals](https://www.wsj.com/articles/to-feed-power-wolfing-ai-lawmakers-are-embracing-nuclear-a461ab7d)
    - [The Emperor's New LLM](https://dayafter.substack.com/p/the-emperors-new-llm)
    - [Builder.ai did not "fake AI with 700 engineers"](https://blog.pragmaticengineer.com/builder-ai-did-not-fake-ai/)
    - [Self-Adapting Language Models](https://arxiv.org/abs/2506.10943)
    - [Resa: Transparent Reasoning Models via SAEs](https://arxiv.org/abs/2506.09967)
    - [Simulink (Matlab) Copilot](https://github.com/Kaamuli/Bloxi)
    - [Rethinking Losses for Diffusion Bridge Samplers](https://arxiv.org/abs/2506.10982)
- #quantum
    - [Quantum Computing without the Linear Algebra](https://eprint.iacr.org/2025/1091.pdf)
    - [Geometry from Quantum Temporal Correlations](https://arxiv.org/abs/2502.13293)
- news
    - [Apple's Liquid Glass is prep work for AR interfaces, not just a design refresh](https://omc345.substack.com/p/from-skeuomorphic-to-liquid-glass)
    - [Next.js 15.1+ is unusable outside of Vercel](https://omarabid.com/nextjs-vercel)
    - [The European public DNS that makes your Internet safer](https://www.dns0.eu)
- general
    - [Feedback Is Not an Attack](https://ashley.dev/posts/feedback-is-not-an-attack/)
    - [Ask HN: How do I give back to people helped me when I was young and had nothing?](https://news.ycombinator.com/item?id=44268448)
        - "Focus less on those who helped you, and more on helping others."
    - [am i too self-aware?](https://tala.bearblog.dev/am-i-too-self-aware/)
    - [When random people give money to random other people (2017)](https://quomodocumque.wordpress.com/2017/06/27/when-random-people-give-money-to-random-other-people/)
    - [We Live In a Golden Age of Interoperability](https://borretti.me/article/we-live-in-a-golden-age-of-interoperability)
    - [No Hello](https://nohello.net/en/)
- #biology
    - [Sperm are very different from all other cells](https://www.bbc.com/future/article/20250613-untangling-the-mysteries-of-what-we-dont-know-about-sperm)
    - [The Ecosystem Dynamics That Can Make or Break an Invasion](https://physics.mit.edu/news/the-ecosystem-dynamics-that-can-make-or-break-an-invasion/)
    - [When we die do we still have any of the original cells from our birth?](https://www.quora.com/When-we-die-do-we-still-have-any-of-the-original-cells-from-our-birth)
- found [Modularizing George Cave's eInk Energy Dashboard](https://slipway.co/blog/eink-energy-dashboard)
    - could be used to make widgets for various devices
- found [Radicle Desktop: a graphical user interface for the Radicle peer-to-peer code forge](https://radicle.xyz/desktop)
    - learn about [Radicle](https://radicle.xyz/), a sovereign code forge built on Git
- found [Qrkey – Offline private key backup on paper](https://github.com/Techwolf12/qrkey)
    - not sure if it's a good idea security-wise, but neat anyway
}}

\subtree[2025-06-13]{\mdnote{2025-06-13}{\tags{#benchmark #formal #lean #news #os #rss #rust #tui #z3 #zig}
- [Solving LinkedIn Queens with SMT](https://buttondown.com/hillelwayne/archive/solving-linkedin-queens-with-smt/)
    - in Z3 SMT solver instead of CVC5 SMT solver as in [Using SAT to Get the World Record on LinkedIn's Queens](https://ryanberger.me/posts/queens/)
    -  SAT solvers are "criminally underused by the industry" (from [Modern SAT solvers: fast, neat and underused](https://codingnest.com/modern-sat-solvers-fast-neat-underused-part-1-of-n/))
    - SMT solvers are "higher-level" than SAT, capable of handling more data types than just boolean variables
    - It's a lot easier to solve the problem at the SMT level than at the SAT level
    - people prefer SMT to SAT
    - [Glucose, an SAT solver](https://github.com/audemard/glucose) is really fast
    - [The Hat, the Spectre and SAT Solvers (2024)](https://www.nhatcher.com/post/on-hats-and-sats/) ([on HN](https://news.ycombinator.com/item?id=44269289)) ([on lobste.rs](https://lobste.rs/s/oq0ui4))
- [jemalloc Postmortem](https://jasone.github.io/2025/06/12/jemalloc-postmortem/)
    - they "reached a sad end for jemalloc in the hands of Facebook/Meta even though most of the people involved were acting in good faith"
    - "the root of the problem is lack of awareness about external uses and needs"
        - even "unaware of its replacement until after the fact"
    - "internally siloed open source projects cannot thrive"
    - should evaluate alternatives
        - [TCMalloc](https://github.com/google/tcmalloc) by Google (with Bazel painpoint)
        - [mimalloc](https://github.com/microsoft/mimalloc)
            - [adopted](https://github.com/python/cpython/issues/90815) by CPython 3.12: "it is fast, thread-safe, and NUMA-aware"
        - [StarMalloc: verified memory allocator](https://dl.acm.org/doi/10.1145/3689773)
        - [phkmalloc](https://phk.freebsd.dk/sagas/phkmalloc/)
- looking for best way to read Hacker News comments
    - most TUI are not working well for reading comments, see `just prep-hkt`
    - found [Vue HN](https://vue-hn.vercel.app/) that supports dark theme, and groups comments, it works pretty well with Doubao auto-translation
    - found [Hacker News RSS](https://hnrss.github.io/) and chose the front page feed, and I have already subscribed to the best comments feed
- [Could an LLM create a full Domain-Specific Language?](https://modeling-languages.com/vibe-dsling/)
    - rather complete methodology for creating a DSL
    - code: [jcabot/funding-dsl](https://github.com/jcabot/funding-dsl)
- [The last six months in LLMs, illustrated by pelicans on bicycles](https://simonwillison.net/2025/Jun/6/six-months-in-llms/)
    - an interesting benchmark for LLMs
- #ai-safety #env
    - [\verb>>>|AI Boom Drives 150% Surge in Indirect Emissions at Major Tech Firms, UN Warns>>>](https://esgnews.com/ai-boom-drives-150-surge-in-indirect-emissions-at-major-tech-firms-un-warns/)
        - numbers for the environmental impact of LLMs
        - related
            - [AI threatens to raid the water reserves of Europe's driest regions](https://www.politico.eu/article/artificial-intelligence-threat-raid-water-reserves-europe-dry-regions/)
    - [Environmental Impacts of Artificial Intelligence](https://www.greenpeace.de/publikationen/environmental-impacts-of-artificial-intelligence)
    - [Mistral reports on the environmental impact of LLMs](https://mistral.ai/news/our-contribution-to-a-global-environmental-standard-for-ai) ([on HN](https://news.ycombinator.com/item?id=44651661))
        - [Simon Willison | Our contribution to a global environmental standard for AI](https://simonwillison.net/2025/Jul/22/mistral-environmental-standard/)
    - [Problems the AI industry is not addressing adequately](https://www.thealgorithmicbridge.com/p/im-losing-all-trust-in-the-ai-industry)
    - [Generative AI’s crippling and widespread failure to induce robust models of the world](https://garymarcus.substack.com/p/generative-ais-crippling-and-widespread)
- [Type-based vs Value-based Reflection](https://brevzin.github.io/c++/2025/06/09/reflection-ts/)
    - value-based (C++26)
        - "while we have new syntax for getting into (`^^e`) and out of (`[: e :]`) the value domain, once you’re in the value domain — it’s nice to just stay there"
        - "C++26 reflection does bring with it new syntax and a bunch of new semantics. But the benefit is that a lot of metaprogramming starts to look more like regular programming. There is a lot less syntax in the implementation side of things. "
    - type-based (Reflection TS published in March, 2020)
    - wondering the Zig equivalent
    - [Discover C++26’s compile-time reflection](https://lemire.me/blog/2025/06/22/c26-will-include-compile-time-reflection-why-should-you-care/)
    - [C++26 Reflections adventures and compile-time UML](https://www.reachablecode.com/2025/07/31/c26-reflections-adventures-compile-time-uml/)
- [Reflections on Sudoku, Or the Impossibility of Systematizing Thought](https://rjp.io/blog/2025-06-07-reflections-on-sudoku)
    - limitation of TDD
        - tests don't fix the underlying issue of "knowing what to do"
    - alternative approach by Peter Norvig
        - analyzing the high-level problem and then breaking down the data structures and outlining the solution in the course of ~20 lines of code
- found [A Lightweight Merge Queue using GitHub Actions](https://sketch.dev/blog/lightweight-merge-queue)
- [Rumour: Google intends to discontinue the Android Open Source Project](https://www.osnews.com/story/142553/rumour-google-intends-to-discontinue-the-android-open-source-project/)
- [A tale of two spacetimes](https://robwilson1.wordpress.com/2025/06/12/a-tale-of-two-spacetimes/)
- [In case of emergency, break glass](https://morrick.me/archives/10048)
- skimmed [Patterns for Modeling Overlapping Variant Data in Rust](https://mcmah309.github.io/posts/patterns-for-modeling-overlapping-variant-data-in-rust)
- [What I talk about when I talk about IRs](https://bernsteinbear.com/blog/irs/?utm_source=rss)
}}

\subtree[2025-06-12]{\mdnote{2025-06-12}{\tags{#cg #compiler #diagram #formal #game #optimization #os #proof #render #rust}
- wrote [[uts-016K]] ([on reddit](https://www.reddit.com/r/Zig/comments/1lb2vq8/trying_zigs_selfhosted_x86_backend_on_apple/))
- #lean
    - [Premise Selection for a Lean Hammer](https://arxiv.org/abs/2506.07477)
        - the paper behind [LeanHammer](https://github.com/JOSHCLUNE/LeanHammer)
    - [Lean Copilot: Large Language Models as Copilots for Theorem Proving in Lean](https://neus-2025.github.io/files/papers/paper_33.pdf)
    - [Trinity: an autoformalization system for verified superintelligence](https://www.morph.so/blog/trinity)
    - [Mathesis: Towards Formal Theorem Proving from Natural Languages](https://arxiv.org/abs/2506.07047)
    - watched [Mr. Mario Carneiro | Lean Meta-theory: The Proofs behind the Proofs](https://www.youtube.com/live/YtbfIjgzNDI)
- [Rewriting SymCrypt in Rust to modernize Microsoft’s cryptographic library](https://www.microsoft.com/en-us/research/blog/rewriting-symcrypt-in-rust-to-modernize-microsofts-cryptographic-library/)
    - used [Aeneas, a Verification Framework for Rust](https://github.com/AeneasVerif/aeneas) that supports F*, Coq, HOL4 and Lean
        - the team also built
            - [Charon](https://github.com/AeneasVerif/charon) to extract information from rustc internals for semantic analysis thus verification
            - [Eurydice, a Rust-to-C compiler](https://github.com/AeneasVerif/eurydice/) to provide a backwards-compatibility story as the verification ecosystem gradually transitions to Rust
    - used [Revizor - a fuzzer to search for microarchitectural leaks in CPUs](https://github.com/microsoft/sca-fuzzer)
        - analyze binary code for specific compilers and platforms
        - find side channel vulnerabilities caused by timing leaks or speculative execution
        - which aren't visible in the source code
        - for today’s CPUs, every new optimization may open a new side channel, which renders constant-time programming insufficient
- found [Lightweight Diagramming for Lightweight Formal Methods](https://blog.brownplt.org/2025/06/09/copeanddrag.html)
    - formal methods help users define, explore, verify, and diagnose specifications for complex systems incrementally
    - [Forge: A Tool and Language for Teaching Formal Methods](https://forge-fm.org/)
        - similar to [Alloy 6](https://alloytools.org/)
        - uses [Sterling visualizer](https://sterling-js.github.io/)
    - [Cope and Drag (CnD)](https://github.com/sidprasad/copeanddrag)
        - embedded in an open-source visualizer for Forge
        - focuses on encoding the spatial intuitions implicit in communicating the model
            - constraining spatial layout (such as positioning child nodes below their parents in a binary tree)
            - grouping elements (like clustering related components in a software architecture)
            - directing drawing style (for instance, coloring nodes in a red-black tree based on their color)
- #debugger
    - [strace tips for better debugging](https://rrampage.github.io/2025/06/13/strace-tips-for-better-debugging/)
    - [Demystifying Debuggers](https://www.rfleury.com/p/demystifying-debuggers-part-1-a-busy) (a series)
    - [Linus on Why Debuggers Are Actually Bad For Developers](https://lwn.net/2000/0914/a/lt-debugger.php3)
    - found [Building a Debugger: Write a Native x64 Debugger From Scratch](https://nostarch.com/building-a-debugger)
- #raku
    - [Raku's "core"](https://gist.github.com/raiph/849a4a9d8875542fb86df2b2eda89296)
    - [Raku's FAQ](https://docs.raku.org/language/faq#Metaquestions_and_advocacy)
    - [RakuAST: a foundation for Raku macros](https://jnthn.net/papers/2020-cic-rakuast.pdf)
    - [Raku in y minutes](https://learnxinyminutes.com/raku/)
- [Readings shared June 10, 2025](https://jaalonso.github.io/vestigium/posts/2025/06/11-readings_shared_06-10-25/)
- realized that [Pocoo](https://www.pocoo.org/) is behind Sphinx, Jinja, Pygments etc.
- found [Verse Language](https://dev.epicgames.com/documentation/en-us/fortnite/verse-language-reference), a new scripting language for Fortnite by Epic
}}

\subtree[2025-06-11]{\mdnote{2025-06-11}{\tags{#agent #os #render #tui #typst #web #zig}
- [My Unfiltered Take on the AI Coding Agent Landscape](https://xxchan.me/ai/2025/06/10/ai-coding-en.html)
    - found and tried [amp](https://ampcode.com/)
        - love their [Frequently Ignored Feedback](https://ampcode.com/fif) but disagree with some of them
        - it gives me an addictive experience, but it's quite costly and the price model is not very transparent
    - found [YouWare](https://www.youware.com/) and would love to try more
- [Zig-style generics are not well-suited for most languages (2022)](https://typesanitizer.com/blog/zig-generics.html)
- [Ratatui - Are We Embedded Yet? (#2)](https://jslazak.com/are-we-embedded-yet-2/)
    - learn about [Mousefood](https://github.com/j-g00da/mousefood), a [embedded-graphics](https://crates.io/crates/embedded-graphics) backend for [Ratatui](https://crates.io/crates/ratatui)
- found [Quarkdown - Markdown with superpowers](https://quarkdown.com/)
    - interesting but it's a little late to the party now that we have pandoc and quarto
    - the syntax and scripting looks good
    - its PDF output is based on rendering web pages, a big no-no for me, as I need LaTeX-level professional typesetting like Typst has
- #css
    - [Partial Keyframes](https://www.joshwcomeau.com/animation/partial-keyframes/)
        - neat CSS animation trick
    - [More Frontend Web Tricks](https://kaiwenwang.com/writing/more-frontend-web-tricks)
    - [Color Everything in CSS](https://css-tricks.com/color-everything-in-css/)
    - [Printing the web: making webpages look good on paper](https://piccalil.li/blog/printing-the-web-making-webpages-look-good-on-paper/)
    - [HUG CSS, how I approach CSS architecture](https://gomakethings.com/hug-css-how-i-approach-css-architecture/)
    - [What Does `playsinline` Mean in Web Video? | CSS-Tricks](https://css-tricks.com/what-does-playsinline-mean-in-web-video/)
}}

\subtree[2025-06-10]{\mdnote{2025-06-10}{\tags{#agent #compiler #diagram #formal #llvm #makefile #news #optimization #rust #sec}
- [Lightweight Diagramming for Lightweight Formal Methods](https://blog.brownplt.org/2025/06/09/copeanddrag.html)
- #perf
    - [Why doesn’t Rust care more about compiler performance?](https://kobzol.github.io/rust/rustc/2025/06/09/why-doesnt-rust-care-more-about-compiler-performance.html)
    - [One Law to Rule All Code Optimizations](https://blog.codingconfessions.com/p/one-law-to-rule-all-code-optimizations)
    - [Simulating Time With Square-Root Space](https://people.csail.mit.edu/rrw/time-vs-space.pdf)
    - [Is Rust faster than C?](https://steveklabnik.com/writing/is-rust-faster-than-c/)
    - [Revisiting Knuth’s “Premature Optimization” Paper](https://probablydance.com/2025/06/19/revisiting-knuths-premature-optimization-paper/)
- #os
    - [Asterinas: A Linux ABI-compatible, Rust-based framekernel OS](https://asterinas.github.io/2025/06/04/kernel-memory-safety-mission-accomplished.html)
        - written in Rust
        - framekernel: the performance of a monolithic kernel and the security of a microkernel
        - [OSTD](https://crates.io/crates/ostd), an OS framework, so that [a Hello World kernel in 100 lines of safe Rust](https://asterinas.github.io/book/ostd/a-100-line-kernel.html)
        - TCB (Trusted Computing Base) is the minimal unsafe code required to build a kernel in safe Rust
            - ~15K LOC, 14% of the kernel codebase, comparable to verified microkernels like seL4 (~10K LoC)
        - rich OS features
        - aims to verify unsafe code with [Verus](https://github.com/verus-lang/verus)
        - uses model checking with Converos to uncover hard-to-find concurrency bugs
        - see also [Asterinas: a new Linux-compatible kernel project](https://lwn.net/SubscriberLink/1022920/ad60263cd13c8a13/)
    - [Starina - A modern general-purpose microkernel OS](https://starina.dev/)
        - from [Building Linux kernel on macOS natively](https://seiya.me/blog/building-linux-on-macos-natively) ([on HN](https://news.ycombinator.com/item?id=44453371))
            - [Clang Built Linux](https://clangbuiltlinux.github.io/) effort helped to build Linux kernel with clang + LLVM instead of GCC + GNU
            - it seems to work and is simple enough, I should try it sometimes
    - [Munal OS: A graphical experimental OS with WASM sandboxing](https://github.com/Askannz/munal-os)
        - written in Rust
        - embeds wasmi
        - no virtual address space as userspace is inside WASM sandbox
        - only VirtIO so it runs only in an VM
        - has links to OS dev resources
    - [Talos: a container optimized Linux distro](https://www.talos.dev/), which is declarative, immutable, secure
        - minimal: consists of only a handful of binaries and shared libraries: just enough to run containerd and [a small set of system services](https://www.talos.dev/v1.10/learn-more/components/)
            - written in Go
        - no SSH and console access, fully controlled by API via gRPC
        - [Which Kubernetes is the Smallest? Examining Talos Linux, K3s, K0s, and More](https://www.siderolabs.com/blog/which-kubernetes-is-the-smallest/)
            - Talos has the minimal footprint
    - [The high-level OS challenge](https://ochagavia.nl/blog/the-high-level-os-challenge/)
    - [A DOS-like hobby OS written in Rust and x86 assembly](https://github.com/krustowski/rou2exOS)
        - RoureXOS rewritten in Rust
    - [Tilck: A Tiny Linux-Compatible Kernel](https://github.com/vvaltchev/tilck) ([on HN](https://news.ycombinator.com/item?id=44578510))
- [Makefile.md - Possibly Use(ful|less) Polyglot Synthesis of Makefile and Markdown](https://zoo.dev/blog/polyglot-makefile-markdown)
- comments on [Qwen3 embedding models](https://huggingface.co/Qwen/Qwen3-Embedding-0.6B-GGUF)
- #prolog
    - from [Readings shared June 9, 2025](https://jaalonso.github.io/vestigium/posts/2025/06/09-readings_shared_06-09-25/)
    - [Teaching and learning mathematics with Prolog](https://arxiv.org/abs/2108.09893)
    - [Exploring Topological Spaces with Prolog: A Practical Approach Using “Mathematics with Prolog”](https://medium.com/@kenichisasagawa/exploring-topological-spaces-with-prolog-a-practical-approach-using-mathematics-with-prolog-b5806bb8b98f)
}}

\subtree[2025-06-09]{\mdnote{2025-06-09}{\tags{#agent #datafusion #docker #duckdb #elixir #formal #harbor #idea #json #lemmy}
- #selfhost
    - [Ditching HAProxy (in my homelab)](https://arch.dog/bark/ditching-haproxy)
        - found [Ran out of infrastructure titles](https://arch.dog/bark/2025-03-30-infrastructure) from the author
            - [backrest](https://github.com/garethgeorge/backrest)
                - for using `restic` to manage backup [repos](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html) and plans
                - tested that `restore` and `mount` work, as well as encryption and compression
                    - see also [Running Veracrypt in Docker](\verb>>>|https://ooe.ooo/posts/%E5%9C%A8docker%E4%B8%AD%E8%BF%90%E8%A1%8Cveracrypt/>>>)
                        - `--privileged`, `-m=nokernelcrypto`, locale etc.
                - supports monitoring via [Healthchecks](https://healthchecks.io/) if backup jobs don't "check in"
                - a sec review: [restic cryptography](https://words.filippo.io/restic-cryptography/)
            - [MetalLB, a load-balancer implementation for bare metal Kubernetes clusters](https://metallb.io/)
            - `Talos`, moved to [[2025-06-10]]
            - [Unbound: a powerful validating, recursive, caching DNS resolver](https://www.unbound.net/)
                - could be used [for home network](https://unbound.docs.nlnetlabs.nl/en/latest/use-cases/home-resolver.html)
            - [Salt](https://saltproject.io/) with [its GUI](https://github.com/erwindon/SaltGUI/)
                - is similar to Ansible, in the sense you use YAML to specify a state, but has a differening architecture, opting for a master/minion setup rather than Ansible's agentless SSH connections to each node
            - [Apt-Cacher NG](https://www.unix-ag.uni-kl.de/~bloch/acng/) for caching apt packages
            - [Harbor](https://goharbor.io/) for caching container images
            - [Headscale](https://github.com/juanfont/headscale): self-hosted implementation of the Tailscale control server
            - [Pocket ID](https://pocket-id.org/) for authenticate users with their passkeys
- #fediverse
    -[Two Approaches to Solving the “Quiet Fediverse” Problem: Conversation Backfilling Mechanisms](https://hackers.pub/@hongminhee/2025/quiet-fediverse-two-approaches/en)
    - [The fediverse, explained](https://www.theverge.com/24063290/fediverse-explained-activitypub-social-media-open-protocol)
        - [Lemmy](https://join-lemmy.org/)
        - [Pixelfed](https://pixelfed.org/)
        - [BookWyrm](https://bookwyrm.social/)
        - [PeerTube](https://joinpeertube.org/)
    - [Pleroma](https://pleroma.social/): a lightweight federated social networking server powered by Elixir and PostgreSQL
        - from [What Is Pleroma?](https://blog.soykaf.com/post/what-is-pleroma/)
    - [From Fediverse to Creating Personal Digital Space with Memos](https://dev.charizard.page/en/posts/from-fediverse-to-build-my-own-digital-space/)
        - [Single-user Mastodon Instance is a Bad Idea](https://medium.com/@erinc/single-user-mastodon-instance-is-a-bad-idea-61cfaa62856a)
    - [jakeg -> notes -> fediverse](https://jakegines.in/notes/fediverse)
    - [ActivityPods: Personal data spaces powered with ActivityPub](https://activitypods.org/)
    - tried matrix again and found a good TUI: [iamb](https://iamb.chat/)
    - [Threads is adding Fediverse content to social feeds](https://www.theverge.com/news/688267/threads-fediverse-feed-search)
- wish to test x86 on ARM Mac
    - due to [Zig's self-hosted x86 backend is now default in Debug mode](https://ziglang.org/devlog/2025/?unique/#2025-06-08)
    - found [Intel-on-ARM and ARM-on-Intel](https://lima-vm.io/docs/config/multi-arch/) with lima
    - [container: tool for creating and running Linux containers using lightweight virtual machines on a Mac](https://github.com/apple/container)
- [AI at Amazon: a case study of brittleness](https://surfingcomplexity.blog/2025/06/08/ai-at-amazon-a-case-study-of-brittleness/)
    - that's how things got stuck in a big org, or at least slowed down enought to suffocate innovation
        - Decompensation: a service fall over after receiving a spike in external requests, mostly due to hierarchical decision-making
        - Working at cross-purposes: introduced an almost Darwinian flavor to org dynamics where teams scrambled to get their work done to avoid getting reorged and subsumed into a competing team
        - Getting stuck in outdated behaviors: had to constantly justify our existence and massage our projects with metrics that could be seen as more customer-facing
- [Thank You, DataFusion: Queries in Rust, Without the Pain](http://pierrezemb.fr/posts/thank-you-datafusion/)
    - SQL as a library, not a service
    - own your storage, your execution model, your schema, your optimizer
    - offers [SQL] and [Dataframe] APIs, excellent performance, built-in support for CSV, Parquet, JSON, and Avro
    - paper: [Apache Arrow DataFusion: A Fast, Embeddable, Modular Analytic Query Engine](https://dl.acm.org/doi/10.1145/3626246.3653368)
    - should take a deep look into DuckDB
- found [Black Hat Zig: Zig for offensive security.](https://www.reddit.com/r/Zig/comments/1l6tbph/black_hat_zig_zig_for_offensive_security/)
- [Training a Rust 1.5B Coder LM with Reinforcement Learning (GRPO) | Oxen.ai](https://ghost.oxen.ai/training-a-rust-1-5b-coder-lm-with-reinforcement-learning-grpo/)
}}

\subtree[2025-06-08]{\mdnote{2025-06-08}{\tags{#agent #news #optimization #os #rust #sec #simd #web #zig}
- [Vanishing zeroes for geometric algebra in Rust](https://dotat.at/@/2020-12-06-vanishing-zeroes-for-geometric-algebra-in-rust.html)
- [A plan for SIMD](https://linebender.org/blog/a-plan-for-simd/)
    - learn about [pulp](https://github.com/sarah-quinones/pulp) and [check its usage in faer](https://deepwiki.com/search/is-faer-only-using-pulp-for-si_877456ee-d5c0-4462-bf78-be43779cb07c)
- [Using Zig to Unit Test a C Application](https://mtlynch.io/notes/zig-unit-test-c/)
    - learn about `[*c]const u8`, `?[*:0]u8`, `.ptr`, `std.mem.span`, `allocator.dupeZ` etc.
- [Zig: First Impressions](https://deplet.ing/zig-first-impressions/)
- [Optimizations with Zig](https://alloc.dev/2025/06/07/zig_optimization)
    - learn about `align(64)`, `noalias`
- [Too Many Open Files](https://mattrighetti.com/2025/06/04/too-many-files-open.html)
- [A masochist's guide to web development](https://sebastiano.tronto.net/blog/2025-06-06-webdev/)
    - found [Nissy: A Rubik's cube solver and FMC assistant](https://nissy.tronto.net/)
- [Field Notes From Shipping Real Code With Claude](https://diwank.space/field-notes-from-shipping-real-code-with-claude)
    - great practice for `CLAUDE.md`, [AGENTS.md](https://github.com/julep-ai/julep/blob/main/AGENTS.md)
    - TODO: I should actually start working on my [CONVENTIONS.md](https://aider.chat/docs/usage/conventions.html)
    - related:
        - [I Read All Of Cloudflare's Claude-Generated Commits](https://www.maxemitchell.com/writings/i-read-all-of-cloudflares-claude-generated-commits/)
        - [MCP vs API](https://glama.ai/blog/2025-06-06-mcp-vs-api)
        - [How I program with Agents](https://crawshaw.io/blog/programming-with-agents)
        - [LLMs are cheap](https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/)
        - [The Gap Through Which We Praise the Machine](https://ferd.ca/the-gap-through-which-we-praise-the-machine.html)
        - [Why agents are bad pair programmers](https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/)
        - [Apple exposes Foundation Models API and... no new Siri](https://news.smol.ai/issues/25-06-09-apple-letdown/)
        - [A tale of two Claudes](https://steveklabnik.com/writing/a-tale-of-two-claudes/)
        - [Agentic Coding Recommendations](https://lucumr.pocoo.org/2025/6/12/agentic-coding/)
- [The Illusion of Thinking: Understanding the Strengths and Limitations of Reasoning Models via the Lens of Problem Complexity](https://machinelearning.apple.com/research/illusion-of-thinking)
    - accuracy progressively declines as problem complexity increases until reaching complete collapse (zero accuracy) beyond a modelspecific complexity threshold
    - [a rebuttal on X](https://x.com/giffmana/status/1931801836052189191) has some good discussion
        - for the puzzle Tower of Hannoi with too many disks, the collapse of accuracy is due to output token limit, and the models won't even try to reason with large number of moves, only explains the overall approach
        - using solution length as a proxy for task difficulty is flawed, e.g. ToH has a long output but low algorithmic complexity: it’s deterministic with no real branching
        - the paper's observations (collapse, token underuse, overthinking) [still seem to be solid](https://x.com/maw501/status/1932023882912825716)
    - [Seven replies to the viral Apple reasoning paper and why they fall short](https://garymarcus.substack.com/p/seven-replies-to-the-viral-apple)
        - [Simon Willison’s quotes and comments](https://simonwillison.net/2025/Jun/15/viral-apple-reasoning-paper/#atom-everything)
    - [Why Claude's Comment Paper Is a Poor Rebuttal](https://victoramartinez.com/posts/why-claudes-comment-paper-is-a-poor-rebuttal/)
- #blogging
    - [Thrive in obscurity](https://www.jeetmehta.com/posts/thrive-in-obscurity)
    - [is blogging romantic?](https://blog.avas.space/is-blogging-romantic/)
    - [Why Comment Sections suck - re:I want to comment on your blog post](https://kami.bearblog.dev/why-comment-sections-suck-rei-want-to-comment-on-your-blog-post/)
- [Interactive Guide: Mastering Rate Limiting](https://blog.sagyamthapa.com.np/interactive-guide-to-rate-limiting)
}}

\subtree[2025-06-07]{\mdnote{2025-06-07}{\tags{#git #os #sqlite}
- [Simplifying and Isolating Failure-Inducing Input (Delta Debugging)](https://www.cs.purdue.edu/homes/xyzhang/fall07/Papers/delta-debugging.pdf)
    - found [Perses: Syntax-Directed Program Reduction](https://github.com/uw-pluverse/perses)
    - found [WDD: Weighted Delta Debugging](https://arxiv.org/abs/2411.19410)
- found [git-remote-sqlite: Single-file Git repos that can replicate with Litestream](https://github.com/chrislloyd/git-remote-sqlite)
}}

\subtree[2025-06-06]{\mdnote{2025-06-06}{\tags{#agent #apl #clojure #compiler #dspy #formal #fuzzing #interop #news #optimization}
- investigating DSPy (Demonstrate-Search-Predict)
    - [Pipelines & Prompt Optimization with DSPy](https://www.dbreunig.com/2024/12/12/pipelines-prompt-optimization-with-dspy.html)
    - found [MLflow DSPy Flavor](https://mlflow.org/docs/latest/llms/dspy/index.html)
    - SIMBA (Stochastic Introspective Mini-Batch Ascent)
        - proceeds in a sequence of mini-batches seeking to make incremental improvements to the prompt instructions or few-shot examples
        - [\verb>>>|Advanced Tool Use: using SIMBA to improve a "Multi-Hop Tool Use" agent from 35% accuracy to 60%>>>](https://dspy.ai/tutorials/tool_use/)
            - in [RL for Multi-Hop Research](https://dspy.ai/tutorials/rl_multihop/), RL method is compared with SIMBA
        - [Correcting Bias in LLMs with DSPy](https://askrally.com/article/correcting-bias-in-llms-with-dspy)
        - Grok has difficulty figuring out the corresponding paper, [even with Deep Research](https://x.com/i/grok/share/ijirKbHUZsEJT8VG1xDl6YWBc)
    - related
        - found [TextGrad](https://textgrad.com/) ([code](https://github.com/zou-group/textgrad), [notebook](https://colab.research.google.com/github/zou-group/textgrad/blob/main/examples/notebooks/Tutorial-Test-Time-Loss-for-Code.ipynb))
        - found [Zenbase](https://zenbase.ai/#code-examples)
        - found [Easy Dataset: Custom Prompts](https://docs.easy-dataset.com/ed/en/advanced/markdown)
            - i.e. I can use extra system prompt to generate Q&A pairs then use them to finetune an LM or optimize via DSPy to answer questions without such prompts
- [The next phase of jank's C++ interop](https://jank-lang.org/blog/2025-06-06-next-phase-of-interop/)
    - found [compiler-research/CppInterOp: A Clang-based C++ Interoperability Library](https://github.com/compiler-research/CppInterOp)
        - [cppyy](https://cppyy.readthedocs.io/en/latest/) ([code](https://github.com/wlav/cppyy))
    - [jank is C++](https://jank-lang.org/blog/2025-07-11-jank-is-cpp/) ([on HN](https://news.ycombinator.com/item?id=44534787))
- [Sharing everything I could understand about gradient noise](https://blog.pkh.me/p/42-sharing-everything-i-could-understand-about-gradient-noise.html)
- [Small Programs and Languages](https://ratfactor.com/cards/pl-small)
- [APL tutorial](https://scharenbroch.dev/blog/apl-tutorial/)
- [John Carlos Baez on the shape of the Oort cloud](https://mathstodon.xyz/@johncarlosbaez/114636740505216155)
    - paper: [A Spiral Structure in the Inner Oort Cloud](https://iopscience.iop.org/article/10.3847/1538-4357/adbf9b)
- found [Jepsen](https://jepsen.io/), a framework for distributed systems verification, with fault injection, written in Clojure
    - [Fuzzer Blind Spots (Meet Jepsen!)](https://tigerbeetle.com/blog/2025-06-06-fuzzer-blind-spots-meet-jepsen/)
    - [Jepsen: TigerBeetle 0.16.11](https://jepsen.io/analyses/tigerbeetle-0.16.11)
    - [The unreasonable effectiveness of fuzzing for porting programs](https://rjp.io/blog/2025-06-17-unreasonable-effectiveness-of-fuzzing) ([on HN](https://news.ycombinator.com/item?id=44311241)) ([on lobste.rs](https://lobste.rs/s/zgoytt))
}}

\subtree[2025-06-06-2]{\mdnote{2025-06-06}{\tags{#apl #game #lean #shader #tla #vulkan #web #zig}
- [AI is a gamechanger for TLA+ users](https://buttondown.com/hillelwayne/archive/ai-is-a-gamechanger-for-tla-users/)
- [In which I have Opinions about parsing and grammars](https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/parsing/)
- [Experimenting with no-build Web Applications](https://andregarzia.com/2025/06/experimenting-with-no-build-web-applications.html)
- [Zigar 0.14.1: stream integration and more](https://www.reddit.com/r/Zig/comments/1l3hr3p/zigar_0141_stream_integration_and_more/)
- [The Lean FRO Year 2 Roadmap](https://lean-fro.org/about/roadmap-y2/)
- found [No More Shading Languages: Compiling C++ to Vulkan Shaders](https://xol.io/random/vcc-paper.pdf)
- found [APLearn: machine learning library](https://github.com/BobMcDear/aplearn)
- [I Think I’m Done Thinking About genAI For Now](https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html)
}}

\subtree[2025-06-05]{\mdnote{2025-06-05}{\tags{#agent #compiler #debugger #jujutsu #lean #os #rust #sec #software #tla}
- [Physicality: the new age of UI](https://www.lux.camera/physicality-the-new-age-of-ui/)
    - love it
- [jujutsu on tangled](https://blog.tangled.sh/stacking)
    - it's really powerful to edit a changeset to keep commits/PRs clean and focused, no more frustrating rebasing
    - maybe I'll really start using `jj`
    - related: [Example of Splitting a PR](https://www.jefftk.com/p/example-of-splitting-a-pr)
- [Why I Think Lean Software Development is Wrong](https://patricia.no/2025/05/30/why_lean_software_dev_is_wrong.html)
- [How Compiler Explorer Works in 2025](https://xania.org/202506/how-compiler-explorer-works)
    - learn about [nsjail](https://nsjail.dev/), a lightweight process isolation tool that’s basically a paranoid security guard for processes
- vibe coding
    - [Claude Code is My Computer](https://steipete.me/posts/2025/claude-code-is-my-computer)
    - [Vibe coding case study: ScubaDuck](https://blog.ezyang.com/2025/06/vibe-coding-case-study-scubaduck/)
- [Deep learning gets the glory, deep fact checking gets ignored](https://rachel.fast.ai/posts/2025-06-04-enzyme-ml-fails/index.html)
- [Conformance Checking at MongoDB: Testing That Our Code Matches Our TLA+ Specs | MongoDB Blog](https://www.mongodb.com/blog/post/engineering/conformance-checking-at-mongodb-testing-our-code-matches-our-tla-specs)
- [NLWeb: Protocol for AI-Powered Website Search](https://glama.ai/blog/2025-06-01-what-is-nlweb)
    - we really nead a lot of AI-facing protocols, MCP, A2A, NLWeb, `llm.txt` etc.
- [Tests should not contain logic](https://blog.snork.dev/posts/tests-should-not-contain-logic.html)
- [Script Debugger Retired](https://latenightsw.com/script-debugger-retired/), IDE for AppleScript
}}

\subtree[2025-06-02]{\mdnote{2025-06-02}{\tags{#benchmark #compiler #json #news #os #rust #web #z3}
- [Fast character classification with z3](https://lemire.me/blog/2025/06/01/easy-vectorized-classification-with-z3/)
- structured error
    - [Designing Error Types in Rust Libraries](https://d34dl0ck.me/rust-bites-designing-error-types-in-rust-libraries/index.html)
    - [Structured errors in Go](https://southcla.ws/structured-errors-in-go)
    - [Why Use Structured Errors in Rust Applications?](https://home.expurple.me/posts/why-use-structured-errors-in-rust-applications/)
- minimalizing Rust
    - [Why am I writing a Rust compiler in C?](https://notgull.net/announcing-dozer/)
    - [How to deal with Rust dependencies](https://notgull.net/rust-dependencies/)
    - [Reducing Cargo target directory size with -Zno-embed-metadata](https://kobzol.github.io/rust/rustc/2025/06/02/reduce-cargo-target-dir-size-with-z-no-embed-metadata.html)
- found [benchmark-gui](https://github.com/skarupke/benchmark-gui)
    - from [I’m Open-Sourcing my Custom Benchmark GUI](https://probablydance.com/2025/05/31/im-open-sourcing-my-custom-benchmark-gui/)
- [The DuckLake Manifesto: SQL as a Lakehouse Format](https://ducklake.select/manifesto/)
- [Progressive JSON](https://overreacted.io/progressive-json/)
- [johncarlosbaez's post on mathstodon.xyz](https://mathstodon.xyz/@johncarlosbaez/114607489890551731) about [a viXra branch devoted to AI-assisted papers](https://ai.vixra.org/)
- learning speed solving Rubik's cube, see [[uts-016J]]
- [Devstral](https://mistral.ai/news/devstral)
    - see also [devstral-small-2505-mlx](https://lmstudio.ai/model/devstral-small-2505-mlx)
- #aria
    - [What I Wish Someone Told Me When I Was Getting into ARIA](https://www.smashingmagazine.com/2025/06/what-i-wish-someone-told-me-aria/) ([on HN](https://news.ycombinator.com/item?id=44299930))
    - [Selfish reasons for building accessible UIs](https://nolanlawson.com/2025/06/16/selfish-reasons-for-building-accessible-uis/)
    - [WebAIM: Up and Coming ARIA](https://webaim.org/blog/up-and-coming-aria/)
        - learn about aria features and roles, it also has demo
}}

\subtree[2025-06-01]{\mdnote{2025-06-01}{\tags{#git #lean #neovim #os #sec #tla #zig}
- [Tools built on tree-sitter's concrete syntax trees](https://www.scannedinavian.com/tools-built-on-tree-sitters-concrete-syntax-trees.html)
    - found [ssr.nvim](https://github.com/cshuaimin/ssr.nvim), Structural search and replace for Neovim, seems more convenient than `ast-grep`
    - should take a look at
        - [GritQL](https://github.com/honeycombio/gritql)
        - [srgn](https://crates.io/crates/srgn/)
    - found [mergiraf](https://codeberg.org/mergiraf/mergiraf), a syntax-aware git merge driver
    - reviewed [Quint](https://quint-lang.org/), a modern and executable specification language, as "an updated take on TLA+"
- [My experience so far with Zig – a Go dev’s journey](https://www.reddit.com/r/Zig/comments/1l05t3u/my_experience_so_far_with_zig_a_go_devs_journey/)
    - found [backstage: an experimental implementation of an actor framework](https://github.com/Thomvanoorschot/backstage): a great example Zig project using libxev
    - found [Zignite: Cross-Platform Graphics Engine](https://github.com/Thomvanoorschot/zignite)
- [tao's post on mathstodon.xyz](https://mathstodon.xyz/@tao/114603605315214772)
    - Tao launched a "Lean companion" to his real analysis undergraduate textbook "Analysis I" at [teorth/analysis](https://github.com/teorth/analysis)
    - blog post: [A Lean companion to “Analysis I”](https://terrytao.wordpress.com/2025/05/31/a-lean-companion-to-analysis-i/)
- [Half Spectre, Full Exploit: Hardening Rowhammer Attacks with Half-Spectre Gadgets](https://download.vusec.net/papers/halfspectre_sp25.pdf)
    - ProbeHammer, the first crash-free end-to-end Rowhammer exploit that does not rely on templating or massaging
    - monitor a controlled victim’s physical memory activity at the cache line granularity
- found [prose: Serve your blog using SSH](https://pico.sh/prose)
- learn 2 new formulas for Rubik's cube, see [[uts-016I]] and [[uts-016H]]
}}

}

\subtree[2025-05]{
\title{May, 2025}

% \iframe{uts-016E.html}

% tried [Ente Photos v1](https://ente.io/blog/v1)

\subtree[2025-05-31]{\mdnote{2025-05-31}{\tags{#agent #dspy #lean #os #rust}
- found [C++ to Rust Phrasebook](https://cel.cs.brown.edu/crp/title-page.html)
- [Simpler backoff](https://commaok.xyz/post/simple-backoff/)
- [Consider Knitting](http://journal.stuffwithstuff.com/2025/05/30/consider-knitting/)
- [Lean-auto: An Interface between Lean 4 and Automated Theorem Provers](https://arxiv.org/abs/2505.14929)
    - found [Zipperposition](https://sneeuwballen.github.io/zipperposition/)
- found [Programming Beyond Practices](https://notes.skillstopractice.com/pbp.pdf)
- investigate DSPy
    - found [Agenspy (Agentic DSPy)](https://github.com/SuperagenticAI/Agenspy)
    - found [attachments](https://github.com/MaximeRivest/attachments)
    - found [Code Generation with AlphaCodium: From Prompt Engineering to Flow Engineering](https://arxiv.org/abs/2401.08500) ([code](https://github.com/Codium-ai/AlphaCodium))
        - [S*: Test Time Scaling for Code Generation](https://arxiv.org/abs/2502.14382)
        - [Advances and Challenges in Foundation Agents: From Brain-Inspired Intelligence to Evolutionary, Collaborative, and Safe Systems](https://arxiv.org/abs/2504.01990)
}}

\subtree[2025-05-30]{\mdnote{2025-05-30}{\tags{#build #formal #rust}
- found [Grog: the mono-repo build tool for the grug-brained dev](https://grog.build/)
    - then the configuration language [Pkl: Configuration that is Programmable, Scalable, and Safe](https://pkl-lang.org/)
    - [The Grug Brained Developer (2022)](https://grugbrain.dev/)
- [Rust doesn't actually follow its Golden Rule (when it comes to async functions)](https://lukasatkinson.de/2023/rust-no-golden-rule/)
- [Parse, don’t validate](https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/)
    - [Names are not type safety (2020)](https://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/)
- [When was the last time you broke production and how?](https://lobste.rs/s/ytefme/when_was_last_time_you_broke_production)
}}

\subtree[2025-05-29]{\mdnote{2025-05-29}{- [Why Your AI Coding Assistant Keeps Doing It Wrong, and How To Fix It](https://blog.thepete.net/blog/2025/05/22/why-your-ai-coding-assistant-keeps-doing-it-wrong-and-how-to-fix-it/)
- [workflows for ai coding](https://anniecherkaev.com/the-times-they-are-ai-changing)
    - interesting take on human attention span
- [Compiling a Neural Net to C for a 1,744× speedup](https://slightknack.dev/blog/difflogic/)
}}

\subtree[2025-05-28]{\mdnote{2025-05-28}{\tags{#agent #codegen #gpu #os #proof #render #web}
- [WebGPU Fluid Simulations: High Performance & Real-Time Rendering](https://tympanus.net/codrops/2025/02/26/webgpu-fluid-simulations-high-performance-real-time-rendering/)
- learn about [uzi](https://github.com/devflowinc/uzi)
    - from [LLM Codegen go Brrr – Parallelization with Git Worktrees and Tmux](https://www.skeptrune.com/posts/git-worktrees-agents-and-tmux/)
- [A thought on JavaScript "proof of work" anti-scraper systems](https://utcc.utoronto.ca/~cks/space/blog/web/JavaScriptScraperObstacles)
- [What a Difference a Faster Hash Makes](https://nickdrozd.github.io/2025/05/27/faster-hash.html)
}}

\subtree[2025-05-27]{\mdnote{2025-05-27}{- found [Effekt Language: Home](https://effekt-lang.org/)
- [The Three Kinds of Money](https://principles.page/three-money-types/)
    - summarized with doubao, then inspired me to work on mermaid and markmap integration
- [The two types of open source](https://filiph.net/text/two-types-of-open-source.html)
}}

\subtree[2025-05-26]{\mdnote{2025-05-26}{\tags{#bevy #exif #formal #id3 #news #os #physics #racket #rust #software}
- found [F2](https://f2.freshman.tech/guide/how-variables-work), a bulk renaming tool that supports metadata such as EXIF, ID3 and more
- Idiomatic Rust
    - [Don't Worry About Lifetimes](https://corrode.dev/blog/lifetimes/)
    - [Don't Unwrap Options: There Are Better Ways](https://corrode.dev/blog/rust-option-handling-best-practices/)
    - [Thinking in Expressions](https://corrode.dev/blog/expressions/)
- found [DumPy: NumPy except it's OK if you're dum](https://dynomight.net/dumpy/)
    - found [einx](https://github.com/fferflo/einx)
        - einx notation is inspired by einops, but introduces several novel concepts such as `[]`-bracket notation and full composability that allow using it as a universal language for tensor operations
- [Against Curry-Howard Mysticism](https://liamoc.net/forest/loc-000S/)
- found [Reinforcement Learning: An Overview](https://arxiv.org/abs/2412.05265)
- found [Modeling Nonlinear Dynamics from Equations and Data — with Applications to Solids, Fluids, and Controls](https://epubs.siam.org/doi/10.1137/1.9781611978353)
- found [The Ultimate Guide to Fine-Tuning LLMs from Basics to Breakthroughs: An Exhaustive Review of Technologies, Research, Best Practices, Applied Research Challenges and Opportunities](https://arxiv.org/abs/2408.13296)
- #game
    - found [Pong Wars](https://github.com/vnglst/pong-wars)
        - maybe it's fun to rewrite it in Zig, or with Bevy, possibly in 3D
    - [Car Physics for Games](\verb>>>|https://www.asawicki.info/Mirror/Car%20Physics%20for%20Games/Car%20Physics%20for%20Games.html>>>)
    - [Games That Love To Take Things Away From You](https://brainbaking.com/post/2025/06/games-that-love-to-take-things-away-from-you/)
    - [hammurabi: A Rust recreation of the classic 1968 BASIC game](https://github.com/stjepangolemac/hammurabi)
- [I made a font](https://blog.chay.dev/i-made-a-font/)
- [Someone rewrote my Zig CLI in Rust? Let's compare!](https://www.reddit.com/r/Zig/comments/1kv1ozw/someone_rewrote_my_zig_cli_in_rust_lets_compare/)
- found [Transformer Copilot: Learning from The Mistake Log in LLM Fine-tuning](https://huggingface.co/papers/2505.16270)
    - I've long wished for this kind of meaningful learning, instead of just fine-tuning weights according to loss
- thoughts on software
    - [Design Pressure: The Invisible Hand That Shapes Your Code](https://hynek.me/talks/design-pressure/)
    - [Systematic design of multi-join GROUP BY queries](https://kb.databasedesignbook.com/posts/systematic-design-of-join-queries/)
    - [Reinvent the Wheel](https://endler.dev/2025/reinvent-the-wheel/)
    - [How to Guarantee Your Red Team Will Fail](https://0xda.de/garden/guarantee-red-team-failure/)
    - [On File Formats](https://solhsa.com/oldernews2025.html#ON-FILE-FORMATS)
    - [What Works (and Doesn't) Selling Formal Methods](https://www.galois.com/articles/what-works-and-doesnt-selling-formal-methods)
}}

\subtree[2025-05-25]{\mdnote{2025-05-25}{\tags{#formal #haskell #lean #ocaml #os #rust #zig}
- [Having your compile-time cake and eating it too](https://0x44.xyz/blog/comptime-1)
    - [Hindley-Milner (HM)](\verb>>>|https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system>>>), the most popular human-friendly type system, used in Swift, Rust, Scala, Haskell, OCaml etc.
    - proposed four big features to replace pretty much all Rust macros, including derive ones, while keeping Rust's type system, and achieving (most of) Zig's comptime features
        - `@` or `@=`
        - `Abstract`
        - `TypeInfo` and `Field`
        - `Code` and `parse`
- [CAPTCHAs don't work any more for ticket sellers](https://behind.pretix.eu/2025/05/23/captchas-are-over/)
- [Concepts vs type traits](https://akrzemi1.wordpress.com/2025/05/24/concepts-vs-type-traits/)
- [tachy0n: The last 0day jailbreak](https://blog.siguza.net/tachy0n/)
- found [Domain Theory Lecture Notes](https://liamoc.net/forest/dt-001Y/index.xml)
- generate and read the following DeepWiki:
    - [ymndoseijin/zilliam](https://deepwiki.com/ymndoseijin/zilliam)
    - [ShabbirHasan1/unsynn](https://deepwiki.com/ShabbirHasan1/unsynn)
    - [AstatineAi/ocaml-forester](https://deepwiki.com/AstatineAi/ocaml-forester)
    - [pygae/galgebra](https://deepwiki.com/pygae/galgebra)
    - [utensil/forest](https://deepwiki.com/utensil/forest)
- use GenSpark to generate [Follow-up Research after Formalizing Geometric Algebra in Lean](https://www.genspark.ai/slides?project_id=c36784da-1876-4ec6-bf09-fb166b647a1a)
- [Does gratitude increase happiness?](https://dynomight.net/gratitude/)
}}

\subtree[2025-05-24]{\mdnote{2025-05-24}{\tags{#agent #apl #cg #compiler #git #haskell #lean #os #rust #software}
- [Anthropic’s ‘System Card’ for Claude 4 (Opus and Sonnet)](https://www-cdn.anthropic.com/4263b940cabb546aa0e3283f35b686f4f3b2ff47.pdf)
    - particularly fun reading
        - 4.1.1.1 Continuations of self-exfiltration attempts
        - 4.1.1.2 Opportunistic blackmail
        - 4.1.1.3 Self-exfiltration under extreme circumstances
        - 4.1.3 Excessive compliance with harmful system-prompt instructions
            - "mistakenly omitted the only finetuning dataset that included harmful system prompts"
- [Forgotten APL Influences (2016)](https://pok.acm.org/meetings/foils/McGrew18paper.pdf)
- learn about [Glean](https://glean.software/)
    - a system for collecting, deriving and querying facts about source code
    - from [Indexing Hackage: Glean vs. hiedb](https://simonmar.github.io/posts/2025-05-22-Glean-Haskell.html)
- [Pain in the dots](https://matthew-brett.github.io/pydagogue/pain_in_dots.html)
    - different semantics of two and three dot notation for `git log` and `git diff`
- [Make Your Phone Grayscale](https://blog.alexbeals.com/posts/make-your-phone-grayscale)
    - I've already started the practice, combining it with all-day nightshift mode
- [The GCC compiler backend can now fully bootstrap the Rust compiler](https://old.reddit.com/r/rust/comments/1ktph3c/media_the_gcc_compiler_backend_can_now_fully)
}}

\subtree[2025-05-23]{
\mdnote{2025-05-23}{\tags{#ocaml #os #rust #tla}
- [Why I love OCaml](https://mccd.space/posts/ocaml-the-worlds-best/)
- [How to Get Your Research Paper Accepted](https://maxwellforbes.com/posts/how-to-get-a-paper-accepted)
- [Fork Union: Beyond OpenMP in C++ and Rust?](https://ashvardanian.com/posts/beyond-openmp-in-cpp-rust/)
- #lang
    - [Wren](https://wren.io/), a small, fast, class-based concurrent scripting language
        - "Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax."
        - [Talon](https://github.com/jossephus/talon): Write Raylib programs in Wren
    - [Picat](https://picat-lang.org/), a rule-based language, in which predicates, functions, and actors are defined with pattern-matching rules
        - from [Finding hard 24 puzzles with planner programming](https://buttondown.com/hillelwayne/archive/finding-hard-24-puzzles-with-planner-programming/)
            - "the only language that I know has a built-in planner module"
    - [Dark](https://darklang.com/), a serverless backend language
        - [Darklang Goes Open Source](https://blog.darklang.com/darklang-goes-open-source/)
        - [Goodbye Dark Inc. - Hello Darklang Inc](https://blog.darklang.com/goodbye-dark-inc-welcome-darklang-inc/)
    - [Roto](https://github.com/NLnetLabs/roto)
        - from [Introducing Roto: A Compiled Scripting Language for Rust](https://blog.nlnetlabs.nl/introducing-roto-a-compiled-scripting-language-for-rust/)
    - [Janet](https://janet-lang.org/) #lisp
        - a more batteries-included Lua, with Lisp/Clojure-inspired syntax
        - see [The smallest embeddable scripting language, part 1](https://log.schemescape.com/posts/static-site-generators/smallest-scripting-language.html)
        - [PEGs in a PEG](https://github.com/kragen/peg-bootstrap/blob/master/peg.md)
        - [JNJ: J iN Janet](https://sr.ht/~subsetpark/JNJ/)
        - [Bagatto](https://bagatto.co/), a static site generator written in Janet
    - [goal](https://codeberg.org/anaseto/goal), embeddable scripting array language
    - [lamber](https://github.com/aartaka/lamber), functional scripting language compiling to Lambda Calculus
- found many papers, see [[uts-016E]]
}
}

\subtree[2025-05-22]{\mdnote{2025-05-22}{\tags{#context #formal #idea #os}
- [Adventures in Symbolic Algebra with Model Context Protocol](https://www.stephendiehl.com/posts/computer_algebra_mcp/)
    - maybe I should create MCP for GAlgebra
    - followup: [Interfacing MCP with Combinatorial, Convex, and SMT Solvers](https://www.stephendiehl.com/posts/smt_and_mcp_solvers/)
- [Transpiler is a meaningless word (2023)](https://people.csail.mit.edu/rachit/post/transpiler/)
    - maybe that means I should give up on the idea that I could build a Forester transpiler
- found [Obsidian Bases](https://mas.to/@obsidian/114546538858212821)
}}

\subtree[2025-05-21]{\mdnote{2025-05-21}{\tags{#os #sqlite}
- [If composers were hackers](https://mmapped.blog/posts/18-if-composers-were-hackers)
- found [Litestream: Revamped](https://fly.io/blog/litestream-revamped/), making SQLite apps reliably recoverable from object storage
- [The Ingredients of a Productive Monorepo](https://blog.swgillespie.me/posts/monorepo-ingredients/)
}}

\subtree[2025-05-20]{\mdnote{2025-05-20}{\tags{#gpu #news #os #web}
- [Not causal chains, but interactions and adaptations](https://surfingcomplexity.blog/2025/05/19/not-causal-chains-but-interactions-and-adaptations/)
    - RCA(root cause analysis) model v.s. RE(resilience engineering) model, for incidents
    - related
        - [The same incident never happens twice, but the patterns recur over and over](https://surfingcomplexity.blog/2025/05/26/the-same-incident-never-happens-twice-but-the-patterns-recur-over-and-over/)
        - [Quick takes on the GCP public incident write-up](https://surfingcomplexity.blog/2025/06/14/quick-takes-on-the-gcp-public-incident-write-up/)
            - [“What went well” is more than just a pat on the back](https://surfingcomplexity.blog/2025/06/14/what-went-well-is-more-than-just-a-pat-on-the-back/)
            - [Behind the scenes: Redpanda Cloud’s response to the GCP outage](https://www.redpanda.com/blog/gcp-outage-june-redpanda-cloud) ([on HN](https://news.ycombinator.com/item?id=44338089)) ([on lobste.rs](https://lobste.rs/s/kyxrxf))
        - [Implicit is better than explicit](https://sophiabits.com/blog/implicit-is-better-than-explicit)
- [Open Source Can't Coordinate](https://matklad.github.io/2025/05/20/open-source-cant-coordinate.html)
- [Particle Life simulation in browser using WebGPU](https://lisyarus.github.io/blog/posts/particle-life-simulation-in-browser-using-webgpu.html)
}}

\subtree[2025-05-19]{\mdnote{2025-05-19}{\tags{#agent #docker #lemmy #mastodon #os}
- [Agent Recursion](https://choly.ca/post/agent-recursion/)
- [Semgrep: AutoFixes using LLMs](https://choly.ca/post/semgrep-autofix-llm/)
    - found a few alternatives to `semgrep`, e.g. [ast-grep](https://ast-grep.github.io/)
- [Adding Mastodon Comments to your Blog](https://beej.us/blog/data/mastodon-comments/)
    - [Mastodon as comment system for your static blog](https://danielpecos.com/2022/12/25/mastodon-as-comment-system-for-your-static-blog/)
    - [My blog now has Lemmy comments](https://blog.coship.fyi/blog/lemmy-comments/)
    - learn about [Glasp: Highlight the Internet & Build Your AI Clone](https://glasp.co/)
- [async/await versus the Calloop Model](https://notgull.net/calloop/)
- [Mimalloc Cigarette: Losing one week of my life catching a memory leak](https://pwy.io/posts/mimalloc-cigarette/)
- [Ditching Obsidian and building my own](https://amberwilliams.io/blogs/building-my-own-pkms)
- found [Qwen3 Technical Report](https://huggingface.co/papers/2505.09388)
- found [TestDesiderata](https://testdesiderata.com/)
- found [macOS VMs in a Docker Container](https://github.com/trycua/cua/tree/main/libs/lumier)
}}

\subtree[2025-05-18]{\mdnote{2025-05-18}{\tags{#apl #compiler #game #gpu #os #physics #quantum #shader #zig}
- found [Algorithms by Jeff Erickson (2019)](https://jeffe.cs.illinois.edu/teaching/algorithms)
- \citef{van2025comparing}
    - learned that APL can run on GPU via [Dyalog](https://www.dyalog.com/), the paper even discussed a flash attention implementation
    - [BQN](https://razetime.github.io/learnxinyminutes-docs/bqn) [doesn't](https://mlochbaum.github.io/BQN/implementation/codfns.html) seem to run on GPU
    - it might be interesting to use [arrayfire](https://arrayfire.com/) [C API](https://arrayfire.org/docs/gettingstarted.htm#gettingstarted_api_usage), even [on Mac](https://arrayfire.org/docs/using_on_osx.htm)
    - prefer [tilelang](https://github.com/tile-ai/tilelang) to DaCe
- found [A JavaScript library for building parsers, interpreters, compilers, and more](https://ohmjs.org/)
- [Layers All The Way Down: The Untold Story of Shader Compilation](https://moonside.games/posts/layers-all-the-way-down/)
    - introduces the motivation behind [MojoShader](https://github.com/icculus/mojoshader), from Direct3D HLSL bytecode or assembly source to other shader languages
- found [Mystical](https://suberic.net/~dmm/projects/mystical/README.html), a programming language that resembled magical circles
- [Bare Metal Zig (2023)](https://austinhanson.com/bare-metal-ziglang/)
- [Google Scholar is manipulatable](https://arxiv.org/abs/2402.04607)
- found [Path Integrals in Quantum Mechanics, Statistics, Polymer Physics, and Financial Markets by Hagen Kleinert](https://hagenkleinert.de/documents/pi/HagenKleinert_PathIntegrals.pdf)
}}

\subtree[2025-05-17]{\mdnote{2025-05-17}{\tags{#elixir #game #ocaml #os #rust #software #web #zig}
- [Parallel Scaling Law for Language Models](https://huggingface.co/papers/2505.10475)
- #lang
    - [The Language That Never Was](https://blog.celes42.com/the_language_that_never_was.html)
        - [Leaving Rust gamedev after 3 years](https://loglog.games/blog/leaving-rust-gamedev/)
        - [Mun](https://mun-lang.org/)
        - [jank](https://jank-lang.org/)
        - [The Little Book of Rust Macros](https://veykril.github.io/tlborm/)
        - [MonoGame](https://monogame.net/)
- #rust/error
    - [Using unwrap() in Rust is Okay](https://burntsushi.net/unwrap/)
        - [anyhow](https://docs.rs/anyhow) for applications and [thiserror](https://docs.rs/thiserror) for libraries
    - [On Error Handling in Rust](https://felix-knorr.net/posts/2025-06-29-rust-error-handling.html)
        - [error_set](https://docs.rs/error_set), inspired by Zig's [error set](https://ziglang.org/documentation/master/#Error-Set-Type)
        - [snafu](https://docs.rs/snafu)
- found [GNU Parallel Examples](https://www.gnu.org/software/parallel/parallel_examples.html)
- found [Lua for Elixir](https://davelucia.com/blog/lua-elixir)
- found [OCaml Web Development: Essential Tools and Libraries in 2025](https://tarides.com/blog/2025-05-15-ocaml-web-development-essential-tools-and-libraries-in-2025/)
- found [Teal: a statically-typed dialect of Lua](https://teal-language.org/), a statically-typed dialect of Lua
}}

\subtree[2025-05-16]{\mdnote{2025-05-16}{\tags{#formal #game #news #os #rust #tla #zig}
- [I don’t like NumPy](https://dynomight.net/numpy/)
    - [Writing a better code with pytorch and einops](https://einops.rocks/pytorch-examples.html)
    - [Einops and Einsum Summarized](https://pratik-doshi-99.github.io/posts/einops/)
- looking for Zig way to implement eiops
    - [Interesting (mis-)use cases for comptime](https://www.reddit.com/r/Zig/comments/124shks/interesting_misuse_cases_for_comptime/)
        - [zig-infix-parser](https://github.com/markisus/zig-infix-parser)
    - [Zig Comptime is amazing](https://ziggit.dev/t/zig-comptime-is-amazing/832)
        - [ZEIN](https://github.com/andrewCodeDev/ZEIN), Zig-based implementation of general-rank tensors
        - [Functional Programming in Zig](https://gitlab.com/zigurust/fp)
        - [What is Zig's Comptime?](https://kristoff.it/blog/what-is-zig-comptime/)
        - [comath: comptime math](https://github.com/InKryption/comath), used by [zilliam](https://github.com/ymndoseijin/zilliam)
        - [alg](https://github.com/Laremere/alg), Algebra for Zig
        - [mecha](https://github.com/Hejsil/mecha), A parser combinator library for Zig
            - from [Zig, Parser Combinators - and Why They're Awesome](https://devlog.hexops.com/2021/zig-parser-combinators-and-why-theyre-awesome/)
        - [parcom](https://github.com/dokwork/parcom), see also [this blog post](https://zig.news/vladimir_popov/yet-another-parser-combinators-library-ic2)
    - [einops](https://github.com/VasanthakumarV/einops) in Rust, with only backend `tch`
    - [Einsums](https://github.com/Einsums/Einsums) and [einops-cpp](https://github.com/dorpxam/einops-cpp) are in C++
- [The current state of TLA⁺ development](https://ahelwer.ca/post/2025-05-15-tla-dev-status/)
    - found [Spectacle](https://informal.systems/) and [tlafmt](https://github.com/domodwyer/tlafmt)
- [10 Years of Stable Rust: An Infrastructure Story](https://rustfoundation.org/media/10-years-of-stable-rust-an-infrastructure-story/)
    - [formal methods projects built on Rust](https://rust-formal-methods.github.io/)
- [Beyond 'Aha!': Toward Systematic Meta-Abilities Alignment in Large Reasoning Models](https://huggingface.co/papers/2505.10554)
- [Declaring a friendship to self](https://www.sandordargo.com/blog/2025/05/14/friend-self)
- [Internet Artifacts](https://neal.fun/internet-artifacts/irc/)
    - discovered [Helicopter game](https://neal.fun/internet-artifacts/helicopter-game/)
}}

\subtree[2025-05-15]{\mdnote{2025-05-15}{\tags{#formal #forth #os #tla #zig}
- [Introducing oniux: Kernel-level Tor isolation for any Linux app](https://blog.torproject.org/introducing-oniux-tor-isolation-using-linux-namespaces/)
    - [code](https://gitlab.torproject.org/tpo/core/oniux)
    - found [smoltcp](https://github.com/smoltcp-rs/smoltcp)
- [The cryptography behind passkeys](https://blog.trailofbits.com/2025/05/14/the-cryptography-behind-passkeys/)
- [How fast is CeTZ-Plot?](https://huijzer.xyz/posts/12)
- [ZJIT has been merged into Ruby](https://railsatscale.com/2025-05-14-merge-zjit/)
    - Instead of compiling YARV bytecode directly to the low-level IR (LIR), it uses an high-level SSA-based intermediate representation (HIR)
        - In the bytecode, which is tersely encoded, jumps are offsets, some control-flow is implicit, and most dataflow is via the stack.
        - By contrast, HIR looks more like a graph. Jumps have pointers to their targets and there’s no stack: instructions that use data have pointers directly to the instructions that create the data.
- found [Warteschlangensimulator](https://a-herzog.github.io/Warteschlangensimulator/), a event-driven, stochastic simulator for queueing systems
- found [kowk](https://kwok.sigs.k8s.io/), a ~100k-pod k8s cluster simulator
- [Data is code](https://blog.information-superhighway.net/data-is-code), about philosophy behind Forth
    - also [What the hell is Forth?](https://blog.information-superhighway.net/what-the-hell-is-forth)
- found [Insights into DeepSeek-V3: Scaling Challenges and Reflections on Hardware for AI Architectures](https://huggingface.co/papers/2505.09343)
- found [Marigold: Affordable Adaptation of Diffusion-Based Image Generators for Image Analysis](https://huggingface.co/papers/2505.09358)
    - [Marigold Computer Vision](https://huggingface.co/docs/diffusers/using-diffusers/marigold_usage)
- [Zig App Release and Updates via Github ⚡](https://dbushell.com/2025/03/18/zig-app-release-and-updates-via-github/)
}}

\subtree[2025-05-14]{\mdnote{2025-05-14}{\tags{#agent #ebpf #os #physics #rust #software #tui #web #yaml}
- try [genspark](https://www.genspark.ai/agents?id=0cb4084a-b9ba-4755-8f00-029ddf087680)
    - impressive result
    - one deep research per day for free
- [Read the Code, Not the Profile](https://reasonablypolymorphic.com/blog/read-the-code/)
    - Dramatic percentages in software is just linear improvement
- [Writing that changed how I think about PL](https://bernsteinbear.com/blog/pl-writing/)
- [Experiment on your code freely with Git worktree](https://opensource.com/article/21/4/git-worktree)
- [Lock-Free Rust: How to Build a Rollercoaster While It’s on Fire](https://yeet.cx/blog/lock-free-rust/)
- found
    - [Spall: a code profiler that runs in your browser](https://gravitymoth.com/spall/spall-web.html)
    - TUI for search & replace
        - [scooter](https://terminaltrove.com/scooter/): Interactive find and replace in the terminal
        - [serpl](https://github.com/yassinebridi/serpl): A simple terminal UI for search and replace, ala VS Code.
        - scooter wins as it supports filtering files, both support regex and replace preview
    - [Avian Physics 0.3](https://joonaa.dev/blog/08/avian-0-3)
    - [Makepad 1.0 : Rust UI Framework](https://makepad.nl/)
- checked out [YS — YAML Done Wisely](https://yamlscript.org/)
    - I wish to use it as a template engine, but the scripting syntax is not delicious
- [Two months in Servo: CSS nesting, Shadow DOM, Clipboard API, and more](https://servo.org/blog/2025/05/09/this-month-in-servo/)
    - Servo is still very actively growing
- [Misadventures in DTrace: how to debug the macOS kernel](https://jade.fyi/blog/misadventures-in-dtrace/)
    - I need to compare more with eBPF and DTrace
    - found [DTrace book](https://illumos.org/books/dtrace/preface.html)
}}

\subtree[2025-05-12]{\mdnote{2025-05-12}{\tags{#apl #formal #os #proof #rust #sec #tla #web}
- [Are We Serious About Using TLA+ For Statistical Properties?](https://emptysqua.re/blog/are-we-serious-about-statistical-properties-tlaplus/)
    - found [FizzBee](https://fizzbee.io/) for behavior correctness verification and performance modelling, based on simulation
    - I've wished for a tool like this for a long time
    - see also [Modular verification of MongoDB Transactions using TLA+](http://muratbuffalo.blogspot.com/2025/05/modular-verification-of-mongodb.html)
- [Flattening Rust's Learning Curve](https://corrode.dev/blog/flattening-rusts-learning-curve/)
    - [The best open source project for someone might not be yours, and that's OK](https://blog.petdance.com/2018/01/02/the-best-open-source-project-for-someone-might-not-be-yours-and-thats-ok/)
- [A review of documentation in the Rust ecosystem](https://www.harudagondi.space/blog/rust-documentation-ecosystem-review/)
    - found [Blessed.rs](https://blessed.rs/crates): Recommended Crate Directory
- [Secure by Design: Google’s Perspective on Memory Safety (2024)](https://storage.googleapis.com/gweb-research2023-media/pubtools/7665.pdf)
- [Microservices Are a Tax Your Startup Probably Can’t Afford](https://nexo.sh/posts/microservices-for-startups/)
- [Private Internet (2024)](https://kevincox.ca/2024/08/16/private-internet/)
- [A tool to verify estimates, II: a flexible proof assistant](https://terrytao.wordpress.com/2025/05/09/a-tool-to-verify-estimates-ii-a-flexible-proof-assistant/)
}}

\subtree[2025-05-09]{\mdnote{2025-05-09}{\tags{#os #rust #zig}
- [Memory Safety Features in Zig](https://gencmurat.com/en/posts/memory-safety-features-in-zig/)
    - very well summarized, with great examples
- [Reservoir Sampling](https://samwho.dev/reservoir-sampling/)
- [You can use C-Reduce for any language](https://bernsteinbear.com/blog/creduce/)
- [Rust Dependencies scare Me](https://lobste.rs/s/j3nhhc)
    - a comment reminds me of [Build It Yourself](https://lucumr.pocoo.org/2025/1/24/build-it-yourself/)
- [What's in an e-graph?](https://bernsteinbear.com/blog/whats-in-an-egraph/)
- [A catalog of ways to generate SSA](https://bernsteinbear.com/blog/ssa/)
}}

\subtree[2025-05-08]{\mdnote{2025-05-08}{\tags{#agent #gpu #idea #interop #os #software #web #zig}
- \citef{zhang2024transformers}
    - insightful, and well summarized related work
- trying to figure out a way to let AI agent to read all papers citing an paper, and write a summary of the follow-up research
- [The magic of software; or, what makes a good engineer also makes a good engineering organization](https://moxie.org/2024/09/23/a-good-engineer.html)
    -  "Engineers are most capable and most effective when abstraction layers serve as shorthand for an understanding of what it is doing on your behalf, rather than a black box"
    - "start with deep understanding as the basis for innovation – cultivating the curiosity to look inside the black boxes"
    -  "The magic of both software and software organizations comes from those moments where insight into how something works sparks entirely new ideas about what it could become"
    - related: [Reinvent the Wheel](https://endler.dev/2025/reinvent-the-wheel/)
- [Implement your language twice](https://futhark-lang.org/blog/2025-05-07-implement-your-language-twice.html)
    - [Futhark](https://futhark-lang.org/) is a statically typed, data-parallel, and purely functional array language with AoT compilation to CUDA, OpenCL, HIP, and WebGPU (WIP)
    - also [Comparing the performance of OpenCL, CUDA, and HIP](https://futhark-lang.org/blog/2024-07-17-opencl-cuda-hip.html)
- [Objective-C interop with Zig?](https://www.reddit.com/r/Zig/comments/1khb8yo/objectivec_interop_with_zig/)
- got zig to work inside lima with minimal setup
}}

\subtree[2025-05-07]{\mdnote{2025-05-07}{\tags{#os #rust #tui #web #zig}
- [Zig’s Low-Level Safety Features Leave Rust in the Dust](https://www.reddit.com/r/Zig/comments/1kgk07m/zigs_lowlevel_safety_features_leave_rust_in_the/)
- [Zig defer Patterns](https://matklad.github.io/2024/03/21/defer-patterns.html)
- [Glossary Web Component](https://dbushell.com/2025/05/07/glossary-web-component/)
- [Recreating an iOS Animation with GLSL (interactive tutorial)](https://nmattia.com/posts/2025-05-07-airpods-hearing-test-animation/)
- found [Argo CD - Declarative Continuous Delivery for k8s](https://github.com/argoproj/argo-cd)
- found [bash/POSIX-compatible shell implemented in Rust](https://github.com/reubeno/brush)
- found [nnd: A TUI alternative to gdb](https://github.com/al13n321/nnd)
}}

\subtree[2025-05-07-2]{\mdnote{2025-05-07}{\tags{#ebpf #os #rust #tui #zig}
- [Zig’s Low-Level Safety Features Leave Rust in the Dust](https://www.reddit.com/r/Zig/comments/1kgk07m/zigs_lowlevel_safety_features_leave_rust_in_the/)
- found [Parallel, Concurrent and Distributed Programming](https://ilyasergey.net/YSC4231/) in Scala
- found [nnd: A TUI alternative to gdb](https://github.com/al13n321/nnd)
- found [A part of the fundamental group of an n-dimensional beanA](https://tikz.org/bean/)
- [Building a regex engine](https://sh4dy.com/2025/05/01/regex_engine/) in C++
- wondering about chaos engineering in Zig with eBPF #ebpf
    - learn more about [zbpf](https://github.com/tw4452852/zbpf)
    - maybe it's easiest to use [lima](https://lima-vm.io/) to test eBPF
    - found [Pixie](https://px.dev/) when reading [Debugging Production: eBPF Chaos](https://www.infoq.com/articles/debugging-production-ebpf-chaos/)
    - [Introducing Minderbinder](https://blog.scottgerring.com/posts/introducing-minderbinder/) which is in Go
    - [Implementing fast TCP fingerprinting with eBPF](https://halb.it/posts/ebpf-fingerprinting-2/)
        - using Cilium in Go
    - [ebpf series - Unnamed Memories](https://h0x0er.github.io/blog/category/ebpf/)
    - [Introducing TCP-in-UDP solution (eBPF)](https://blog.mptcp.dev/2025/07/14/TCP-in-UDP.html)
    - [Go Allocation Probe](https://www.scattered-thoughts.net/writing/go-allocation-probe/) ([on HN](https://news.ycombinator.com/item?id=44647572))
- found [alternative open source front-ends for popular internet platforms](https://github.com/mendel5/alternative-front-ends)
}}

\subtree[2025-05-06]{
\mdnote{2025-05-06}{\tags{#agent #benchmark #blogging #context #formal #game #gpu #news #optimization #os}
- LM
    - survey papers
        - [A Survey on Inference Engines for Large Language Models: Perspectives on Optimization and Efficiency](https://huggingface.co/papers/2505.01658)
        - [Low-Precision Training of Large Language Models: Methods, Challenges, and Opportunities](https://huggingface.co/papers/2505.01043)
            - sadly, NormalFloat used by QLoRA is excluded from the paper, as it is "specifically designed for pretrained fixed parameters, which only participate in the forward inference stage during training."
    - improvements on reasoning
        - [Think on your Feet: Adaptive Thinking via Reinforcement Learning for Social Agents](https://huggingface.co/papers/2505.02156)
            - the model is trained to switch between different complexity level of thinking mode based on context for an optimal balance between correct answer and reasoning length
            - the thinking modes are inspired by Hierarchical Cognitive Control Theory (HCCT)
        - [RM-R1: Reward Modeling as Reasoning](https://huggingface.co/papers/2505.02387)
            - provides good insight into reward modeling and how each training stage boosts the model's performance
    - other
        - [Unlearning Sensitive Information in Multimodal LLMs: Benchmark and Attack-Defense Evaluation](https://huggingface.co/papers/2505.01456)
            - I'm still interested in unlearning and model editing
- [Benchmarking Crimes Meet Formal Verification](https://microkerneldude.org/2025/04/27/benchmarking-crimes-meet-formal-verification/)
    - learn about [Systems Benchmarking Crimes](https://gernot-heiser.org/benchmarking-crimes.html)
- #zig
    - [Implementing a Struct of Arrays](https://brevzin.github.io/c++/2025/05/02/soa/)
        - Zig has easy-to-use support of SoA via [MultiArrayList](https://zig.news/kristoff/struct-of-arrays-soa-in-zig-easy-in-userland-40m0)
        - learn about [Data-Oriented Design](https://dataorienteddesign.com/dodbook/)
        - I can't help but feel that new features of C++ such as reflection is really becoming syntax cancer
    - [Reflecting on a year of Gamedev in Zig](https://bgthompson.codeberg.page/blog/one-year-zig-gamedev-reflections/)
    - [Jai, the game programming contender](https://bitshifters.cc/2025/04/28/jai.html)
- bringing data to AI, not the other way around
    - [The Data Surrender Trap: How Enterprises Are Losing Control in the AI Gold Rush—and the Simple Fix](https://www.softinio.com/post/the-data-surrender-trap/)
- lifestyle
    - [Protect The Habit](https://justinmath.com/protect-the-habit/)
    - skimmed [blogging in isolation](https://blog.avas.space/blogging-in-isolation/)
- skimmed [modern-latex: A short guide to LaTeX that avoids legacy cruft](https://github.com/mrkline/modern-latex)
- [The Beauty Of Having A Pi-hole](https://den.dev/blog/pihole/)
    - own your own DNS
- [An appeal to Apple from Anukari regarding GPU frequency scaling](https://anukari.com/blog/devlog/an-appeal-to-apple)
    - I'm amazed that the author is using GPU to simulate physics for realtime audio
}
}

\subtree[2025-05-04]{\mdnote{2025-05-04}{\tags{#git #interop #lean #os}
- found [pyonji](https://git.sr.ht/~emersion/pyonji), a tool to support sr.ht style e-mail patches
- [Git: programmatic staging](https://choly.ca/post/git-programmatic-staging/)
    - and learn about `grepdiff`, unfortunately, it's not available on Mac
    - `git add -p` is also acceptable for a small number of hunks
- [MathML with Pandoc](https://leancrew.com/all-this/2025/05/mathml-with-pandoc/)
- [Starting on seamless C++ interop in jank](https://jank-lang.org/blog/2025-05-02-starting-seamless-interop/)
- found [Anemll: Artificial Neural Engine Machine Learning Library](https://github.com/Anemll/Anemll)
}}

\subtree[2025-05-02]{
\mdnote{2025-05-02}{\tags{#formal #os #web}
- \citef{ren2025deepseekproverv2}
    - \citef{tie2025survey}
        - notes on LM could be based on this survey and the following papers related to r1
    - \citef{zhang2025days}
        - \citef{guo2025deepseek}
            - should revisit
    - found critics of r1/GRPO
        - \citef{liu2025understanding}
        - \citef{yue2025does}
    - \citef{wang2025kimina}
- found [A Survey of Interactive Generative Video](https://huggingface.co/papers/2504.21853)
- [Polishing your typography with line height units](https://webkit.org/blog/16831/line-height-units/)
- [Solving Sudoku with Algebraic Geometry and Computer Algebra : A C Programming Approach](https://x.com/7etsuo/status/1813482989139161344)
}
}

}

\subtree[2025-04]{
\title{April, 2025}
\subtree[2025-04-30]{\mdnote{2025-04-30}{\tags{#apl #formal #lean #os #prolog}
- found \citef{zhang2025leanabell}
- skimmed \citef{lipman2024flow}
- [APL: Comparison with Traditional Mathematics](https://aplwiki.com/wiki/Comparison_with_traditional_mathematics)
- [I use Zip Bombs to Protect my Server](https://idiallo.com/blog/zipbomb-protection)
- found [Prolog Notes](https://github.com/dtonhofer/prolog_notes)
- found [Quotes on notation design & how it affects thought](https://github.com/kai-qu/notation)
}}

\subtree[2025-04-29]{\mdnote{2025-04-29}{\tags{#agent #os #✍️}
- found [A Dependently Typed Assembly Language](https://www.cs.cmu.edu/~rwh/papers/dtal/OGI-CSE-99-008.pdf)
- [Qwen3: Think Deeper, Act Faster](https://qwenlm.github.io/blog/qwen3/)
- found [Topologies and Sheaves Appeared as Syntax and Semantics of Natural Language (2012)](http://www.pdmi.ras.ru/~prosorov/papers/Prosorov_PhML2012.pdf)
    - reveals connection between sheaf theory and linguistics
- found \citef{brody2023expressivity} [[code](https://github.com/tech-srl/layer_norm_expressivity_role)]
- found \citef{wang2023grammar}
- wrote [[uts-016B]]
}}

\subtree[2025-04-28]{\mdnote{2025-04-28}{\tags{#compiler #llvm #os #zig}
- [BitNet v2: Native 4-bit Activations with Hadamard Transformation for 1-bit LLMs](https://huggingface.co/papers/2504.18415)
- [Converting a C API to Zig with the help of comptime](https://www.reddit.com/r/Zig/comments/1k9vuni/converting_a_c_api_to_zig_with_the_help_of/)
- [How a Single Line Of Code Could Brick Your iPhone](https://rambo.codes/posts/2025-04-24-how-a-single-line-of-code-could-brick-your-iphone)
- found [Nouveau: The Rule Based Language Family](https://nouveau.community/)
    - and easily got into an infinite loop by adding a rule trying to combine a match and a box back to a matchbox
- [Technical Debt as Theory Building and Practice](https://www.usenix.org/conference/srecon25americas/presentation/lam)
- [Using HAProxy to protect me from scrapers](https://dgl.cx/2025/04/using-haproxy-to-stop-scrapers)
- [What if we embraced simulation-driven development?](https://pierrezemb.fr/posts/simulation-driven-development/)
    - [Notes about ETCD](https://pierrezemb.fr/posts/notes-about-etcd/), there are some war stories
    - [Notes about Raft's paper](https://pierrezemb.fr/posts/notes-about-raft/)
- [toycalculator, an MLIR/LLVM compiler experiment.](https://peeterjoot.com/2025/04/27/toycalculator-an-mlir-llvm-compiler-experiment/)
}}

\subtree[2025-04-27]{\mdnote{2025-04-27}{\tags{#apl #news #os #web}
- found [APL Cultivations](https://xpqz.github.io/cultivations/Intro.html)
- found [Dive into Systems (2020)](https://diveintosystems.org/)
- found [Smallweb – Your Internet Folder](https://smallweb.run/)
- found [Cognition's DeepWiki, a free encyclopedia of all GitHub repos](https://news.smol.ai/issues/25-04-25-cognition-deepwiki/)
}}

\subtree[2025-04-26]{\mdnote{2025-04-26}{\tags{#benchmark #compiler #formal}
- found [Mitata - a beautiful benchmarking tool](https://hwisnu.bearblog.dev/mitata-benchmarking-tool/)
- [Nofl: A Precise Immix](https://arxiv.org/pdf/2503.16971v1)
- [O(no) You Didn’t](https://mrshiny608.github.io/MrShiny608/optimisation/2025/04/22/OhNoYouDidnt.html)
- found [PyGraph: Robust Compiler Support for CUDA Graphs in PyTorch](https://arxiv.org/abs/2503.19779)
}}

\subtree[2025-04-25]{\mdnote{2025-04-25}{\tags{#bevy #gpu #idea #news #os #render #sec #software #tla #wasm}
- [Bevy 0.16](https://bevyengine.org/news/bevy-0-16/)
    - learn about GPU-Driven Rendering and [WESL](https://wesl-lang.dev/)
- [How I Got Hacked: A Warning about Malicious PoCs](https://chocapikk.com/posts/2025/s1nk/)
- [MCP Security: Tool Poisoning Attacks](https://invariantlabs.ai/blog/mcp-security-notification-tool-poisoning-attacks)
- [The ‘trickonometry’ of math olympiad inequalities](https://www.andreinc.net/2025/03/17/the-trickonometry-of-math-olympiad-inequalities)
    - intriguing write-up, well collected problems, insightful perspective
    - found [My list of challenging software projects some programmers should try](https://www.andreinc.net/2024/03/28/programming-projects-ideas)
- [Towards Vortex 1.0](https://spiraldb.com/post/towards-vortex-10)
    - a next-generation columnar format with self-describing layouts and WASM decoders that is 200x faster than Parquet for random access, among other goodies
}}

\subtree[2025-04-24]{\mdnote{2025-04-24}{\tags{#diagram #duckdb #gpu #idea #llvm #optimization #os #tla #wasm #✍️}
- [Abusing DuckDB-WASM by making SQL draw 3D graphics (Sort Of)](https://www.hey.earth/posts/duckdb-doom)
    - a very cool idea
    - I should learn more about modern databases
- found [Bluefish](https://bluefishjs.org/)
    - a JS diagram library with quite some potential
    - some teaser examples were added by [this commit](https://github.com/bluefishjs/bluefish/commit/c2fb70cc6e8c8c4f4d2f4a797fc2875ba66d00ba)
- \citef{popescu2025exploiting}
    - so there are actually many performance-wise well defined UBs in LLVM
- [GPU Compilation with MLIR](https://vectorfold.studio/blog/gpu-compilation)
    - found [MLIR Python Bindings](https://mlir.llvm.org/docs/Bindings/Python/)
- skimmed [Some possible roles for AI of Grothendieck topos theory](https://www.laurentlafforgue.org/Expose_Lafforgue_topos_AI_ETH_sept_2022.pdf) by Laurent Lafforgue (2022)
- made a start on improving PDF organization in and out of MarginNote
- looked for ways to manipulate iCloud files programatically
    - noticed that [`rclone` supports iCloud too](https://rclone.org/iclouddrive/)
    - but `~/Library/Mobile Documents/com~apple~CloudDocs` already works well for my purpose
}}

\subtree[2025-04-23]{\mdnote{2025-04-23}{\tags{#elixir #os #rust #zig}
- [Nine Reasons to Use OSH](https://oils.pub/osh.html)
    - it contains a POSIX-compatible shell `osh`, and an incompatible shell `ysh`
    - it's written in a subset of Python, then transpiled to C++ by [mycpp](https://github.com/oils-for-unix/oils/blob/master/mycpp/README.md) that is based on MyPy, an interesting approach
- found [codapi](https://codapi.org/) which supports sandboxes for Rust, Zig, Elixir etc.
}}

\subtree[2025-04-22]{\mdnote{2025-04-22}{- [Make Your Own Internet Presence with NetBSD and a 1 euro VPS – Part 1: Your Blog](https://it-notes.dragas.net/2025/04/22/make-your-own-internet-presence-with-netbsd-and-a-1-euro-vps-part-1-your-blog/)
    - which uses [BSSG](https://bssg.dragas.net/), a simple static site generator written in Bash
    - will settle on UTM for Mac/BSD virtualization, and Lima for Linux virtualization
    - still haven't figure out how to virtualize/emulate NetBSD with UTM, see [this issue](https://github.com/utmapp/UTM/discussions/7069)
- [My Dev Workflow: 2025](https://minami.bearblog.dev/my-dev-workflow-2025/)
    - found and started using [Loop](https://github.com/MrKai77/Loop)
}}

\subtree[2025-04-21]{
\mdnote{2025-04-21}{\tags{#context #elixir #idea #os #render #rust #web #z3 #zig}
- wish to learn more about other architectures of LMs, e.g.
    - \citef{ma2025bitnet}
    - \citef{zhao2025d1}
    - \citef{wang2025m1}
    - [RWKV7-G1](https://huggingface.co/BlinkDL/rwkv7-g1) "GooseOne" reasoning model, see \citef{peng2025rwkv}
    - ModernBERT, see \citef{warner2024smarter}
- [The State of Reinforcement Learning for LLM Reasoning: Understanding GRPO and New Insights from Reasoning Model Papers](https://magazine.sebastianraschka.com/p/the-state-of-llm-reasoning-model-training)
- [Lorenz and modular flows: a visual introduction](https://www.josleys.com/articles/ams_article/Lorenz3.htm) which is "deep, beautiful and with a taste of singularity and knot theory"
    - found [Ultra Fractal 6](https://www.ultrafractal.com/) and [POV-Ray](https://www.povray.org/)
- found [less_slow.cpp: Playing Around Less Slow Coding Practices for C++, CUDA, and Assembly Code](https://github.com/ashvardanian/less_slow.cpp)
- found [Common Expression Language](https://github.com/google/cel-spec)
- [How I use Kate Editor](https://akselmo.dev/posts/how-i-use-kate-editor/)
- watched [Implicit Surfaces (using interval arithmetic to evaluate SDFs)](https://www.youtube.com/watch?v=UxGxsGnbyJ4)
    - [PDF Slides](https://www.mattkeeter.com/research/hmc_colloquium.pdf)
    - the ideas behind [Fidget](https://github.com/mkeeter/fidget) and \citef{keeter2020massively} well explained, GOAT-level inspiring
    - should be further explored in [[ag-000G]]
    - there are also many interesting writeups in [The Prospero Challenge](https://www.mattkeeter.com/projects/prospero/)
- [Things Zig comptime Won't Do](https://matklad.github.io/2025/04/19/things-zig-comptime-wont-do.html)
- #gleam
    - [Gleam](https://gleam.run/) that has a Rust-like syntax, runs on Erlang VM, and supports compiling to JavaScript
    - [My First Impressions of Gleam](https://mtlynch.io/notes/gleam-first-impressions/)
    - [Gleam for Elixir users](https://gleam.run/cheatsheets/gleam-for-elixir-users/)
    - [Lustre](https://hexdocs.pm/lustre/index.html)
        - a web framework in Gleam
- note more about Taiji and practice more
}
}

\subtree[2025-04-19]{\mdnote{2025-04-19}{\tags{#elixir #formal #os}
- [Common shell script mistakes](https://www.pixelbeat.org/programming/shell_script_mistakes.html)
- [Four Years of Jai](https://smarimccarthy.is/posts/2024-12-02-four-years-of-jai/)
- [My journey from Ruby to Elixir: lessons learned](https://www.erlang-solutions.com/blog/my-journey-from-ruby-to-elixir-lessons-from-a-developer/)
- [Revisiting an early critique of formal verification](https://lawrencecpaulson.github.io/2025/03/14/revisiting_demillo.html)
}}

\subtree[2025-04-18]{\mdnote{2025-04-18}{\tags{#gpu #os #zig}
- found [Matrix Calculus for Machine Learning and Beyond](https://github.com/mitmath/matrixcalc)
- [Reflections on Unikernels](https://dave.recoil.org/unikernels/)
    - found [OSv](https://osv.io/)
    - revisit [Seastar](https://seastar.io/), a C++ server framework that uses a shared-nothing model
- [Stop Writing `__init__` Methods](https://blog.glyph.im/2025/04/stop-writing-init-methods.html)
    - for potential gotchas, read also [Python dataclasses, a package full of surprises](https://fohlen.github.io/posts/python-dataclasses-a-package-full-of-surprises/index.html)
- [Weird / irritating build issue with raylib](https://www.reddit.com/r/Zig/comments/1k1nrf0/weird_irritating_build_issue_with_raylib/)
    - so I should also start using the new hash format
- [Zig and GPUs](https://alichraghi.github.io/blog/zig-gpu/)
}}

\subtree[2025-04-17]{\mdnote{2025-04-17}{\tags{#agent #news #os #rust #sec #tui #zig #✍️}
- found [A practical hacker's guide to the C programming language](https://github.com/codr7/hacktical-c)
- [An Intro to DeepSeek's Distributed File System](https://maknee.github.io/blog/2025/3FS-Performance-Journal-1/)
    - my takeaway: DeepSeek's 3FS sacrifices small-file performance, POSIX compatibility, and fault tolerance (single-master risk) to maximize large-file throughput via CRAQ-based chain replication and RDMA-optimized chunk writes on 512B-sector SSDs
- [Development On Apple Silicon with UTM](https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/)
    - [cloud-init](https://cloudinit.readthedocs.io/)
    - [Windows ARM64 Download | MAS](https://massgrave.dev/windows_arm_links) #win
- [TLS Certificate Lifetimes Will Officially Reduce to 47 Days](https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days)
- found [Torque – A lightweight meta-assembler for any processor](https://benbridle.com/projects/torque.html)
- found [Unsure Calculator](https://filiph.github.io/unsure/)
- [Zigistry about to reach 300 stars on GitHub ⭐️](https://www.reddit.com/r/Zig/comments/1k0sg2s/zigistry_about_to_reach_300_stars_on_github/)
- [[AINews] OpenAI o3, o4-mini, and Codex CLI](https://buttondown.com/ainews/archive/ainews-openai-o3-o4-mini-and-codex-cli/)
    - and particularly [codex: Lightweight coding agent that runs in your terminal](https://github.com/openai/codex)
- [the lifecycle of a pull request](https://blog.tangled.sh/pulls) and tried to login to https://tangled.sh/
- learned about [`std::autodiff`](https://rustc-dev-guide.rust-lang.org/autodiff/internals.html) in Rust via `Enzyme`
- converted some of my playlist to Youtube Music and scrobble them to libre.fm
    - found also [cmus](https://cmus.github.io/), a TUI music player that plays from local files, and supports scrobbling
- wrote some more Taiji notes
}}

\subtree[2025-04-16]{\mdnote{2025-04-16}{\tags{#dspy #tla #tui #web #webgl #zig}
- [A flowing WebGL gradient, deconstructed](https://alexharri.com/blog/webgl-gradients)
- found [An Introduction to Modern CMake](https://cliutils.gitlab.io/modern-cmake/README.html)
- [JSX Over The Wire](https://overreacted.io/jsx-over-the-wire/)
- found [ax](https://github.com/ax-llm/ax), DSPy in TypeScript
- looked for HEIC libraries in C that can be used in Zig
- found [WebTUI](https://webtui.ironclad.sh/)
- found [Terminal Trove](https://terminaltrove.com/), a collection of terminal-based applications
}}

\subtree[2025-04-15]{\mdnote{2025-04-15}{\tags{#compiler #optimization #os #render #rust}
- [A 2025 Survey of Rust GUI Libraries](https://www.boringcactus.com/2025/04/13/2025-survey-of-rust-gui-libraries.html)
- [Algebraic Semantics for Machine Knitting](https://uwplse.org/2025/03/31/Algebraic-Knitting.html)
    - further reading:
        % - \citef{hofmann2024koda}
        - \citef{lin2023semantics}
- [C++20 idioms for parameter packs](https://www.scs.stanford.edu/~dm/blog/param-pack.html)
- skimmed \citef{hull2023flat}
- [Pretty State Machine Patterns in Rust](https://hoverbear.org/blog/rust-state-machine-pattern/)
- [Implementing GRPO](https://www.k-a.in/grpo-1B.html)
- found [Networking Research Resources](https://enhancedformysql.github.io/tech-explorer-hub/reading/networking/index.html)
- found [TeX.social](https://tex.social/): a feed aggregator for LaTeX-related sites, especially blogs.
- [A 2025 Survey of Rust GUI Libraries](https://www.boringcactus.com/2025/04/13/2025-survey-of-rust-gui-libraries.html)
- learn about [AerynOS](https://aerynos.com/)
- [Algebraic Semantics for Machine Knitting](https://uwplse.org/2025/03/31/Algebraic-Knitting.html)
- [C++20 idioms for parameter packs](https://www.scs.stanford.edu/~dm/blog/param-pack.html)
- [Flat origami is Turing complete](https://arxiv.org/abs/2309.07932)
- [Frontier AI Models Still Fail at Basic Physical Tasks: A Manufacturing Case Study](https://adamkarvonen.github.io/machine_learning/2025/04/13/llm-manufacturing-eval.html)
- [Procedural Foliage Rendering with L-systems and Geometry Instancing](https://jysandy.github.io/posts/procedural-trees/)
- [What the Hell Is a Target Triple?](https://mcyoung.xyz/2025/04/14/target-triples/)
- try converting some playlist to Spotify with [TuneMyMusic](https://www.tunemymusic.com/)
    - screenshot, VLM OCR, then text to playlist
    - Spotify doesn't always have the songs, even if manual search, e.g. some songs before 2017
- thinking about Graph RAG, and found [HelixDB](https://github.com/HelixDB/helix-db), a graph-vector database
}}

\subtree[2025-04-14]{\mdnote{2025-04-14}{\tags{#rust #visualization}
- [A Visual Journey Through Async Rust](https://github.com/alexpusch/rust-magic-patterns/blob/master/visual-journey-through-async-rust/Readme.md)
    - and it would be insteresting to see the visualization for `monoio`
- [Solving One Million Sudoku Puzzles per hour](https://www.miakoring.de/blog/sudoku) in Swift
}}

\subtree[2025-04-13]{\mdnote{2025-04-13}{\tags{#compiler #ebpf #elixir #lean #tui #zig}
- looking for Zig libraries for TUI, `io_uring`, eBPF, scripting, e-graph
    - the candidates are `libvaxis`, `libxev`, `zbpf`, `Cyber`, `zegg`, respectively
- found [Juniper CAS](https://github.com/MixedMatched/juniper), which is exactly my original dream for lean-ga
- found [Beaver](https://github.com/beaver-lodge/beaver): MLIR Toolkit in Elixir and Zig.
    - one relevant application is [Manx](MLIR compiler/backend for the Nx)
- [Building a high-performance database buffer pool in Zig using io_uring's new fixed-buffer mode](https://gavinray97.github.io/blog/io-uring-fixed-bufferpool-zig)
- [How io_uring and eBPF Will Revolutionize Programming in Linux](https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/)
- found [Performance Analysis and Tuning on Modern CPUs](https://github.com/dendibakh/perf-book)
}}

\subtree[2025-04-12]{\mdnote{2025-04-12}{\tags{#cg #compiler #elixir #gpu #rust #shader #software #tla}
- [Bootstrapping Understanding: An Introduction to Reverse Engineering](https://www.muppetlabs.com/~breadbox/txt/bure.html)
- [Bug in Outlook PST Password Protection (2006)](https://www.nirsoft.net/articles/pst_password_bug.html)
- [Erlang’s not about lightweight processes and message passing…](https://stevana.github.io/erlangs_not_about_lightweight_processes_and_message_passing.html)
    - further reading: \citef{armstrong2003making}
- found [Rust to C compiler - 95.9\% test pass rate, odd platforms](https://fractalfir.github.io/generated_html/cg_clr_odd_platforms.html)
- [Shadertoys ported to Rust GPU](https://rust-gpu.github.io/blog/2025/04/10/shadertoys)
- [Build a Static Site in Elixir Under 5 Minutes with Phoenix Components](https://mishka.tools/blog/build-a-static-site-in-elixir-under-5-minutes-with-phoenix-components) while looking for SSG in Elixir
}}

\subtree[2025-04-11]{\mdnote{2025-04-11}{\tags{#agent #software}
- [12-factor-agents: Principles to build LLM-powered software good enough to put in the hands of production customers](https://github.com/humanlayer/12-factor-agents)
- found [cargo-mutants: Inject bugs and see if your tests catch them](https://github.com/sourcefrog/cargo-mutants)
- found [DeepCoder: A Fully Open-Source 14B Coder at O3-mini Level](https://pretty-radio-b75.notion.site/DeepCoder-A-Fully-Open-Source-14B-Coder-at-O3-mini-Level-1cf81902c14680b3bee5eb349a512a51)
}}

\subtree[2025-04-09]{\mdnote{2025-04-09}{\tags{#elixir #os #rust}
- [Archiving URLs](https://gwern.net/archiving)
    - maybe I should use tools like [ArchiveBox](https://github.com/ArchiveBox/ArchiveBox#input-formats) to prevent link rot
- [Mistakes and cool things to do with arena allocators](https://zylinski.se/posts/dynamic-arrays-and-arenas/)
- found [shorty: a C++ library for concise lambdas](https://github.com/hanickadot/shorty)
- [Parser Combinators Beat Regexes](https://entropicthoughts.com/parser-combinators-beat-regexes)
- found [facet: Rust reflection, serialization, deserialization — know the shape of your types](https://github.com/facet-rs/facet)
    - thus found [unsynn: a minimalist rust parser library](https://github.com/ShabbirHasan1/unsynn)
- [$handle_undefined_function in Elixir/Erlang](https://yiming.dev/blog/2018/11/27/$handle-undefined-function-in-elixir-erlang/)
- found [Twee, an equational theorem prover](https://nick8325.github.io/twee/) again
    - from [Automated Equational Reasoning with Twee Pt 1.](https://www.philipzucker.com/twee/)

}}

\subtree[2025-04-08]{\mdnote{2025-04-08}{\tags{#compiler #neovim #os #render #rust}
- [Beautiful CI for Bazel](https://narang99.github.io/2025-03-22-monorepo-bazel-jenkins/)
- found [Real-Time Rendering Resources](https://www.realtimerendering.com/)
- [The Gamma Knife model of incidents (2019)](https://surfingcomplexity.blog/2019/08/25/the-gamma-knife-model-of-incidents/)
- [Thinking like a compiler: places and values in Rust](https://steveklabnik.com/writing/thinking-like-a-compiler-places-and-values-in-rust/)
- [Writing good comments: the why, not the how (2020)](https://www.jackfranklin.co.uk/blog/code-comments-why-not-how/)
- [My neovim markdown setup in 2025](https://linkarzu.com/posts/neovim/markdown-setup-2025/)
}}

\subtree[2025-04-07]{\mdnote{2025-04-07}{\tags{#✍️}
- [Model error](https://surfingcomplexity.blog/2025/04/06/model-error/)
- wrote [[uts-016A]]
}}

\subtree[2025-04-05]{\mdnote{2025-04-05}{\tags{#os #rust}
- [Atproto Ethos](https://atproto.com/articles/atproto-ethos)
- [BPF From Scratch In Rust](https://yeet.cx/blog/bpf-from-scratch-in-rust/)
- [Pitfalls of Safe Rust](https://corrode.dev/blog/pitfalls-of-safe-rust/)
}}

\subtree[2025-04-04]{\mdnote{2025-04-04}{\tags{#lean #news #os #rust #simd #web}
- [Of manners and machines](https://commaok.xyz/post/manners/)
- [Rewriting my site in vanilla web](https://leanrada.com/notes/vanilla-web-rewrite/)
    - [TAC: A new CSS methodology](https://jordanbrennan.hashnode.dev/tac-a-new-css-methodology)
    - [Blinded By the Light DOM](https://meyerweb.com/eric/thoughts/2023/11/01/blinded-by-the-light-dom/)
    - maybe I should rewrite most of my customizations to forest markup as web components
- [Vector Sets are part of Redis](http://antirez.com/news/149)
- [Towards fearless SIMD, 7 years later](https://linebender.org/blog/towards-fearless-simd/)
- [Introduction to Monoio: A High-Performance Rust Runtime](https://chesedo.me/blog/monoio-introduction/)
- found [Public mdBooks](https://mdbooks.code-maven.com/)
}}

\subtree[2025-04-03]{\mdnote{2025-04-03}{\tags{#biology #lean #rust #tui #web}
- learn about [geonum](https://github.com/mxfactorial/geonum), a ridiculously fast Rust library that supports many GA operations except for geometric product
- some portions of [On the Biology of a Large Language Model](https://transformer-circuits.pub/2025/attribution-graphs/biology.html)
    - it's a particularly inspiring article on the interpretability of LLMs
    - it's authored with [Distill Template](https://github.com/distillpub/template), see [guide](https://distill.pub/guide/)
    - similarly, found [World Models](https://worldmodels.github.io/)
- [A Year of Rust in ClickHouse](https://clickhouse.com/blog/rust)
- [AI ambivalence](https://nolanlawson.com/2025/04/02/ai-ambivalence/)
- [Minimal CSS-only blurry image placeholders](https://leanrada.com/notes/css-only-lqip/)
- found [chawan: TUI Web Browser](\verb>>>|https://sr.ht/%7Ebptato/chawan/>>>)
}}

\subtree[2025-04-02]{\mdnote{2025-04-02}{\tags{#formal #os #sec #web}
- [Stop syncing everything](https://sqlsync.dev/posts/stop-syncing-everything/), which launches [Graft](https://github.com/orbitinghail/graft), an open-source transactional storage engine optimized for lazy, partial, and strongly consistent replication—perfect for edge, offline-first, and distributed applications.
- [The Most Amusing Security Flaws I've Discovered](https://predr.ag/blog/xorry-not-sorry-most-amusing-security-flaws-ive-discovered/)
- [Foundation Models and Unix](https://vagos.github.io/blog/foundation-models-unix.html)
- [Goodbye Offpunk, Welcome XKCDpunk](https://ploum.net/2025-04-01-xkcdpunk.html)
- [Hello Quarto: Porting my Website from Hugo Apéro](https://silviacanelon.com/blog/2023-09-29-hello-quarto/)
- found [Interaction nets](https://wiki.xxiivv.com/site/interaction_nets.html)
- [Programming with an AI copilot: My perspective as a senior dev](https://mlagerberg.com/blog-ai-copilot/)
- found [Testing Distributed Systems](https://asatarin.github.io/testing-distributed-systems/)
- found
    - \citef{petersen2024mathematical}
    - \citef{dong2025beyond}
    - \citef{yu2025dapo}
}}

}

\subtree[2025-03]{
\title{March, 2025}

\subtree[2025-03-31]{\mdnote{2025-03-31}{\tags{#os #rust}
- [There is no Vibe Engineering](https://serce.me/posts/2025-31-03-there-is-no-vibe-engineering)
- found [Koto Programming Language](https://koto.dev/), it's not so DSL-friendly like Rhai, but a reasonably good script language embeddable in Rust
- [Thoughts on ECS](https://blog.voxagon.se/2025/03/28/thoughts-on-ecs.html)
- [Expressing Japanese Grammar Through TypeScript Type System](https://github.com/typedgrammar/typed-japanese/blob/main/blog.md)
    - I really wanted this for French, except for not in TypeScript, but something Rust-like
}}

\subtree[2025-03-30]{\mdnote{2025-03-30}{\tags{#agent #idea}
- work on exporting Discord chat and feeding them to [RAG](https://github.com/stars/utensil/lists/llm-kb), the result is not quite ideal
- try DeepSeek-v3-0324, but still not as good as Claude 3.5 for my use cases
- re-evaluate [marimo](https://marimo.io/) as an alternative to testing with Jupyter notebooks
    - but it doesn' store outputs, and [the candidate testing solution](https://github.com/marimo-team/marimo/discussions/573) is not elegant
}}

\subtree[2025-03-28]{\mdnote{2025-03-28}{\tags{#os #rust #✍️}
- found
    - \citef{bach2024learning}
    - \citef{feng2023winding}, and read [the blog post](https://nzfeng.github.io/research/WNoDS/index.html)
    - \citef{williams2025simulating}
- found [Xee: A Modern XPath and XSLT Engine in Rust](https://blog.startifact.com/posts/xee/) which could be used to process Forester XMLs in the future
- found [The Mean-ing of Loss Functions](https://jiha-kim.github.io/posts/the-mean-ing-of-loss-functions/)
- wrote [[uts-0167]]
}}

\subtree[2025-03-27]{\mdnote{2025-03-27}{\tags{#elixir #news #os #rust #zig}
- learn more about Elixir
    - [Running ML models in Elixir using Pythonx](https://samrat.me/running-ml-models-in-elixir-using-pythonx/)
    - [Embedded Zig with Elixir, Mandelbrot set](https://zig.news/ndrean/embedded-zig-with-elixir-mandelbrot-set-4e31)
    - [Rustler Precompilation guide](https://hexdocs.pm/rustler_precompiled/precompilation_guide.html)
    - learn about [axon](https://github.com/elixir-nx/axon) and the [Numerical Elixir (Nx)](https://github.com/elixir-nx) ecosystem
- [Why MCP Won](https://www.latent.space/p/why-mcp-won)
}}

\subtree[2025-03-24]{\mdnote{2025-03-24}{\tags{#os}
- slowly picking up open-source work, after fragmented learning due to the DeepSeek hype
- found [PeanoScript](https://peanoscript.mjgrzymek.com/tutorial), TypeScript but a theorem prover
- [attention is logarithmic, actually](https://supaiku.com/attention-is-logarithmic)
- \citef{roelfs2025willing}, the [Kingdon](https://github.com/tBuLi/kingdon) paper
}}

\subtree[2025-03-18]{\mdnote{2025-03-18}{\tags{#ocaml #os #racket #tui}
- found [Rhombus](https://rhombus-lang.org/), a Racket without parenthesis
- [Writing a SIGGRAPH paper (for fun) (2020)](https://www.mattkeeter.com/projects/siggraph/)
- [The 70\% problem: Hard truths about AI-assisted coding](https://addyo.substack.com/p/the-70-problem-hard-truths-about)
- learn about [owi: Cross-language Bugfinder](https://github.com/OCamlPro/owi)
- found \citef{murphy2024reinforcement}, some ML books by the same author are [on Github](https://github.com/AniruddhaChattopadhyay/Books)
- found \citef{prasolov1995intuitive}
}}

\subtree[2025-03-13]{\mdnote{2025-03-13}{- learn about \citef{helmstetter2013minimal}, a paper about determining whether a multivector is a versor, as versors are invertible lipschitzian elements, related to [galgebra#533](https://github.com/pygae/galgebra/issues/533)
}}

\subtree[2025-03-11]{\mdnote{2025-03-11}{\tags{#agent #category #lean #os #proof #quantum #sec}
- found
    - Math
        - [Category Theory Illustrated](https://github.com/abuseofnotation/category-theory-illustrated)
        - \citef{haydys2024introduction}
        - \citef{schmid2025gentle}
        - \citef{hayman2024lean}
        - \citef{fushida2020knot}
        - \citef{etingof2024introduction}
        - \citef{flori2013first}
        - [PLP - An Introduction to Mathematical Proof](https://personal.math.ubc.ca/~PLP/assets/plp.pdf) [[source](https://github.com/seckindemirbas/PLP)]
    - ML
        - [Demystifying Diffusion Models](https://goyalpramod.github.io/blogs/demysitifying_diffusion_models/#maths-of-reverse-diffusion-process)
        - \citef{guo2025deepseek}
        - \citef{li2023camel} for [Owl](https://github.com/camel-ai/owl)
}}

\subtree[2025-03-07]{\mdnote{2025-03-07}{\tags{#rust #zig}
- found some readings for Rust and Zig, see [native-land commits](https://github.com/utensil/native-land/commit/e1ced218d8ad3365acca745e38279306644e475f)

}}

}

\subtree[2025-02]{
\title{February, 2025}

\subtree[2025-02-27]{\mdnote{2025-02-27}{\tags{#raymarching #rss}
- [Raymarching The Gunk](https://jarllarsson.github.io/gen/gunkraymarcher.html)
}}

\subtree[2025-02-26]{\mdnote{2025-02-26}{\tags{#agent #codegen #news #proof #typst #z3}
- [Uncensor any LLM with abliteration](https://huggingface.co/blog/mlabonne/abliteration)
- [All the Transformer Math You Need to Know](https://jax-ml.github.io/scaling-book/transformers/)
- [[AINews] Claude 3.7 Sonnet](https://buttondown.com/ainews/archive/ainews-claude-37-sonnet/)
- learn about [Typst 0.13 is out now: Experimental HTML export, semantic paragraphs, and more](https://typst.app/blog/2025/typst-0.13/)
- [Where are all the Rewrite Rules?](https://www.philipzucker.com/rewrite_rules/), using [Knuckledragger](https://github.com/philzook58/knuckledragger), a down to earth, highly automated interactive proof assistant in Python, based on Z3
- [My LLM codegen workflow atm](https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/)
- found [The FFmpeg School of Assembly Language](https://github.com/FFmpeg/asm-lessons/blob/main/lesson_01/index.md)
- [Serving local LLMs with MLX](https://kconner.com/2025/02/17/running-local-llms-with-mlx.html)
- [Enough with all the Raft](https://www.hytradboi.com/2025/2016d6c4-b08d-40b3-af2f-67926ca8521f-enough-with-all-the-raft)
}}

}

\subtree[2025-01]{

\title{January, 2025}

\subtree[2025-01-23]{\mdnote{2025-01-23}{\tags{#news #typst #✍️}
- busy with Spring Festival
- WeRead books and wrote some reviews
- casual readings are starred in NetNewsWire
- learn stuff related to DeepSeek and MLX
- set up my new Mac Mini with M4 Pro, Logi MX Keys, MX Master 3, and 4 screen working environment
- organize my Chinese ancient poetry collection (in LaTeX, wishing to port to Typst in the future)
}

\subtree[2025-01-11]{\mdnote{2025-01-11}{\tags{#os #physics #quantum #render #rust #zig}
- articles on lobste.rs
    - [Elementary Water Rendering](https://jysandy.github.io/posts/gradient-water-rendering/)
    - [Prototyping in Rust](https://corrode.dev/blog/prototyping/)
    - [Go is a Well-Designed Language, Actually](https://mattjhall.co.uk/posts/go-is-well-designed-actually.html) v.s. [Why Go Should Sometimes Be a No-Go](https://brainbaking.com/post/2024/12/why-go-should-sometimes-be-a-no-go/)
    - [Zig's Comptime is Bonkers Good](https://www.scottredig.com/blog/bonkers_comptime/)
    - [Not every user owns an iPhone](https://calendar.perfplanet.com/2024/not-every-user-owns-an-iphone/)
        - First Contentful Paint (FCP)
        - Time To Interactive (TTI)
        - Interaction to Next Paint
    - [The Most Elegant Configuration Language](https://chshersh.com/blog/2025-01-06-the-most-elegant-configuration-language.html)
- found \citef{flori2012topos}
    - \citef{bielas2023applications} can provide some motivation and applications
        - [gutta cavat lapidem non vi, sed saepe cadendo](https://www.latin-is-simple.com/en/vocabulary/phrase/731/)
- wish to write more serious Zig in new year, found [Mach](https://machengine.org/)
- found *Histoire de la philosophie* by Émile Bréhier
}}

\subtree[2025-01-01]{\mdnote{2025-01-01}{- 📦 move to new office and get used to everything
- 🗓️ making plans for the new year
}}

}

}

}

\subtree[2024]{
\title{Year 2024}

\subtree[2024-12]{
\title{December, 2024}

\subtree[2024-12-30]{\mdnote{2024-12-30}{\tags{#gpu #lean #rust}
- [Fish 4.0: The Fish Of Theseus](https://fishshell.com/blog/rustport/), it's about Fish team porting Fish from C++ to Rust
- found [cargo-gpu](https://github.com/rust-gpu/cargo-gpu)
- [A letter to open-source maintainers](https://xuanwo.io/2024/10-a-letter-to-open-source-maintainers/)
    - I hope to make a release for both GAlgebra and lean4_jupyter before or around the end of the year
- [Dotfile Management using Stow](https://matty.dev/blog/2024-07-12-dot-file-management)
    - previously I was reluctant to use stow as it's written in Perl
    - maybe I'll also try `brew bundle` too
}}

\subtree[2024-12-27]{\mdnote{2024-12-27}{\tags{#rust #zig}
- [When Zig is safer and faster than Rust](https://zackoverflow.dev/writing/unsafe-rust-vs-zig)
    - and [How to Actually Write C](https://zackoverflow.dev/writing/how-to-actually-write-c)
- [PKMs: Less Management, More Knowledge](https://shantanugoel.com/2024/12/26/pkm-less-management-more-knowledge/)
    - found [capacities](https://capacities.io/) and [hoarder](https://hoarder.app/)
- [Gu Shi](https://clarkesworldmagazine.com/author/gu-shi/)'s *Möbius Continuum* and write a review on Weread
}}

\subtree[2024-12-24]{\mdnote{2024-12-24}{- found \citef{hutter2024introduction}
}}

\subtree[2024-12-13]{\mdnote{2024-12-13}{- recieved [pygae/galgebra#529](https://github.com/pygae/galgebra/issues/529) about Shirokov inverse, read \citef{shirokov2021computing}
}}

\subtree[2024-12-17]{\mdnote{2024-12-17}{\tags{#os}
- 🎿🪂
- reading Wang Guowei's philosophical works
- [Ghostty Is Native—So What?](https://gpanders.com/blog/ghostty-is-native-so-what/)
}}

\subtree[2024-12-15]{\mdnote{2024-12-15}{\tags{#news #os #proof #rust #✍️}
- [My Ph.D. advisor rewrote himself in bash](https://matt.might.net/articles/shell-scripts-for-passive-voice-weasel-words-duplicates/), and learn about how weasel words, passive voice, and lexical illusions can make technical writing less precise, clear, and convey a lack of proofreading
- [Playground Wisdom: Threads Beat Async/Await](https://lucumr.pocoo.org/2024/11/18/threads-beat-async-await/), and learn that in imperative programming, structured concurrency might be better than async/await, we don't always need to introduce functional programming concepts
- [From where I left](https://antirez.com/news/144) by antirez, the author of Redis, and learn that he likes the new license, and he does more work but better work by using AI to proofread and help testing the work instead of replace what he does better
- [Fermat’s Last Theorem — how it’s going](https://xenaproject.wordpress.com/2024/12/11/fermats-last-theorem-how-its-going/), and enjoy the story of finding the right work for fixing a fixable proof
- [Dude, where's my main?](https://samwho.dev/blog/dude-wheres-my-main/) and learn that executables can be position-independent just like libraries, and wonder if I can implement chaos engineering in Rust to learn more about low-level system design
- [post-mortems](https://github.com/danluu/post-mortems) for massive IT outage in recent years, and wish to keep a track of inspiring ones of them
- learn about [git-backdate](https://github.com/rixx/git-backdate), which can help me date unpushed commits better
}}

\subtree[2024-12-12]{\mdnote{2024-12-12}{\tags{#agent #proof #software}
- [How wide is a proof?](https://robwilson1.wordpress.com/2024/12/07/how-wide-is-a-proof/)
- found [Notes on Geometric Algebra](https://github.com/cloudcell/GA_Notes)
- skimmed \citef{wang2024agents} and related papers
}}

\subtree[2024-12-09]{\mdnote{2024-12-09}{- 🚧 busy
- reading 📘*Zen and the Art of Motorcycle Maintenance: An Inquiry into Values*
}}

\subtree[2024-12-01]{\mdnote{2024-12-01}{\tags{#git #os #render #rust}
- try Deepseek Deep Think, add [[uts-002I]]
- rethinking self-hosted git repos, CI, and pages, found
    - [Forgejo](https://code.readeck.org/)
    - [GitHub Pages App](https://docs.cloudron.io/apps/githubpages/) on Cloudron
- try using aider to [write Rust script](https://github.com/utensil/forest/compare/9bc1724154aa576b6bd2979e40adc94325522aaf...rust-script-aider), not so good
    - based on [an AoC Rust script example](https://github.com/ChristopherBiscardi/advent-of-code/blob/bc5ad528576194355f2fb1b6a03091d8bcd69f76/2024/rust/scripts/get-aoc-input.rs)
    - try QwQ
- try [copilot-more](https://github.com/jjleng/copilot-more), maybe settle on it
- [Clifford algebra or Lie algebra?](https://robwilson1.wordpress.com/2024/11/30/clifford-algebra-or-lie-algebra/)
- learn a bit more about Slang, V, and Lobster
- watch [Really amazing talk by Tomasz Stachowiak: Rendering Tiny Glades With Entirely Too Much Ray Marching](https://www.youtube.com/watch?v=jusWW2pPnA0&ab_channel=GraphicsProgrammingConference)
- [The Door ProblemA](https://lizengland.com/blog/2014/04/the-door-problem/) from [awesome-falsehood](https://github.com/kdeldycke/awesome-falsehood)
}}

}

\subtree[2024-11]{
\title{November, 2024}

\subtree[2024-11-29]{\mdnote{2024-11-29}{\tags{#gpu #rust}
- [Optimizing a Rust GPU matmul kernel](https://rust-gpu.github.io/blog/optimizing-matmul/)
}}

\subtree[2024-11-28]{\mdnote{2024-11-28}{\tags{#idea #quantum}
- found
    - \citef{broden2024knots}
    - \citef{etingof2024mathematical}
    - [Applied Linear Algebra and Differential Equations - Lecture notes for MATH 2350](https://www.math.hkust.edu.hk/~machas/applied-linear-algebra-and-differential-equations.pdf) by Jeffrey R. Chasnov
    - [Competitive Programmer's Handbook](https://github.com/pllk/cphb)
}}

\subtree[2024-11-27]{\mdnote{2024-11-27}{\tags{#haskell}
- [Haskell: A Great Procedural Language](https://entropicthoughts.com/haskell-procedural-programming)
}}

\subtree[2024-11-23]{\mdnote{2024-11-23}{- 🚧 busy
}}

\subtree[2024-11-22]{\mdnote{2024-11-22}{\tags{#os #shader}
- found [Slang](https://github.com/shader-slang/slang)
- [Exploring Async Runtimes by Building our Own](https://blog.maguire.tech/posts/explorations/exploring-async-runtimes/)
- found \citef{collas2018dirac}
}}

\subtree[2024-11-21]{\mdnote{2024-11-21}{\tags{#compiler #vulkan}
- found [Impala](https://anydsl.github.io/Impala.html)
    - skimmed
        - \citef{leissa2018anydsl}
        - \citef{perard2017ratrace}
    - related:
        - [shady](https://github.com/shady-gang/shady)
        - [Vulkan Clang Compiler](https://shady-gang.github.io/vcc/)
}}

\subtree[2024-11-20]{\mdnote{2024-11-20}{\tags{#os}
- skimmed
    - \citef{pepe2024staresnet}
    - \citef{filimoshina2024note}
}}

\subtree[2024-11-12]{\mdnote{2024-11-12}{\tags{#citation #lean #os #rust #✍️}
- experiments on using [aider](https://aider.chat/) for LLM assisted project-level pair programming
    - [this PR](https://github.com/utensil/lean4_jupyter/pull/2) is a most extensive one
- finish citation trace for GAlgebra, see [this PR](https://github.com/pygae/galgebra/pull/528) for relevant readings
- found \citef{riccardo2024towards}, Cat for DL
- found [Cario](https://www.cairo-lang.org/), a provable Rust-like language
}}

\subtree[2024-11-11]{\mdnote{2024-11-11}{\tags{#os}
- found [Bartosz Ciechanowski's blog](https://ciechanow.ski/)
- found \citef{michor2008topics} and \citef{milne2012algebraic}, helpful for [[ag-0001]]
- plan to read \citef{mosto2024templex}
}}

\subtree[2024-11-10]{\mdnote{2024-11-10}{\tags{#idea #lean #rust #wasm}
- contemplate the idea of better file management with Rust
- meet datachain, extism, revisit mage-ai, should evaluate kestra, contemplate the idea of ML orchestration with Rust where each node is a WASM plugin, [BAML](https://github.com/BoundaryML/baml) has some potential
- wish to get back more on Lean and Math in this month
}}

\subtree[2024-11-08]{\mdnote{2024-11-08}{\tags{#compiler #idea #rust}
- 🌴
- contemplate the idea of a bot to keep me going back to work on my projects, triggered by
    - an update of a related project
    - more than a month of inactivity
        - on the repo
        - or on a recent opened issue
- [gccrs: An alternative compiler for Rust](https://blog.rust-lang.org/2024/11/07/gccrs-an-alternative-compiler-for-rust.html)
}}

\subtree[2024-11-07]{\mdnote{2024-11-07}{\tags{#proof}
- [Isa Proof Shell](https://github.com/xqyww123/Isa-Proof-Shell)
}}

\subtree[2024-11-06]{\mdnote{2024-11-06}{\tags{#git #gpu #neovim #ocaml #os #render #rust #shader}
- [Forester 5.x git log](https://git.sr.ht/~jonsterling/ocaml-forester/log/forester-5.0-dev), not bumping to 5.x yet
- evaluate [HTMX](https://htmx.org/server-examples/) a bit
- [Why not just embed Neovim?](https://zed.dev/blog/zed-decoded-vim), will need to revisit Zed later
- [RustGPU: Pros&Cons](https://github.com/schell/renderling/blob/main/NOTES.md#cons--limititions--gotchas), the author [becomes a maintainer of RustGPU](https://rust-gpu.github.io/blog/2024/11/06/new-maintainers/)
- found [VR Schwarzschild black hole shader (works with SPS and SPS-I)](https://gist.github.com/MichaelMoroz/b35d456056f3b958962ffb93f37ac55c)
}}
}

\subtree[2024-10]{
\title{October, 2024}

\subtree[2024-10-30]{\mdnote{2024-10-30}{\tags{#✍️}
- finish [[uts-002H]]
}}

\subtree[2024-10-25]{\mdnote{2024-10-25}{\tags{#benchmark #formal #rust #tui}
- work on native-land
    - trying to make GA and math benchmark work, also evaluating the feasibility of benchmarking C++ libraries from Rust
    - pass CI on runpod
- work on formal-land, make Verso work
- debug various TUI tools
}}

\subtree[2024-10-18]{\mdnote{2024-10-18}{\tags{#formal #gpu #lean #neovim #rust}
- work on native-land, trying to make rust-gpu fully work
- work on formal-land, trying to establish the infrastructure to explore multiple Lean 4 projects with independent toolchains and dependencies
- switching to Neovim, make it work for Rust, Lean, and forester
- write [[uts-002F]]
- skim [The Lean Language Reference](https://lean-lang.org/doc/reference/latest/)
- start reading [Modern C++ Programming Course (C++03/11/14/17/20/23/26)](https://github.com/federico-busato/Modern-CPP-Programming)
}}

\subtree[2024-10-17]{\mdnote{2024-10-17}{\tags{#citation #haskell #physics #render #shader #vulkan #web #webgl}
- initial citation trace for \citef{james2015gravitational} and \citef{james2015visualizing}
- \citef{meseguer2023custom} (Vulkan, Ray-marching, Kerr black hole) [lrogerorrit/narwhalEngine](https://github.com/lrogerorrit/narwhalEngine)
- \citef{bruneton2020real} (CPU precal, WebGL2, Schwarzschild black hole) [ebruneton/black_hole_shader](https://github.com/ebruneton/black_hole_shader)
- skimmed \citef{fang2024identifying}
- learn about \citef{haftmann2013haskell}: the type class for Isabelle, but its expressiveness is limited, see discussions in \citef{schmoetten2024construction}
}}

\subtree[2024-10-16]{\mdnote{2024-10-16}{\tags{#benchmark #gpu #os}
- \citef{siskind2019automatic} and \citef{naumann2024matrix}, seems limited, but have some good references
- skim \citef{low2023gafro} (good library and benchmark) and \citef{eid2024developing} (good refs, but in C#)
- skim \citef{sharma2024comprehensive}, an interesting area with sparse tensors as an in-memory database in mind
- skim \citef{zhao2024felix} ([uiuc-arc/felix](https://github.com/uiuc-arc/felix)), which uses egg
}}

\subtree[2024-10-15]{\mdnote{2024-10-15}{\tags{#compiler}
- found \citef{raptis2024functoriality}
- found \citef{shaikhha2024tensor} and \citef{zhao2024felix}
- SDQLite \citef{schleich2023optimizing} (based on [SDQL](https://github.com/edin-dal/sdql)) is an intermediate language that expresses sparse tensor workloads by separating the tensoropt computations from the storage formats
- reminds me of \citef{wu2024multi}
}}

\subtree[2024-10-11]{\mdnote{2024-10-11}{\tags{#gpu}
- work on [native-land](https://github.com/utensil/native-land) about GPU computation, see relavant README updates.
}}

\subtree[2024-10-10]{\mdnote{2024-10-10}{\tags{#bevy #game #idea #rust}
- watch [Chris Biscardi - Bevy: A case study in ergonomic Rust](https://www.youtube.com/watch?v=CnoDOc6ML0Y)
- have a better idea about the game about fly, evade, slingshot, and shoot around black holes, 4D implicit surfaces
- explore [sketchfab](https://sketchfab.com/3d-models/black-hole-e410da98b1e5445eae2acafaaa53587d), [polyhaven](https://polyhaven.com/), and [openverse](https://openverse.org/), and have a basic idea about how to use them in the early stage of the game
- learn about [itch.io](https://itch.io/) to surveying existing games, and a [open revenue sharing](https://itch.io/updates/introducing-open-revenue-sharing) platform to release games
- found \citef{garrity2013algebraic}
}}

\subtree[2024-10-09]{\mdnote{2024-10-09}{\tags{#lean #os}
- [C++ Package Managers: The Ultimate Roundup](https://moderncppdevops.com/pkg-mngr-roundup/), and start using [xrepo](https://xrepo.xmake.io/) for C/C++ package management, it also supports a wide range of [package repositories](https://xmake.io/#/home?id=supported-package-repositories), including Conan, Conda, Vcpkg, Homebrew, Apt, and Cargo. But not [BinaryBuilder.jl ecosystem](https://github.com/JuliaPackaging/BinaryBuilder.jl) (see also [this FAQ](https://docs.binarybuilder.org/dev/FAQ/#Hey,-this-is-cool,-can-I-use-this-for-my-non-Julia-related-project?)).
- clarify the license for GinacLean, laying the ground for potential future work around [Cadabra 2](https://github.com/kpeeters/cadabra2), which is licensed under GPLv3
- learn about [Kento Okura's forest and Glade](https://kentookura.srht.site/) and [Nota](https://nota-lang.org/)
}}

\subtree[2024-10-08]{\mdnote{2024-10-08}{\tags{#formal #gpu #lean #llvm #os #vulkan #web #z3}
- add more plans in formal-land
- recovered [Research Codebase Manifesto](https://www.moderndescartes.com/essays/research_code/) from [Lean-MLIR](https://github.com/opencompl/lean-mlir)
- recovered [quotes from CICM 2020 Slack chat](https://gist.github.com/utensil/b4616dd5452d665318780c8a8b193dcc)
- make CubeCL example work
- add CI with WebGPU on Mac & Ubuntu thanks to `llvmpipe`, `lavapipe`, `Vulkan SDK`, `Mesa` setup by [tracel-ai/github-actions/setup-linux@v1](https://github.com/tracel-ai/github-actions/blob/v1/setup-linux/action.yml)
- found [Lorenz and modular flows: a visual introduction](https://www.josleys.com/articles/ams_article/Lorenz3.htm)
}}

\subtree[2024-10-07]{\mdnote{2024-10-07}{\tags{#news #os #rust}
- learned about [lobste.rs](https://lobste.rs/), a computing-focused community centered around link aggregation and discussion, a bit like Hacker News but less noise maybe
- [Rewriting Rust](https://lobste.rs/s/29a1eo/rewriting_rust) and [Josh Triplett's comment](https://www.reddit.com/r/rust/comments/1fpomvp/rewriting_rust/lozktuv/)
- \citef{wu2024multi} and learn about [mirage](https://github.com/mirage-project/mirage)
- port [[uts-001R]]
- make [the Railscasts theme for Zed](https://gist.github.com/utensil/a279928e07fe23558fa688ca4d82181e)
}}

\subtree[2024-10-06]{\mdnote{2024-10-06}{\tags{#apl #os #tla #z3}
- found [ipe](https://github.com/otfried/ipe) that is used extensively in [tungsteno](https://www.tungsteno.io/post/exp-classification_compact_surfaces/) ([source](https://github.com/TungstenHub/tngt-ipe/tree/master))
- [Why I use TLA+ and not(TLA+)](https://protocols-made-fun.com/specification/modelchecking/tlaplus/quint/2024/10/05/tla-and-not-tla.html), learn about PlusCal, [Quint](https://quint-lang.org/) and [Apalache](https://apalache-mc.org/) (TLA+ to Z3)
- trying to figure out if TLA+ can be run in browser via [TeaVM](https://www.teavm.org/) or [CheerpJ](https://cheerpj.com/cheerpj-core/)
}}

\subtree[2024-10-05]{\mdnote{2024-10-05}{\tags{#os #render #web}
- \citef{wang2024simple}
- \citef{estep2024rose}, and learn about \citef{paszke2021getting} [dex-lang](https://github.com/google-research/dex-lang)
- they are read on mobile app [Reflow](https://apps.apple.com/us/app/pdf-reflow/id1461144444) which has good PDF reflow support for math formulas in Arxiv papers, but not so good for other math book PDFs
}}

\subtree[2024-10-04]{\mdnote{2024-10-04}{\tags{#category #game #idea}
- learn about [catcolab.org](https://catcolab.org/) and double category
- learn about [Curved Diffusion: A Generative Model With Optical Geometry Control](https://anylens-diffusion.github.io/) from ECCV 2024
- [Reusing Styles from Tailwind CSS](https://tailwindcss.com/docs/reusing-styles), decide to use it for CSS refactor
- found [vanjs](https://github.com/vanjs-org/van), considering for using it for VDOM and SSR
- learn about the game [sgued/slingshot](https://codeberg.org/sgued/slingshot) (just like a recent idea about black hole puzzle game inspired by Star Trek: Discovery)
}}

\subtree[2024-10-03]{\mdnote{2024-10-03}{\tags{#os #render #rust #sci #shader}
- Differentiable Programming
    - found [Differentiable Programming for Image Processing and Deep Learning in Halide](http://gradient.halide.ai/) and [gradient-halide autodiff](https://github.com/jrk/gradient-halide/blob/master/test/correctness/autodiff.cpp) for halide
    - [Adelta: Automatic Differentiation for Discontinuous Programs](https://medium.com/@yutingyang.wh/adelta-automatic-differentiation-for-discontinuous-programs-de68b4bb8119) for [A𝛿: Autodiff for Discontinuous Programs – Applied to Shaders](https://pixl.cs.princeton.edu/pubs/Yang_2022_AAF/) \citef{yang2022delta}
    - found [Dr.Jit](https://github.com/mitsuba-renderer/drjit)
    - found [Stan Math Library](https://github.com/stan-dev/math)
    - found [Kokkos](https://github.com/kokkos/kokkos)
    - should eval the [Rust crates](https://github.com/rose-lang/rose/tree/main/crates) of Rose
- found [mistral.rs](https://github.com/EricLBuehler/mistral.rs) for LLM inference, which uses a HF candle fork internally
- found \citef{bennett2024anything}
}}

\subtree[2024-10-01]{\mdnote{2024-10-01}{\tags{#render #rust #shader}
- found \citef{wang2024simple} and \citef{tricard2024interval}
- work on Rust stuff, particularly read about [dioxus](https://github.com/DioxusLabs/dioxus)
}}

}

\subtree[2024-09]{
\title{September, 2024}

\subtree[2024-09-30]{\mdnote{2024-09-30}{\tags{#lean}
- skim [rubik-lean4](https://github.com/vihdzp/rubik-lean4) and be reminded of \citef{bonzio2018nxnxn} and \citef{salkinder2021nxnxn}
- skim [read-lean](https://github.com/madvorak/read-lean)
}}

\subtree[2024-09-29]{\mdnote{2024-09-29}{\tags{#gpu #os}
- watch [Coding Adventure: Optimizing a Ray Tracer (by building a BVH)](https://www.youtube.com/watch?v=C1H4zIiCOaI) and learn about the importance of BVH in ray tracing, and [gkjohnson/three-mesh-bvh](https://github.com/gkjohnson/three-mesh-bvh)
- collect [autodiff in GPU](https://github.com/stars/utensil/lists/ad-gpu)
- submit [a bug report to Chromium](https://issues.chromium.org/issues/370153438)
- thinking about separating devlog from reading diary
- thinking about turning my playground repos to monorepos by language/stack
}}

\subtree[2024-09-27]{\mdnote{2024-09-27}{\tags{#lean #sci}
- found \citef{massot2024teaching}
- noticed that [Scientific Computing in Lean](https://lecopivo.github.io/scientific-computing-lean/) is now written in Verso!
- checked some progress in [Type Checking in Lean 4](https://ammkrn.github.io/type_checking_in_lean4/)
- I should put together a list of resources for learning Lean, as I have been asked and answered this question multiple times
- improve the VSCode Forester extension to have [Hover, Go to definition, Search by title, and user-defined patterns for triggering completion](https://github.com/Trebor-Huang/vscode-forester/issues/9)
}}

\subtree[2024-09-26]{\mdnote{2024-09-26}{\tags{#bevy #os #rust #wasm #web}
- add [[uts-001N]]
    - [Compiling C to WebAssembly without Emscripten](https://surma.dev/things/c-to-webassembly/) and [WebAssembly without Emscripten](https://schellcode.github.io/webassembly-without-emscripten), a bit dead-end for me
    - found [twr-wasm](https://github.com/twiddlingbits/twr-wasm), a lightweight emscripten
    - I still need to learn more about wasmer and cranelift
- add [[uts-001P]]
- learn about [monorepo tools](https://monorepo.tools/): nx seems to have most [feature-complete](https://monorepo.tools/#tools-review) support for [most stacks](https://nx.dev/getting-started/intro#pick-your-stack), moon is the next best choice for [Bun.js](https://moonrepo.dev/docs/guides/javascript/bun-handbook)+[Rust](https://moonrepo.dev/docs/guides/rust/handbook) projects that I have in mind. Other resources:
    - [Building a Monorepo with Rust](https://earthly.dev/blog/rust-monorepo/)
- I need to learn more about [Salva](https://salva.rs/): fluids simulation in Rust that works with [Rapier](https://github.com/dimforge/rapier.js/), but it doesn't seem to have a JS binding yet, rapier even has an [r3f](https://github.com/dimforge/rapier.js/) package, and a plugin for bevy. See [FLUID SIMULATION - SIGGRAPH 2007 Course Notes](https://www.cs.ubc.ca/~rbridson/fluidsimulation/fluids_notes.pdf) to learn more about fluid simulation.
- learn about [WLJS](https://jerryi.github.io/wljs-docs/) for Wolfram Mathematica, recalled [my early Mathematica notebooks](https://github.com/utensil/mathematica-notebooks), and wish to do SSR for them
}}

\subtree[2024-09-25]{\mdnote{2024-09-25}{\tags{#biome #web}
- use `biome` for linting web source files
- add [[uts-001K]]
}}

\subtree[2024-09-24]{\mdnote{2024-09-24}{\tags{#web #webgl}
- add live reload
- improve various loading and WebGL animation experience
- found [David Tong: Lectures on Gauge Theory](https://www.damtp.cam.ac.uk/user/tong/gaugetheory.html)
}}

\subtree[2024-09-23]{\mdnote{2024-09-23}{\tags{#gpu #render #shader #✍️}
- more progress on [[ag-000G]], particularly on [[ag-001J]]
- found [shaderfrog](https://shaderfrog.com/)
- found [three-gpu-pathtracer](https://github.com/gkjohnson/three-gpu-pathtracer) and related projects, particularly [Physically Based Materials](https://gkjohnson.github.io/three-gpu-pathtracer/example/bundle/index.html), and that [Steve Trettel](https://x.com/stevejtrettel) uses it to render black holes and Hopf fibrations
- found \citef{yariv2020multiview} ([lioryariv/idr](https://github.com/lioryariv/idr))
}}

\subtree[2024-09-22]{\mdnote{2024-09-22}{\tags{#os #quantum}
- skimmed \citef{carosso2018geometric}: "Geometric quantization is an attempt at using the differential-geometric ingredients of classical phase spaces regarded as symplectic manifolds in order to define a corresponding quantum theory."
- skimmed \citef{pinkall2024differential}: "Unlike the common approach in existing textbooks on this topic, there is a strong focus on variational problems, ranging from elastic curves to surface that minimize area or Willmore functional."
- found [demo-geodesic-heat](https://github.com/davreev/demo-geodesic-heat) and [mesh-parameterize](https://github.com/davreev/demo-mesh-parameterize)
- found \citef{broue2024rings}
}}

\subtree[2024-09-19]{\mdnote{2024-09-19}{\tags{#diagram #✍️}
Make some progress on [[ag-000G]], particularly on mixing 4 elements (formulas, diagrams, algorithms, and readable working code).
}}

\subtree[2024-09-17]{\mdnote{2024-09-17}{\tags{#quantum}
- skimmed \citef{love2024role} \citef{quevedo2024cambridge} \citef{faddeev2009lectures} \citef{takhtajan2008quantum} \citef{komech2019lectures}, and \citef{madrid2005role}
}}

\subtree[2024-09-16]{\mdnote{2024-09-16}{\tags{#bevy #cg #game #os #render #rust #shader #visualization}
- found
  - [symbolica](https://github.com/benruijl/symbolica) for Rust and Python
  - [Rusph](https://github.com/JackNarvaez/Rusph): SPH algorithm in Rust for astrophysical simulations
  - [Bevy](https://bevyengine.org/): a game engine in Rust that could also be used for simulations
- looking for materials related to ray-marching with GA, found
  - \citef{keninck2019non}
  - \citef{hadfield2021exploring}
  - \citef{karpavicius2013real}
  - \citef{nelson2017visualizing} [talk](https://www.youtube.com/watch?app=desktop&v=YpKWa8vrULk&t=1629s)
  - [pga3.glsl](https://git.sr.ht/~srasu/game_engine/tree/master/item/shader/include/pga3.glsl)
  - [Normals and the Inverse Transpose, Part 1: Grassmann Algebra](https://www.reedbeta.com/blog/normals-inverse-transpose-part-1/) in 2018
}}

\subtree[2024-09-15]{\mdnote{2024-09-15}{\tags{#apl #benchmark #compiler #gpu #os #render #rust #sci #shader #web}
- found [Compile Julia code to WebAssembly](https://tshort.github.io/WebAssemblyCompiler.jl/stable/)
- found [SHADERed](https://shadered.org/shaders) as another source of shader examples, particularly some are written in Rust, supported via one of its plugins
- looking for ways to include 3D models in LaTeX, found
  - asymptote
    - [that can render .obj](https://asymptote.sourceforge.io/gallery/3Dwebgl/galleon.asy)
    - [that works in Overleaf](https://www.overleaf.com/latex/templates/asymptote-3d-graphics/dkkcmszqzvcy)
  - [MeshLab](https://www.meshlab.net/) that can export models to formats supported by [media9](https://ctan.org/pkg/media9)
- watched [Mike Seddon - Rust GPU Compute](https://www.youtube.com/watch?app=desktop&v=3sk4ih0RULE&t=1608s), found
  - [Bend](https://github.com/HigherOrderCO/Bend)
  - [faer-rs](https://github.com/sarah-ek/faer-rs)
  - [cudarc](https://github.com/coreylowman/cudarc)
  - [tinygrad](https://github.com/tinygrad/tinygrad)
  - [diol](https://github.com/sarah-ek/diol): benchmarking
  - [wgpu-mm](https://github.com/FL33TW00D/wgpu-mm)
    - [Implementing Matrix Multiplication with WebGPU in Safari](https://jott.live/markdown/webgpu_safari) for optimized matrix multiplication on WebGPU
  - [Fast CUDA SGEMM from Scratch](https://github.com/siboehm/SGEMM_CUDA)
  - [linfa](https://github.com/rust-ml/linfa): `scikit-learn` in Rust
  - [gpu.cpp](https://github.com/AnswerDotAI/gpu.cpp)
  - [CubeCL](https://github.com/tracel-ai/cubecl) from Burn team
  - [Candle](https://github.com/huggingface/candle) from HF team
- read
  - [WebGPU — All of the cores, none of the canvas](https://surma.dev/things/webgpu/)
  - [How to Optimize a CUDA Matmul Kernel for cuBLAS-like Performance: a Worklog](https://siboehm.com/articles/22/CUDA-MMM)
  - [Autotune for GPU Kernels: Ensuring Consistent Peak Performance](https://burn.dev/blog/autotune-for-gpu-kernels/) from Burn team
  - [WebGPU Compute Shader Basics](https://webgpufundamentals.org/webgpu/lessons/webgpu-compute-shaders.html)
- work through [WebGPU Puzzles](https://gpupuzzles.answer.ai/)
- learned about [APL](https://xpqz.github.io/learnapl/intro.html) and [BQN](https://mlochbaum.github.io/BQN/index.html)
- a portion of [The Dao Of FP](https://github.com/BartoszMilewski/Publications/tree/master/TheDaoOfFP)
- learned about [fpgatoy](https://github.com/davidar/fpgatoy)
}}

\subtree[2024-09-12]{\mdnote{2024-09-12}{\tags{#✍️}
- make a start on [[ag-000G]]
- make [[ag-000O]]
}}

\subtree[2024-09-11]{\mdnote{2024-09-11}{\tags{#os #shader}
- trying to figure out curvature calculation in shaders
  - [Screen Space Curvature Shader](https://madebyevan.com/shaders/curvature/) is a trick to mimic curvature calculation in shaders,using [dFdx, dFdy in GLSL](https://registry.khronos.org/OpenGL-Refpages/gl4/html/dFdx.xhtml), [Curvature shader by iY0Yi](https://www.shadertoy.com/view/fsGXzc) used it but it shows certain shower door effect
  - [glsl-autodiff](https://github.com/sibaku/glsl-autodiff) properly uses forward auto differentiation to calculate curvature in shaders, but it requires rewrite every math function for bookkeeping the gradient and the Hessian
}}

\subtree[2024-09-10]{\mdnote{2024-09-10}{\tags{#shader}
- work out shader for [[uts-001D]]
- inspired by [Surface Plotter](https://github.com/jaxry/surface-plotter) ([demo](https://jaxry.github.io/surface-plotter/)), read
  - [Marching Cubes](http://algorithm-interest-group.com/assets/slides/marching_cubes.pdf)
  - [Polygonising a scalar field](https://paulbourke.net/geometry/polygonise/)
  - [CIS700 Procedural Graphics: Implicit surfaces - Marching cubes](https://cis700-procedural-graphics.github.io/assignments/proj6-marchingcubes/)
  - [Marching Cubes Part 1: Explaining marching cubes](https://polycoding.net/marching-cubes/part-1/)
}}

\subtree[2024-09-09]{\mdnote{2024-09-09}{\tags{#formal #lean #optimization #os #rust #wasm}
- add `egglog` and `ginac`, and streamline the build process of Rust WASM dependencies
- reading source of projects using egg: `jafioti/luminal`, `marcusrossel/lean-egg`, `verified-optimization/CvxLean` etc. TODO: read more egg papers: \citef{rossel2024bridging}\citef{rossel2024equality}\citef{bentkamp2023verified}
}}

\subtree[2024-09-08]{\mdnote{2024-09-08}{\tags{#gpu #render #web #z3}
- mark candidates for rendering PDB: [[uts-001A]]
- fail to run Z3 in browser (due to `SharedArrayBuffer` again)
- the source of examples of [uwal](https://github.com/UstymUkhman/uwal) and the corresponding articles at [webgpufundamentals.org](https://webgpufundamentals.org/)
- [[uts-001B]] and [[uts-001C]]
}}

\subtree[2024-09-07]{\mdnote{2024-09-07}{\tags{#shader}
- Skim through \citef{lengyel2024foundations}
- experiments on compute shaders
}}

\subtree[2024-09-06]{\mdnote{2024-09-06}{\tags{#idea}
- Polish [[ca-0001]]
- Some more on [[uts-000C]]
- Re-skim \citef{trautman1997clifford}
- \citef{baez2010algebra} and make 97 notes
- [Notes on Distributed Systems for Young Bloods (2013)](https://www.somethingsimilar.com/2013/01/14/notes-on-distributed-systems-for-young-bloods/)
}}

\subtree[2024-09-05]{\mdnote{2024-09-05}{\tags{#formal #lean #sec #✍️}
\ul{
\li{Ported the rest of the prelimilary part of \citef{wieser2024blueprint} to [[ca-0001]], except [#{Z_2}-graded derivations #{i_f}, anti-derivation](https://utensil.github.io/lean-ga/blueprint/sec-ops.html#antiDeriv)
}
\li{Make a start on [[spin-0010]]}
}
}}

\subtree[2024-09-04]{\mdnote{2024-09-04}{\tags{#citation #idea #os}
- \citef{hamilton2023supergeometric} and \citef{hamilton2023unification}: illuminating path towards a unified theory of four fundamental forces, the first theory seemingly capable of reaching the same level of elegance and simplicity as \citef{wilson2024discrete}, the authors are also aware of potential issues and worked out viable solutions to address them. Unfortunately, there are no citations as of now.
  - \citef{trautman1997clifford} has certain historical remarks and a unusual approach that spinor representations are treated first for odd-dimensional spaces
spaces
- \citef{henry2024geometry} (found on Mar 11, 2025 again)
- \citef{ahle2024tensor} and [Graphical tensor notation for interpretability](https://www.lesswrong.com/posts/BQKKQiBmc63fwjDrj/graphical-tensor-notation-for-interpretability)
- [The Calculus of Variations and Geometry: a Historical Perspective](https://people.cmm.minesparis.psl.eu/users/velasco/JPB.pdf)
- Data-driven linearization of dynamical systems
- Meta Flow Matching: Integrating Vector Fields on the Wasserstein Manifold
}}

\subtree[2024-09-03]{\mdnote{2024-09-03}{\tags{#cg #formal #physics #sci #sec}
- \citet{ch. 1-4}{grassmann2000extension}
- \citet{sec. 1.1-2.8}{browne2012grassmann}
- \citef{loret2024universe}
- some slides of [AGACSE 2024](https://staff.science.uva.nl/l.dorst/AGACSE2024/programme/index.html)
  - The Willing Kingdon Clifford Algebra Library
  - Look, Ma, No Matrices!
  - Spacetime Algebra and Octonions: Links with the groups used in particle physics and computer graphics
  - Construction of Exceptional Lie Algebra G2 and Non-Associative Algebras using Clifford Algebra
  - On Multidimensional Dirac-Hestenes Equation
  - On Rank of Multivectors in Geometric Algebra
  - From Null Monomials to Versors in Conformal Geometry
  - Look, Ma, No Trigonometry!
  - Dual Spaces are Real: Orientation Types in Geometric Algebras
  - On Generalized Degenerate Lipschitz and Spin Groups
  - Projective and Conformal Formulations of Electromagnetism
  - Representation and Gauge Freedom in Electromagnetism and Acoustics
  - Pencils and set operators in 3D CGA
  - Factorizations of the Conformal Villarceau Motion
}}

}

\subtree[2024-01~08]{
\title{January to August, 2024}

\subtree[2024-08-11]{\mdnote{2024-08-11}{The readings during this period are reflected in

- [[uts-000G]]
- [[uts-000H]]

Many experiments on Forester are done, as summarized in [[uts-000X]].

}}


\subtree[2024-07-27]{\mdnote{2024-07-27}{The readings during this period are yet to be reflected in [[ag-0001]].
}}

\subtree[2024-05-09]{\mdnote{2024-05-09}{The readings during this period are reflected in [[tt-0001]].

[[uts-000C]] was ported to Forester on 07-22.
}}

\subtree[2024-04-25]{\mdnote{2024-04-25}{The readings during this period are reflected in [[spin-0001]]. Some are yet to be reflected in [[hopf-0001]].
}}

\subtree[2024-01-01]{\mdnote{2024-01-01}{\tags{#os}
The readings during this period are reflected in

- [My math interests in 2024](https://utensil.github.io/blog/posts/math-2024/)
- [Studying group algebras with GAP](https://utensil.github.io/blog/posts/group-algebra/)
- [Notes on Zeon Algebra](https://utensil.github.io/blog/posts/zeon-algebra/)
}}
}

}

\subtree[2023]{
\title{Year 2023}
\subtree[2023-09~12]{
\title{September to December, 2023}
\md{
I was working on Lean related projects during this period, my readings are partially reflected in my [Lean 4 Playground](https://utensil.github.io/formal-land/lean4/), but most of the time I was reading [Lean's Zulip Chat messages](https://leanprover.zulipchat.com/). Maybe one day I should archive my stars on Zulip Chat.
}
}
\subtree[2023-02~08]{
\title{February to August, 2023}
\md{
The readings during this period are reflected in

- my [LLM Daily Picks](https://github.com/utensil/llm-playground/blob/main/daily_picks.md)
- my blog post [Transformers: from self-attention to performance optimizations](https://utensil.github.io/blog/posts/transformer/)
}
}
}

\block{Year 2014~2023}{
The interests during this period are reflected in [[uts-0166]].
}

}

