\import{cg-macros}
\import{ag-0017}
% clifford hopf spin tt ag math draft cg
\tag{cg}

\taxon{figure}

\title{ray trace diagram}

\let\ball/screen{
  \patch{\ball/new}{
    [center/id]{sreenball}
    [radius]{1.5cm}
  }
}

\let\point/camera{
  \patch{\point/new}{
    [id]{pcamera}
    [label]{camera}
    [radius]{0cm}
    [angle]{0}
  }
}

\let\screen{
  \patch{\screen/new}{
  }
}

\figure{
\tikzfig{
\tikzset{>=latex}

\begin{tikzpicture}

  \myball#draw/shadow
  \myball#coord/center
  \myball#draw/boundary
  \myball#draw/body
  \myball#draw/radius
  \myball#draw/center
  \myball#draw/center/label

  \begin{pgfonlayer}{foreground}
  \point/p#coord
  \point/p#path/arrow
  % \point/p#draw/arrow
  \point/p#draw/dot
  \point/p#draw/label
  \end{pgfonlayer}

  % set Omega
  \coordinate (ball/label) at (45:1.5*\myball#radius);
  \draw ($(\myball#center/id)!0.5!(ball/label)$) -- ($(\myball#center/id)!0.8!(ball/label)$) node at (ball/label) {$\Omega$};

  % intersection of arrow p and ball boundary
  \path[name intersections={of=\myball#boundary/id and \point/p#arrow/id, by={I}}];

  \measure/d#draw

  \begin{scope}[
    shift=(-30:-5cm),
    scale=0.5,
    % canvas is zy plane at x=0]
    plane x={(0,0,-1)},
    plane y={(0,1,0)},
    canvas is plane]   % [xshift=-4cm,yshift=2.5cm,rotate=40,xscale=0.28,yscale=0.3]

    \screen#draw/border
    \screen#draw/body
    \screen#draw/label

    % draw the same ball on screen

    \ball/screen#draw/shadow
    \ball/screen#coord/center
    \ball/screen#draw/center
    \ball/screen#draw/boundary
    \ball/screen#draw/body
  \end{scope}

  \begin{scope}[
    shift=(-30:-7cm),
    scale=0.5,
    plane x={(0,0,-1)},
    plane y={(0,1,0)},
    canvas is plane]

    \point/camera#coord

  \end{scope}

  \colorlet{photoncol}{yellow!60!orange!95!black}
  \tikzstyle{photon}=[thick,line cap=round,photoncol,decorate,decoration={
  snake,amplitude=.4mm,segment length=2.5mm,post length=0mm}]

  \begin{pgfonlayer}{background}
    \draw[photon] (\point/camera#id) -- (\ball/screen#center/id);
  \end{pgfonlayer}

  \draw[photon] (\ball/screen#center/id) -- (I);

  % adapted from https://tex.stackexchange.com/a/288101/75671
  \tikzset{
    camera/.pic={
      \tikzset{%
        every edge quotes/.append style={midway, auto},
        /camera/.cd,
        #1
      }
      \tikzmath{
        \aspect = cos(\cubezang);
      }
      \begin{scope}[z={(-180+\cubezang:1cm)}, x={(-\cubexang:1cm)}]
      % \draw[color=red] (0,0,0) -- (1,0,0);
      % \draw[color=blue] (0,0,0) -- (0,1,0);
      % \draw[color=green] (0,0,0) -- (0,0,1);
      \filldraw [fill=white,every edge/.append style={pic actions, densely dashed, opacity=0.0}, pic actions]
      (0,0,0) coordinate (o) -- ++(-\cubescale*\cubex,0,0) coordinate (a) -- ++(0,-\cubescale*\cubey,0) coordinate (b) edge coordinate [pos=1] (g) ++(0,0,-\cubescale*\cubez)  -- ++(\cubescale*\cubex,0,0) coordinate (c) -- cycle
      (o) -- ++(0,0,-\cubescale*\cubez) coordinate (d) -- ++(0,-\cubescale*\cubey,0) coordinate (e) edge (g) -- (c) -- cycle
      (o) -- (a) -- ++(0,0,-\cubescale*\cubez) coordinate (f) edge (g) -- (d) -- cycle;

      % \tikzmath{
      %   \lenslength = 0.5*\cubescale*\cubex;
      %   \lensradius = 0.2*\cubescale*\cubey;
      % }
      \coordinate (lens/center) at ($(o)!0.4!(e)+(0, -0.1*\cubescale*\cubey,0)$);
      % \draw (lens/center) circle [name path=lensback,radius=\lensradius,canvas is yz plane at x=0];
      % \coordinate (lens/nosecenter) at ($(lens/center)+(\lenslength,0,0)$);
      % \draw (lens/nosecenter) circle [name path=lensfront,radius=\lensradius,canvas is yz plane at x=0];
      % \draw (lens/center) ++(0,\lensradius,0) -- ($(lens/nosecenter)+(0,\lensradius,0)$);
      % \draw (lens/center) ++(0,-\lensradius,0) -- ($(lens/nosecenter)+(0,-\lensradius,0)$);

      \node [cylinder, cylinder uses custom fill, cylinder end fill=white,
         cylinder body fill=white,draw,shape aspect=\aspect,inner xsep=3.5*\cubescale*\cubey, inner ysep=9.0*\cubescale*\cubey,rotate=-\cubexang] at (lens/center) {};

      \end{scope}
    },
    /camera/.search also={/tikz},
    /camera/.cd,
    width/.store in=\cubex,
    height/.store in=\cubey,
    depth/.store in=\cubez,
    units/.store in=\cubeunits,
    scale/.store in=\cubescale,
    zangle/.store in=\cubezang,
    xangle/.store in=\cubexang,
    width=10,
    height=10,
    depth=10,
    units=cm,
    scale=.1,
  }

  \coordinate (camera) at (-30:-7.6cm);
  \pic at (camera) {camera={width=1.5, height=2.5, depth=3, scale=0.15, units=cm, zangle=30, xangle=20}};
  \node[above] at ($(camera)+(0, 0.5cm)$) {\point/camera#label};

\end{tikzpicture}
}

\figcaption{Inspired by [Ray trace diagram](https://en.wikipedia.org/wiki/File:Ray_trace_diagram.svg) from Wikipedia}
}

% \tikzfig\verb>>>|
% \colorlet{mydarkblue}{blue!40!black}
% \colorlet{watercol}{blue!80!cyan!10!white}
% \colorlet{darkwatercol}{blue!80!cyan!80!black!30!white}
% \tikzstyle{water}=[draw=mydarkblue,top color=watercol!90,bottom color=watercol!90!black,middle color=watercol!50,shading angle=0]
% \tikzstyle{horizontal water}=[water,
%   top color=watercol!90!black!90,bottom color=watercol!90!black!90,middle color=watercol!80,shading angle=0]
%   \def\LL{2.0}         % length pipe left
%   \def\LR{1.7}         % length pipe right
%   \def\L{3.0*\LL}      % total length
%   \def\l{\L-\LL-\LR}   % length between pipes
%   \def\xL{0.24*\LL}    % position volume left
%   \def\xR{\L-0.80*\LR} % position volume right
%   \def\lL{0.7*\LR}     % length volume left
%   \def\lR{\lL*\ry/\Ry} % length volume right
%   \def\rx{0.08}        % small pipe horizontal radius left
%   \def\ry{0.32}        % small pipe vertical radius left
%   \def\Rx{0.18}        % big pipe vertical radius right
%   \def\Ry{0.90}        % big pipe vertical radius right
%   \def\v{1.3}          % velocity magnitude
% \begin{tikzpicture}
%   \draw[horizontal water]
%     (\L-\LR,-\Ry) -- (\L,-\Ry) arc(-90:90:{\Rx} and \Ry)
%     --++ (-\LR,0) arc(-90:90:{\Rx} and -\Ry) -- cycle;
% \end{tikzpicture}
% >>>